<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Interop.MapWinGIS</name>
    </assembly>
    <members>
        <member name="T:MapWinGIS.IChart">
            <summary>
            Represents a single chart on the map.
            </summary>
            \dot
            digraph chart_diagram {
            nodesep = 0.3;
            ranksep = 0.3;
            splines = ortho;
            
            node [shape= "polygon", peripheries = 3, fontname=Helvetica, fontsize=9, color = gray, style = filled, height = 0.2, width = 0.8];
            lb [ label="Chart" URL="\ref Chart"];
            
            node [color = tan peripheries = 1 height = 0.3, width = 1.0];
            lbs [ label="Charts" URL="\ref Charts"];
            
            edge [ dir = "none", arrowhead="open", style = solid, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060", labeldistance = 0.6 ]
            lbs -> lb [ URL="\ref Charts.get_Chart()", tooltip = "Charts.get_Chart()", headlabel = "   n"];
            }
            \enddot
            
            <a href = "diagrams.html">Graph description</a>\n\n
            <remarks>The number of bars or sectors depends on the number of charts fields specified in the instance of the Charts class it belongs to.
            In the same way the visualization options depends in the corresponding settings of the Charts class. 
            Each chart borrows it's data from attribute table of shapefile (see Table). So the only way to change the height of individual 
            bars is to modify the values in the underlying .dbf table.\n\n
            This class isn't meant for creation of the new charts but only for modification of position and 
            visibility of the existing ones. Initially charts are generated by using Charts.Generate() method.
            Afterwards to access a single chart Charts.get_Chart() property can be used.</remarks>
            \code
            // let's assume we need to change the properties of the chart for the 17-th shape of the shapefile
            public void ModifyChart(AxMap map, Shapefile sf)
            {
               int shapeIndex = 16;    // shape indices are 0-based
               
               // retrieving chart object
               Chart chart = sf.Charts.get_Chart(shapeIndex);
               if (chart != null)
               {
                   // is it currently displayed on the screen?
                   MessageBox.Show("The chart is drawn: " + chart.IsDrawn.ToString());
                   
                   chart.PositionX += 10.0;    // let's move it to the right by 10 map units
                   chart.PositionY -= 5.0;     // let's move it to the bottom by 5 map units
                   chart.Visible = true;       // ensure that it's visible
                   map.Redraw();   // redraw is needed to see the changes of position
               }
               else
               {
                   MessageBox.Show(string.Format("The chart with index {0} doesn't exists", shapeIndex));
               }
            }
            \endcode
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IChart.IsDrawn">
            <summary>
            Returns a boolean value which indicates whether the chart is currently displayed on the map.
            </summary>
            <remarks>%Chart can be left undrawn because of the following reasons:
            - shapefile layer is set invisible;
            - dynamic visibility activated for the shapefile layer or charts;
            - chart is located outside the current map extents;
            - all the charts or this particular chart were set to be invisible;
            - it overlaps already drawn charts and Charts.AvoidCollisions is set to true.</remarks>
        </member>
        <member name="P:MapWinGIS.IChart.PositionX">
            <summary>
            Gets or set the horizontal position of chart in map units.
            </summary>
        </member>
        <member name="P:MapWinGIS.IChart.PositionY">
            <summary>
            Gets or sets the vertical position of the chart in map units.
            </summary>
        </member>
        <member name="P:MapWinGIS.IChart.ScreenExtents">
            <summary>
            Returns the rectangle which the chart occupies on the screen.
            </summary>
            <remarks>This property will return NULL in case Chart.IsDrawn returns false.</remarks>
        </member>
        <member name="P:MapWinGIS.IChart.Visible">
            <summary>
            Gets or sets the value which indicates whether the chart should be drawn on the map.
            </summary>
            <remarks>Setting this property to true doesn't mean that it actually will be displayed on the map (see Chart.IsDrawn).</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "T:MapWinGIS.IChartField" -->
        <member name="P:MapWinGIS.IChartField.Color">
            <summary>
            Gets or sets the colour of the bar or sector.
            </summary>
        </member>
        <member name="P:MapWinGIS.IChartField.Index">
            <summary>
            Gets or sets the index of field from attribute table (.dbf) to take values from.
            </summary>
        </member>
        <member name="P:MapWinGIS.IChartField.Name">
            <summary>
            Gets or sets the name of the chart field.
            </summary>
            <remarks>In most cases it should be set equal to the name of the .dbf field from which
            the data is taken, unless some more comprehensive alias is needed.</remarks>
        </member>
        <member name="T:MapWinGIS.ICharts">
            <summary>
            Provides functionality for generation and managing the charts on the map. 
            </summary>
            \dot
            digraph charts_diagram {
            nodesep = 0.3;
            ranksep = 0.3;
            splines = ortho;
            
            node [shape= "polygon", peripheries = 3, fontname=Helvetica, fontsize=9, color = gray, style = filled, height = 0.2, width = 0.8];
            cht [ label="Chart" URL="\ref Chart"];
            cfld [ label="ChartField" URL="\ref ChartField"];
            
            node [color = tan, peripheries = 1, height = 0.3, width = 1.0];
            charts [ label="Charts" URL="\ref Charts"];
            
            node [style = dashed, color = gray];
            sf [ label="Shapefile" URL="\ref Shapefile"];
            
            edge [ dir = "none", arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060", labeldistance = 0.6 ]
            sf -> charts [ URL="\ref Shapefile.Charts", tooltip = "Shapefile.Labels", headlabel = "   1"];
            edge [style = solid]
            charts -> cht [ URL="\ref Charts.get_Chart()", tooltip = "Labels.get_Chart()", headlabel = "   n"];
            charts -> cfld [ URL="\ref Charts.get_Field()", tooltip = "Labels.get_Field()", headlabel = "   n"];
            }
            
            \enddot
            <a href = "diagrams.html">Graph description</a>\n\n
            The charts obtain their data from the fields of attribute table of the shapefile. 
            A single bar or sector of the chart is mapped to a certain field by means of ChartField class. The number of fields 
            to be displayed can be changed by Charts.AddField, Charts.RemoveField. The fields should be of numeric types, either 
            double or integer.\n\n
            Two types of charts are available:
            -# Pie charts:
                - are suitable when it's necessary to display the parts of the whole phenomenon, 
                like the percentage of land use by type (urban, forest, agricultural, etc.);
                - it's possible to set varying width for the charts depending of the certain field, 
                which can give an idea about the values for different shapes on comparative scale;\n
                .
            -# Bar charts: 
                - they can be used to display virtually any numeric data;
                - it still makes sense to display fields with the same units of measure;\n
                .
            .
            \image html charts.png
            To generate charts one basically needs:\n
            -# To specify a set of fields which will be included (see Charts.AddField and Charts.AddField2). \n\n
            -# To define the positions of the charts relative to the parent shape. 
                - Charts.Generate method is the only one to do this job;
                - for large shapefile this procedure can be time consuming, therefore there are means for caching this data to 
                avoid additional recalculations;
                - it's possible to change the generated positions of the individual charts (see Chart.PositionX, Chart.PositionY).\n\n
                .
            -# To set the display options of the charts. The options include:
                - the size of charts (Charts.PieRadius for pie charts and Charts.BarHeight for bar charts; the values of these 2 types of charts don't affect each other);
                - the colour of the charts fill and outline;
                - labels with the values from the underlying table, which correspond to particular bar or sector.\n
                .
            .
            
            \code
            private void GenerateCharts(Shapefile sf)
            {
                sf.Charts.AddField2(0, 255);    // index of field, colour
                sf.Charts.AddField2(1, 255);
                sf.Charts.Generate(tkLabelPositioning.lpCentroid);
                sf.Charts.ChartType = tkChartType.chtBarChart;
            }
            \endcode
            
            Individual charts can be accessed using Charts.get_Chart() property. It's possible to change their properties like visibility or position.
            Chart.ScreenExtents property return screen coordinates occupied by particular chart which provides a convenient way for 
            highlighting or mouse dragging operation on the chart.\n
            
            By default charts are drawn for each shape of the shapefile, but if only a subset of shapes require charts 
            it's possible to set Charts.VisibilityExpression, or toggle  the visibility of individual charts (Chart.Visible).
            Though the number of individual charts will always be equal to the number of shapes in the shapefile, which 
            means that charts will be automatically added and removed after corresponding editing operation in the parent shapefile.
            It's not possible to set different visualization options or the number of fields for individual charts.\n
            
            It's not possible to use charts independently of the shapefile layer. But it's possible to create 
            a dummy shapefile, populate it with data and display any charts at any location. 
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.ICharts.AddField(MapWinGIS.ChartField)">
            <summary>
            Adds a field to the chart. 
            </summary>
            <remarks>The field will be represented as bar or sector depending on chart type.</remarks>
            <param name="Field">A field to add.</param>
            <returns>True on success or false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ICharts.AddField2(System.Int32,System.UInt32)">
            <summary>
            Adds a field to the chart. 
            </summary>
            <param name="FieldIndex">The index of the field in the attribute table to take values from.</param>
            <param name="Color">The colour of the sector or bar for visualization of a field.</param>
        </member>
        <member name="P:MapWinGIS.ICharts.AvoidCollisions">
            <summary>
            Gets or set a boolean value which indicates whether charts can overlap each other.
            </summary>
            <remarks>Setting this property to true will prevent the drawing of overlapping
            charts and hence some charts can be left undrawn. The default value is true.</remarks>
        </member>
        <member name="P:MapWinGIS.ICharts.BarHeight">
            <summary>
            Gets or sets the maximum height of the bar chart in pixels.
            </summary>
            <remarks>The value set will be used to display the maximum value of the field. 
            The bar height for smaller values will be proportionally smaller. 
            </remarks>
        </member>
        <member name="P:MapWinGIS.ICharts.BarWidth">
            <summary>
            Gets or sets the width of a single bar of the chart in pixels.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.Caption">
            <summary>
            Gets or sets the text string for description of the chart data. 
            </summary>
            <remarks>It can be used for clarification of the map's legend.</remarks>
        </member>
        <member name="P:MapWinGIS.ICharts.ChartType">
            <summary>
            Gets or sets the type of the charts.
            </summary>
            <remarks>Bar and pie charts are available. All charts of the shapefile
            are of the same type.</remarks>
        </member>
        <member name="M:MapWinGIS.ICharts.Clear">
            <summary>
            Clears the information about individual charts like position and visibility.
            </summary>
            <remarks>To restore the charts a call of Charts.Generate() is needed. The fields
            will remain untouched by this method.</remarks>
        </member>
        <member name="M:MapWinGIS.ICharts.ClearFields">
            <summary>
            Removes all fields which define bars or sectors of the chart.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.CollisionBuffer">
            <summary>
            Gets or sets the minimal distance between individual charts when Charts.AvoidCollisions is set to true.
            </summary>
            <remarks>This allows to arrange charts in more sparse pattern to make them more readable.
            Naturally the larger this distance is, the smaller is the number of charts which can be drawn
            on screen simultaneously.</remarks>
        </member>
        <member name="P:MapWinGIS.ICharts.Count">
            <summary>
            Returns the number of charts which is equal to the number of shapes in the parent shapefile.
            </summary>
        </member>
        <member name="M:MapWinGIS.ICharts.Deserialize(System.String)">
            <summary>
            Restores the state of the charts from the serialized string.
            </summary>
            <param name="newVal">Serialized string generated by Charts.Serialize().</param>
        </member>
        <member name="M:MapWinGIS.ICharts.DrawChart(System.IntPtr,System.Single,System.Single,System.Boolean,System.UInt32)">
            <summary>
            Draws a chart on the specified device context. Can be used for displaying of map legend.
            </summary>
            <param name="hdc">The handle of the device context.</param>
            <param name="x">The position of the left corner of the drawing in pixels.</param>
            <param name="y">The position of the top corner of the drawing in pixels.</param>
            <param name="hideLabels">When set to true the labels won't be drawn.</param>
            <param name="BackColor">The back colour of the device context. 
            Should be provided to ensure correct alpha blending when transparency is set.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.ICharts.DynamicVisibility">
            <summary>
            Gets or sets a value which indicates whether charts will be visible for all scales or in the given range of scales only.
            </summary>
            \see Charts.MaxVisibleScale, Charts.MinVisibleScale
        </member>
        <member name="M:MapWinGIS.ICharts.Generate(MapWinGIS.tkLabelPositioning)">
            <summary>
            Generates a chart for every shape of the parent shapefile.
            </summary>
            <remarks>This method is time consuming for large shapefiles, therefore consider the serialization of
            charts data after first generation.</remarks>
            <param name="Type">The position of chart relative to the parent shape.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.ICharts.GlobalCallback">
            <summary>
            Gets or sets a callback object to display progress and error information.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.ICharts.IconHeight">
            <summary>
            Gets the minimal height of the image to display a single chart.
            </summary>
            <remarks>The property can be used for interactive selection of charts and for drawing of legend.</remarks>
        </member>
        <member name="P:MapWinGIS.ICharts.IconWidth">
            <summary>
            Gets the minimal width of the image to display a single chart.
            </summary>
            <remarks>The property can be used for interactive selection of charts and for drawing of legend.</remarks>
        </member>
        <member name="M:MapWinGIS.ICharts.InsertField(System.Int32,MapWinGIS.ChartField)">
            <summary>
            Inserts a field which represents single bar or sector of the chart.
            </summary>
            <param name="Index">The index to insert the field at.</param>
            <param name="Field">The chart field object to insert.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ICharts.InsertField2(System.Int32,System.Int32,System.UInt32)">
            <summary>
            Inserts a field which represents single bar or sector of the chart.
            </summary>
            <param name="Index">The index to insert the field at.</param>
            <param name="FieldIndex">The index of the field from the attribute table (.dbf) to take values from.</param>
            <param name="Color">The colour of the fill.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.ICharts.Key">
            <summary>
            Gets or sets a string value associated with the object.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.LastErrorCode">
            <summary>
            Gets the code of the last error which took place inside the current instance of the class.
            </summary>
            <remarks>The use of this property will clear the error until the next error occurs.</remarks>
        </member>
        <member name="P:MapWinGIS.ICharts.LineColor">
            <summary>
            Gets or sets the color of the chart outline
            </summary>
        </member>
        <member name="M:MapWinGIS.ICharts.LoadFromXML(System.String)">
            <summary>
            Loads charts data from the XML file generated by Charts.SaveToXML.
            </summary>
            <param name="Filename">The filename to load data from.</param>
            <returns>True on successful loading and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.ICharts.MaxVisibleScale">
            <summary>
            Get or sets the maximum scale the charts are displayed when dynamic visibility is turned on.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.MinVisibleScale">
            <summary>
            Gets or sets the minimal scale the charts are displayed when dynamic visibility is turned on.
            </summary>
        </member>
        <member name="M:MapWinGIS.ICharts.MoveField(System.Int32,System.Int32)">
            <summary>
            Changes the position of a field (bar or sector) in the list which affects the order of drawing.
            </summary>
            <param name="OldIndex">The old index of the field.</param>
            <param name="NewIndex">The new index of the field.</param>
            <returns></returns>
        </member>
        <member name="P:MapWinGIS.ICharts.NormalizationField">
            <summary>
            Gets or sets the index of field upon which the values of other fields will be divided before displaying charts.
            </summary>
            <remarks>It can be used to display the data in percentage for bar charts. For example, if a chart
            displays groups of population for a cities, then normalization field can be the total population of the cities, so that
            percentages between different towns can be compared on the same scale.</remarks>
        </member>
        <member name="P:MapWinGIS.ICharts.NumFields">
            <summary>
            Gets the number of fields which correspond to the bars of sectors depending on chart type.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.OffsetX">
            <summary>
            Gets or sets the horizontal offset for drawing charts.
            </summary>
            <remarks>Positive values will move charts to the right. This
            value affects all the charts. Use Chart.PositionX to move individual charts.</remarks>
        </member>
        <member name="P:MapWinGIS.ICharts.OffsetY">
            <summary>
            Gets or set the vertical offset for drawing charts. 
            </summary>
            <remarks>Positive values will move charts up. This value affects all the charts.
            Use Chart.PositionY to move individual charts.</remarks>
        </member>
        <member name="P:MapWinGIS.ICharts.PieRadius">
            <summary>
            Gets or sets the radius of the pie chart in pixels.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.PieRadius2">
            <summary>
            Gets or sets the radius of the largest chart when Charts.UseVariableRadius is turned on.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.PieRotation">
            <summary>
            Gets or set the rotation of the pie chart.
            </summary>
            <remarks>This property is no implemented.</remarks>
        </member>
        <member name="M:MapWinGIS.ICharts.RemoveField(System.Int32)">
            <summary>
            Removes the field which corresponds to the bar or the sector of the chart.
            </summary>
            <param name="Index">The index of the field to remove.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ICharts.SaveToXML(System.String)">
            <summary>
            Saves the state of the charts to the XML file.
            </summary>
            <remarks>Charts.SavingMode defines the particular data which will be serialized.</remarks>
            <param name="Filename">The filename to save into.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.ICharts.SavingMode">
            <summary>
            Gets or sets the mode for serialization of charts. Affects Charts.SaveToXML method.
            </summary>
        </member>
        <member name="M:MapWinGIS.ICharts.Select(MapWinGIS.Extents,System.Int32,MapWinGIS.SelectMode,System.Object@)">
            <summary>
            Returns the indices of charts which are displayed within specified rectangle on the screen.
            </summary>
            <param name="BoundingBox">The rectangle to select charts within (in screen coordinates).</param>
            <param name="Tolerance">The tolerance in pixels. The bounding box will be expanded by this values.</param>
            <param name="SelectMode">The selection mode.</param>
            <param name="Indices">The array of integer type with indices of the selected charts.</param>
            <returns>True if at least one chart was selected and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ICharts.Serialize">
            <summary>
            Serializes the state of the charts to the string.
            </summary>
            <returns>The serialized string.</returns>
        </member>
        <member name="P:MapWinGIS.ICharts.SizeField">
            <summary>
            Gets or sets the index of field which affect the radius of charts when Charts.UseVariableRadius is set to true.
            </summary>
            <remarks>In most cases this field doesn't included in the chart itself.</remarks>
        </member>
        <member name="P:MapWinGIS.ICharts.Thickness">
            <summary>
            Gets or sets the value which affects 3D display of the charts.
            </summary>
            <remarks>This value corresponds to the "height" for pie charts and "depth" for bar charts.</remarks>
            \see Charts.Use3DMode.
        </member>
        <member name="P:MapWinGIS.ICharts.Tilt">
            <summary>
            Gets or sets the tilt of the charts when 3D display  is on.
            </summary>
            \see Charts.Use3DMode.
        </member>
        <member name="P:MapWinGIS.ICharts.Transparency">
            <summary>
            Gets or set the transparency of charts (0-255).
            </summary>
            <remarks>The values range from 0(transparent) to 255(opaque). The data labels aren't affected by this value.</remarks>
        </member>
        <member name="P:MapWinGIS.ICharts.Use3DMode">
            <summary>
            Gets or sets a boolean value which indicates whether 3D mode will be used for charts drawing.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.UseVariableRadius">
            <summary>
            Gets or sets the value which indicates whether all pie charts will have the same or varying radius.
            </summary>
            <remarks>When set to true, the radius of the individual charts will depend upon the value in Charts.SizeField.</remarks>
        </member>
        <member name="P:MapWinGIS.ICharts.ValuesFontBold">
            <summary>
            Gets or sets the value which indicates whether data labels for charts will be bold.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.ValuesFontColor">
            <summary>
            Gets or sets the colour of the chart's data labels.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.ValuesFontItalic">
            <summary>
            Gets or sets the value which indicates whether data labels for charts will be italic.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.ValuesFontName">
            <summary>
            Gets or sets the font name for data labels of charts. The names of font families like "Arial" can be used.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.ValuesFontSize">
            <summary>
            Gets or set the size of chart's labels.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.ValuesFrameColor">
            <summary>
            Gets or sets the colour of the frame for chart labels.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.ValuesFrameVisible">
            <summary>
            Gets or sets a boolean value which indicates whether the frame of chart's labels is visible.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.ValuesStyle">
            <summary>
            Gets or sets the style of the chart's labels.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.ValuesVisible">
            <summary>
            Gets or sets the value which indicates whether labels with values of the fields will be drawn near each chart.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.VerticalPosition">
            <summary>
            Gets or sets the position of charts in the map drawing order.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.VisibilityExpression">
            <summary>
            Gets or sets the expression which defines the subset of charts which will be displayed on the map.
            </summary>
        </member>
        <member name="P:MapWinGIS.ICharts.Visible">
            <summary>
            Turns on or off the visibility of charts.
            </summary>
        </member>
        <member name="M:MapWinGIS.ICharts.get_Chart(System.Int32)">
            <summary>
            Gets a reference to the chart with the specified index. 
            </summary>
            <param name="Chart">The index of the chart to extract.</param>
            <returns>The reference to the chart of NULL reference on failure.</returns>
        </member>
        <member name="M:MapWinGIS.ICharts.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the specified error code.
            </summary>
            <param name="ErrorCode">The error code returned by Charts.LastErrorCode.</param>
            <returns>The description of error.</returns>
        </member>
        <member name="M:MapWinGIS.ICharts.get_Field(System.Int32)">
            <summary>
            Gets a reference to the field of the chart with the specified index.
            </summary>
            <param name="FieldIndex">The index of the field.</param>
            <returns>The reference to the chart field or NULL reference on failure.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:MapWinGIS.IColorScheme" -->
        <member name="M:MapWinGIS.IColorScheme.AddBreak(System.Double,System.UInt32)">
            <summary>
            Adds a single break to the colour scheme.
            </summary>
            <param name="Value">The value of the break. Must be within 0.0 to 1.0 range.</param>
            <param name="Color">The colour of the break.</param>
        </member>
        <member name="M:MapWinGIS.IColorScheme.Clear">
            <summary>
            Clears all the breaks from the colour scheme.
            </summary>
        </member>
        <member name="M:MapWinGIS.IColorScheme.Reverse">
            <summary>
            Reverses the order of color breaks in the color scheme.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IColorScheme.GlobalCallback">
            <summary>
            Gets or set the callback object to report errors.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.IColorScheme.Key">
            <summary>
            Gets or sets the string value associated with the instance of the class.
            </summary>
        </member>
        <member name="P:MapWinGIS.IColorScheme.LastErrorCode">
            <summary>
            Gets the code of the last error which occurred within this instance of class.
            </summary>
        </member>
        <member name="P:MapWinGIS.IColorScheme.NumBreaks">
            <summary>
            Returns the number of breaks within colour scheme.
            </summary>
        </member>
        <member name="M:MapWinGIS.IColorScheme.Remove(System.Int32)">
            <summary>
            Removes colour break with specified index.
            </summary>
            <param name="Index">The index of colour break to remove.</param>
            <returns>True on successful removal and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IColorScheme.SetColors(System.UInt32,System.UInt32)">
            <summary>
            Clears all the existing breaks and creates 2 breaks with the specified colours.
            </summary>
            <remarks>The values of the breaks will be 0.0 for the first one and 1.0 for the second.</remarks>
            <param name="Color1">The colour of the first break.</param>
            <param name="Color2">The colour of the second break.</param>
        </member>
        <member name="M:MapWinGIS.IColorScheme.SetColors2(MapWinGIS.tkMapColor,MapWinGIS.tkMapColor)">
            <summary>
            Clears all the existing breaks and creates 2 breaks with the specified colours.
            </summary>
            <remarks>The values of the breaks will be 0.0 for the first one and 1.0 for the second.</remarks>
            <param name="Color1">The colour of the first break.</param>
            <param name="Color2">The colour of the second break.</param>
        </member>
        <member name="M:MapWinGIS.IColorScheme.SetColors3(System.Int16,System.Int16,System.Int16,System.Int16,System.Int16,System.Int16)">
            <summary>
            Clears all the existing breaks and creates 2 breaks with the specified colours.
            </summary>
            <remarks>The values of the breaks will be 0.0 for the first one and 1.0 for the second.</remarks>
            <param name="MinRed">The red component of colour for the first colour break (0-255).</param>
            <param name="MinGreen">The green component of colour for the first colour break (0-255).</param>
            <param name="MinBlue">The blue component of colour for the first colour break (0-255).</param>
            <param name="MaxRed">The red component of colour for the second colour break (0-255).</param>
            <param name="MaxGreen">The green component of colour for the second colour break (0-255).</param>
            <param name="MaxBlue">The blue component of colour for the second colour break (0-255).</param>
        </member>
        <member name="M:MapWinGIS.IColorScheme.SetColors4(MapWinGIS.PredefinedColorScheme)">
            <summary>
            Clears all the existing breaks and creates new set of breaks specified by predefined colour scheme.
            </summary>
            <remarks>The number of the newly added breaks depends on the colour scheme chosen, usually 2-3.</remarks>
        </member>
        <member name="M:MapWinGIS.IColorScheme.get_BreakColor(System.Int32)">
            <summary>
            Gets the colour of the specific colour break.
            </summary>
            <param name="Index">The index of the colour break.</param>
            <returns>The colour of the break.</returns>
        </member>
        <member name="M:MapWinGIS.IColorScheme.get_BreakValue(System.Int32)">
            <summary>
            Gets the value of the specific colour break.
            </summary>
            <param name="Index">The index of the colour break.</param>
            <returns>The value of the colour break (0.0-1.0).</returns>
        </member>
        <member name="M:MapWinGIS.IColorScheme.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the given error code.
            </summary>
            <param name="ErrorCode">Error code returned by ColorScheme.LastErrorCode.</param>
            <returns>The description of the error.</returns>
        </member>
        <member name="M:MapWinGIS.IColorScheme.get_GraduatedColor(System.Double)">
            <summary>
            Calculates the colour which corresponds to the specific value.
            </summary>
            <remarks>In cases when the value isn't equal to the value of the existing break, colour interpolation will be made.</remarks>
            <param name="Value">The value to calculate colour for. Must be within [0.0, 1.0] range.</param>
            <returns>The interpolated colour.</returns>
        </member>
        <member name="M:MapWinGIS.IColorScheme.get_RandomColor(System.Double)">
            <summary>
            Generates random colour based on the input value.
            </summary>
            <remarks>The calculation will be made as following:
            - 2 colour breaks will be defined between which the value lies;
            - for each component of the colour a random value will be generated which lies between the value of the same colour component for the 2 adjacent breaks;</remarks>
            - the resulting colour will be calculated as the sum of 3 components.
            .
            <param name="Value">The value to calculate colour for. Must be within [0.0, 1.0] range.</param>
            <returns>The random colour.</returns>
        </member>
        <member name="M:MapWinGIS.IColorScheme.set_BreakColor(System.Int32,System.UInt32)">
            <summary>
            Sets the colour of break with the specified index.
            </summary>
            <param name="Index">The index of the break.</param>
            <param name="retval">The new colour to set.</param>
        </member>
        <member name="T:MapWinGIS.IWmsLayer">
            <summary>
            Represents a layer downloading and displaying the data from the particular WMS Server.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IWmsLayer.Close">
            <summary>
            Closes the layer.
            </summary>
        </member>
        <member name="M:MapWinGIS.IWmsLayer.Serialize">
            <summary>
            Serializes the state of the layer.
            </summary>
            <returns>The string with serialized state.</returns>
        </member>
        <member name="M:MapWinGIS.IWmsLayer.Deserialize(System.String)">
            <summary>
            Restores the state of the layer from the string.
            </summary>
            <param name="state">String with the previous state of the layer.</param>
            <returns>True on success.</returns>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.LastErrorCode">
            <summary>
            Gets the code of the last error which occurred inside this instance.
            </summary>
        </member>
        <member name="M:MapWinGIS.IWmsLayer.get_ErrorMsg(System.Int32)">
            <summary>
            Gets error message for the specific error code.
            </summary>
            <param name="ErrorCode">The error code.</param>
            <returns>The error message.</returns>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.Key">
            <summary>
            Gets or sets a key associated with this instance (any data can be stored in it by applications).
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.Name">
            <summary>
            Gets or sets the name of the layer.
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.BoundingBox">
            <summary>
            Gets or sets the bounding box of the layer (server coordinate system).
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.Epsg">
            <summary>
            Gets or sets the EPSG code of the coordinate system to be used to request data from the server.
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.Layers">
            <summary>
            Gets or sets the string with the layers to be requested from server (several comma separated layers are can be specified).
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.BaseUrl">
            <summary>
            Gets or sets the base URL of the WMS layer.
            </summary>
            <remarks>For example, http://demo.lizardtech.com/lizardtech/iserv/ows. The other parts of the request will 
            be generated dynamically.</remarks>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.Id">
            <summary>
            Gets or sets the unique identifier of the layer. It is used to cache the data locally.
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.Format">
            <summary>
            Gets or sets the format parameter of the request.
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.IsEmpty">
            <summary>
            Gets a value indicating whether this instance is initialized (bound to particular server).
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.MapExtents">
            <summary>
            Gets the bounding box for the layer in map coordinates.
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.GeoProjection">
            <summary>
            Gets the projection of the layer.
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.Opacity">
            <summary>
            Gets or sets the opacity of the layer which is used during rendering.
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.Brightness">
            <summary>
            Gets or sets the brightness of layer (color adjustment to be used during rendering).
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.Contrast">
            <summary>
            Gets or sets the contrast of layer (color adjustment to be used during rendering).
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.Saturation">
            <summary>
            Gets or sets the contrast of layer (color adjustment to be used during rendering).
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.Hue">
            <summary>
            Gets or sets the hue of layer (color adjustment to be used during rendering).
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.Gamma">
            <summary>
            Gets or sets the gamma of layer (color adjustment to be used during rendering).
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.UseCache">
            <summary>
            Gets or sets a value indicating whether data from the local cache will be used.
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.DoCaching">
            <summary>
            Gets or sets a value indicating whether the data will be cached locally.
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.TransparentColor">
            <summary>
            Gets or sets the color which be treated as transparent during rendering.
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.UseTransparentColor">
            <summary>
            Gets or sets a value indicating whether transparent color should be used.
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.Version">
            <summary>
            Gets or sets the version parameter which will be included in the request.
            </summary>
        </member>
        <member name="P:MapWinGIS.IWmsLayer.Styles">
            <summary>
            Gets or sets the styles parameter which will be included in the request.
            </summary>
        </member>
        <member name="T:MapWinGIS.ISelectionList">
            <summary>
            Holds list of shapes and pixels which where identified by user with Identify tool.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.ISelectionList.AddShape(System.Int32,System.Int32)">
            <summary>
            Adds the shape from the specified layer to the list.
            </summary>
            <param name="LayerHandle">The layer handle.</param>
            <param name="ShapeIndex">Index of the shape.</param>
        </member>
        <member name="M:MapWinGIS.ISelectionList.Clear">
            <summary>
            Clears all the shapes and pixels from the list.
            </summary>
        </member>
        <member name="M:MapWinGIS.ISelectionList.RemoveByLayerHandle(System.Int32)">
            <summary>
            Removes all items from the list which belong to specified layer.
            </summary>
            <param name="LayerHandle">The layer handle.</param>
        </member>
        <member name="M:MapWinGIS.ISelectionList.AddPixel(System.Int32,System.Int32,System.Int32)">
            <summary>
            Adds a pixel to the list.
            Updated in v4.9.5
            </summary>
            <param name="LayerHandle">The layer handle.</param>
            <param name="Column">The column.</param>
            <param name="Row">The row.</param>
        </member>
        <member name="M:MapWinGIS.ISelectionList.TogglePixel(System.Int32,System.Int32,System.Int32)">
            <summary>
            Toggles the state of the specified pixel (add it to the list if it is not present there, and removes otherwise).
            Updated in v4.9.5
            </summary>
            <param name="LayerHandle">The layer handle.</param>
            <param name="Column">The column.</param>
            <param name="Row">The row.</param>
        </member>
        <member name="P:MapWinGIS.ISelectionList.Count">
            <summary>
            Gets the count.
            </summary>
        </member>
        <member name="M:MapWinGIS.ISelectionList.get_LayerHandle(System.Int32)">
            <summary>
            Gets the layer handle for the item with specified pixel.
            </summary>
            <param name="Index">The index of the item (either shape or pixels).</param>
            <returns>The layer handle.</returns>
        </member>
        <member name="M:MapWinGIS.ISelectionList.get_ShapeIndex(System.Int32)">
            <summary>
            Gets the index of the shape for the specified item.
            </summary>
            <param name="Index">The index of the item.</param>
            <returns>The index of the shape or -1, if this item is a pixel.</returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MapWinGIS.ISelectionList.get_LayerType(System.Int32)">
            <summary>
            Gets the type of the layer for the specified pixel.
            </summary>
            <param name="Index">The index of the item.</param>
            <returns>The type of the layer.</returns>
        </member>
        <member name="M:MapWinGIS.ISelectionList.get_RasterX(System.Int32)">
            <summary>
            Gets X coordinate pixel.
            </summary>
            <param name="Index">The index of the item.</param>
            <returns>X coordinate or -1 if the specified item is a shape.</returns>
        </member>
        <member name="M:MapWinGIS.ISelectionList.get_RasterY(System.Int32)">
            <summary>
            Gets Y coordinate pixel.
            </summary>
            <param name="Index">The index of the item.</param>
            <returns>Y coordinate or -1 if the specified item is a shape.</returns>
        </member>
        <member name="M:MapWinGIS.ISelectionList.get_Row(System.Int32)">
            <summary>
            Gets the row.
            </summary>
            <param name="Index">The index of the item.</param>
            <returns>Row index or -1 if the specified item is a shape.</returns>
            \new495 Added in version 4.9.5
        </member>
        <member name="M:MapWinGIS.ISelectionList.get_Column(System.Int32)">
            <summary>
            Gets the column.
            </summary>
            <param name="Index">The index of the item.</param>
            <returns>Column index or -1 if the specified item is a shape.</returns>
            \new495 Added in version 4.9.5
        </member>
        <member name="T:MapWinGIS.IGdalRasterBand">
            <summary>
            Represents a single band of raster datasource. 
            Please refer to GDAL documentation for more details information.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IGdalRasterBand.GetUniqueValues(System.Int32,System.Object@)">
            <summary>
            Gets unique values of the band.
            </summary>
            <param name="maxCount">The maximum count of values to be returned.</param>
            <param name="arr">The array with values.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IGdalRasterBand.GetDefaultHistogram(System.Boolean)">
            <summary>
            Gets the default histogram.
            </summary>
            <param name="forceCalculate">If set to <c>true</c> and there is no dialog available, it will be calculated.</param>
            <returns>The histogram.</returns>
        </member>
        <member name="M:MapWinGIS.IGdalRasterBand.GetHistogram(System.Double,System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Gets custom histogram for the raster band.
            </summary>
            <param name="MinValue">The minimum value.</param>
            <param name="MaxValue">The maximum value.</param>
            <param name="NumBuckets">The number buckets.</param>
            <param name="includeOutOfRange">If set to <c>true</c> the values outside the specified range will be included in outer buckets.</param>
            <param name="allowApproximate">If set to <c>true</c> the approximate calculation will be allowed.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MapWinGIS.IGdalRasterBand.GetStatistics(System.Boolean,System.Boolean,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Gets statistics for the raster band.
            </summary>
            <param name="allowApproximate">If set to <c>true</c> the approximate calculation will be allowed.</param>
            <param name="forceCalculation">if set to <c>true</c> the calculation will be performed even if there are no cached values.</param>
            <param name="Minimum">The minimum value.</param>
            <param name="Maximum">The maximum value.</param>
            <param name="mean">The mean.</param>
            <param name="stdDev">The standard deviation.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IGdalRasterBand.Classify(System.Double,System.Double,MapWinGIS.tkClassificationType,System.Int32)">
            <summary>
            Builds classification for the raster band.
            </summary>
            <param name="MinValue">The minimum value.</param>
            <param name="MaxValue">The maximum value.</param>
            <param name="classification">The classification type.</param>
            <param name="NumCategories">The number of categories.</param>
            <returns>Resulting classification.</returns>
        </member>
        <member name="M:MapWinGIS.IGdalRasterBand.ComputeMinMax(System.Boolean,System.Double@,System.Double@)">
            <summary>
            Computes the minimum and maximum value for the raster band.
            </summary>
            <param name="allowApproximate">If set to <c>true</c> the approximate calculation will be allowed.</param>
            <param name="Minimum">The minimum value.</param>
            <param name="Maximum">The maximum value.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IGdalRasterBand.ComputeLocalStatistics(System.Int32,System.Int32,System.Int32,System.Double@,System.Double@,System.Double@,System.Double@,System.Int32@)">
            <summary>
            Computes local statistics for the data in the vicinity of particular pixel.
            </summary>
            <param name="Column">The column.</param>
            <param name="Row">The row.</param>
            <param name="range">Number of pixel on each side to be included in calculation.</param>
            <param name="Minimum">The minimum value.</param>
            <param name="Maximum">The maximum value.</param>
            <param name="mean">The mean.</param>
            <param name="stdDev">The standard deviation.</param>
            <param name="Count">The count.</param>
            <returns>True on success.</returns>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.NodataValue">
            <summary>
            Gets no data value.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.Minimum">
            <summary>
            Gets the minimum.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.Maximum">
            <summary>
            Gets the maximum.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.OverviewCount">
            <summary>
            Gets the number of overviews for the raster band.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.ColorInterpretation">
            <summary>
            Gets or sets the color interpretation for the raster band.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.DataType">
            <summary>
            Gets the data type of the raster band.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.XSize">
            <summary>
            Gets the width of the raster band in pixels.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.YSize">
            <summary>
            Gets the height of the raster band in pixels.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.BlockSizeX">
            <summary>
            Gets the size of horizontal block for the raster (in pixels).
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.BlockSizeY">
            <summary>
            Gets the size of vertical block for the raster (in pixels).
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.UnitType">
            <summary>
            Gets the type of the unit.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.Scale">
            <summary>
            Gets the raster value scale (is used for coordinate transformation).
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.Offset">
            <summary>
            Gets the raster value offset (is used for coordinate transformation).
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.HasColorTable">
            <summary>
            Gets a value indicating whether the raster band has color table.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.MetadataCount">
            <summary>
            Gets the number of metadata items associated with the band.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGdalRasterBand.get_MetadataItem(System.Int32)">
            <summary>
            Gets the specified metadata item.
            </summary>
            <param name="itemIndex">Index of the item.</param>
            <returns>String with metadata.</returns>
        </member>
        <member name="P:MapWinGIS.IGdalRasterBand.ColorTable">
            <summary>
            Gets the color table associated with the band.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGdalRasterBand.get_Overview(System.Int32)">
            <summary>
            Gets specified overview of the raster band.
            </summary>
            <param name="overviewIndex">Index of the overview.</param>
            <returns>The overview as another instance of GdalRasterBand.</returns>
        </member>
        <member name="M:MapWinGIS.IGdalRasterBand.get_Value(System.Int32,System.Int32,System.Double@)">
            <summary>
            Gets the value of the specified pixel.
            </summary>
            <param name="Column">The column.</param>
            <param name="Row">The row.</param>
            <param name="pVal">The value.</param>
            <returns>True on success.</returns>
        </member>
        <member name="T:MapWinGIS.IGdalDriverManager">
            <summary>
            Holds all available GDAL drivers.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IGdalDriverManager.DriverCount">
            <summary>
            Gets the number of drivers.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGdalDriverManager.get_Driver(System.Int32)">
            <summary>
            Gets the specified driver.
            </summary>
            <param name="driverIndex">Index of the driver.</param>
            <returns>The driver.</returns>
        </member>
        <member name="M:MapWinGIS.IGdalDriverManager.get_DriverByName(System.String)">
            <summary>
            Gets driver with the specified name.
            </summary>
            <param name="DriverName">Name of the driver.</param>
            <returns>The driver.</returns>
        </member>
        <member name="T:MapWinGIS.IGdalDriver">
            <summary>
            Represents a single GDAL driver.
            Please refer to GDAL documentation for more details information.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IGdalDriver.get_Metadata(MapWinGIS.tkGdalDriverMetadata)">
            <summary>
            Gets particular metadata associated with the driver.
            </summary>
            <param name="Metadata">The metadata.</param>
            <returns>String with metadata.</returns>
        </member>
        <member name="P:MapWinGIS.IGdalDriver.MetadataCount">
            <summary>
            Gets the the number of metadata items associated with the driver.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGdalDriver.get_MetadataItem(System.Int32)">
            <summary>
            Gets specified metadata item.
            </summary>
            <param name="metadataIndex">Index of the metadata item.</param>
            <returns>String with metadata.</returns>
        </member>
        <member name="P:MapWinGIS.IGdalDriver.Name">
            <summary>
            Gets the name of the driver.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalDriver.IsVector">
            <summary>
            Gets a value indicating whether the driver works vector data.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGdalDriver.IsRaster">
            <summary>
            Gets a value indicating whether the driver works raster data.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGdalDriver.get_MetadataItemType(System.Int32)">
            <summary>
            Gets the type of the specified metadata item.
            </summary>
            <param name="metadataIndex">Index of the metadata item.</param>
            <returns>Type of the metadata item.</returns>
        </member>
        <member name="M:MapWinGIS.IGdalDriver.get_MetadataItemValue(System.Int32)">
            <summary>
            Gets the value of the specified metadata item.
            </summary>
            <param name="metadataIndex">Index of the metadata.</param>
            <returns>String with metadata.</returns>
        </member>
        <member name="M:MapWinGIS.IGdalDriver.get_MetadataItemKey(System.Int32)">
            <summary>
            Gets the key of the specified metadata item.
            </summary>
            <param name="metadataIndex">Index of the metadata item.</param>
            <returns>Metadata item key.</returns>
        </member>
        <member name="T:MapWinGIS.IGdalDataset">
            <summary>
            Represents a light wrapper around GDAL raster dataset which allows to perform some 
            operations without using more advanced classes like RasterSource or GridSource.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IGdalDataset.Open(System.String,System.Boolean)">
            <summary>
            Opens datasource from the specified filename.
            </summary>
            <param name="Filename">The filename.</param>
            <param name="readOnly">If set to <c>true</c> the datasource will be opened in read only mode.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IGdalDataset.Close">
            <summary>
            Closes the datasource.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGdalDataset.SetGeoTransform(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets transformation parameters for GDAL datasource.
            </summary>
            <param name="xLeft">The x coordinate of the top left pixel.</param>
            <param name="dX">The width of a pixel.</param>
            <param name="yProjOnX">The projection of Y on X axis.</param>
            <param name="yTop">The y coordinate of the top left pixel.</param>
            <param name="xProjOnY">The projection of X on Y axis.</param>
            <param name="dY">The height of a pixel.</param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:MapWinGIS.IGdalDataset.SetProjection(System.String)">
            <summary>
            Sets projection of the datasource
            </summary>
            <param name="Projection">The projection.</param>
            <returns>True on success.</returns>
        </member>
        <member name="P:MapWinGIS.IGdalDataset.Driver">
            <summary>
            Gets the driver which manages this datasource.
            </summary>
        </member>
        <member name="T:MapWinGIS.IFunction">
            <summary>
            Represents a function supported by built-in expression parser.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IFunction.Name">
            <summary>
            Gets the name of the function.
            </summary>
        </member>
        <member name="M:MapWinGIS.IFunction.get_Alias(System.Int32)">
            <summary>
            Gets the alias of the function.
            </summary>
            <param name="aliasIndex">Index of the alias.</param>
        </member>
        <member name="P:MapWinGIS.IFunction.NumAliases">
            <summary>
            Gets the number of aliases that the function has.
            </summary>
        </member>
        <member name="P:MapWinGIS.IFunction.NumParameters">
            <summary>
            Gets the number of parameters of the function.
            </summary>
        </member>
        <member name="P:MapWinGIS.IFunction.Group">
            <summary>
            Gets the group to which this function belongs.
            </summary>
        </member>
        <member name="P:MapWinGIS.IFunction.Description">
            <summary>
            Gets the description of the function.
            </summary>
        </member>
        <member name="M:MapWinGIS.IFunction.get_ParameterName(System.Int32)">
            <summary>
            Gets the name of the specified parameter.
            </summary>
            <param name="parameterIndex">Index of the parameter.</param>
            <returns>The name of the parameter.</returns>
        </member>
        <member name="M:MapWinGIS.IFunction.get_ParameterDescription(System.Int32)">
            <summary>
            Gets the description of the specified parameter of the function.
            </summary>
            <param name="parameterIndex">Index of the parameter.</param>
            <returns>The description of the parameter.</returns>
        </member>
        <member name="P:MapWinGIS.IFunction.Signature">
            <summary>
            Gets the signature of the function.
            </summary>
        </member>
        <member name="T:MapWinGIS.IExpression">
            <summary>
            Represents expression parser and evaluator.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IExpression.Parse(System.String)">
            <summary>
            Parses the specifies string and build an expression out of it.
            </summary>
            <param name="expr">The string with expression.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IExpression.Calculate(System.Object@)">
            <summary>
            Calculates the expression.
            </summary>
            <param name="result">The result.</param>
            <returns>Result which is of string, double, or boolean type.</returns>
        </member>
        <member name="M:MapWinGIS.IExpression.ParseForTable(System.String,MapWinGIS.Table)">
            <summary>
            Parses expression seeking for fields in the specified table.
            </summary>
            <param name="expr">The expression to parse.</param>
            <param name="tbl">The table.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IExpression.CalculateForTableRow(System.Int32,System.Int32)">
            <summary>
            Calculates the expression for the given table row and writes the result to the specified field.
            </summary>
            <param name="RowIndex">Index of the row.</param>
            <param name="targetFieldIndex">Index of the target field.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IExpression.CalculateForTableRow2(System.Int32,System.Object@)">
            <summary>
            Calculates the expression for the given table row.
            </summary>
            <param name="RowIndex">Index of the row.</param>
            <param name="result">The result of calculation (string, double, or boolean).</param>
            <returns>True on success.</returns>
        </member>
        <member name="P:MapWinGIS.IExpression.LastErrorMessage">
            <summary>
            Gets the last error message.
            </summary>
        </member>
        <member name="P:MapWinGIS.IExpression.LastErrorPosition">
            <summary>
            Gets the position of the last error.
            </summary>
        </member>
        <member name="P:MapWinGIS.IExpression.NumSupportedFunctions">
            <summary>
            Gets the number of functions recognized by the expression parser.
            </summary>
        </member>
        <member name="M:MapWinGIS.IExpression.get_SupportedFunction(System.Int32)">
            <summary>
            Gets the specified function from the list of function recognized by the expression parser.
            </summary>
            <param name="functionIndex">Index of the function.</param>
            <returns>The function object with metadata.</returns>
        </member>
        <member name="P:MapWinGIS.IExpression.Table">
            <summary>
            Gets the table associated with the current expression.
            </summary>
        </member>
        <member name="T:MapWinGIS.IDrawingRectangle">
            <summary>
            Represents a rectangle that can be rendered on the map.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IDrawingRectangle.x">
            <summary>
            The X coordinate of the top-left corner of the rectangle.
            </summary>
        </member>
        <member name="P:MapWinGIS.IDrawingRectangle.y">
            <summary>
            The Y coordinate of the top-left corner of the rectangle.
            </summary>
        </member>
        <member name="P:MapWinGIS.IDrawingRectangle.Width">
            <summary>
            The width of the rectangle.
            </summary>
        </member>
        <member name="P:MapWinGIS.IDrawingRectangle.Height">
            <summary>
            The height of the rectangle.
            </summary>
        </member>
        <member name="P:MapWinGIS.IDrawingRectangle.Visible">
            <summary>
            Gets or sets a value indicating whether rectangle is visible.
            </summary>
        </member>
        <member name="P:MapWinGIS.IDrawingRectangle.ReferenceType">
            <summary>
            Type of coordinates which are used to specify the position and size of the rectangle.
            </summary>
        </member>
        <member name="P:MapWinGIS.IDrawingRectangle.FillTransparency">
            <summary>
            Gets or sets the opacity of the rectangle.
            </summary>
        </member>
        <member name="P:MapWinGIS.IDrawingRectangle.Color">
            <summary>
            Gets or sets the color of the rectangle.
            </summary>
        </member>
        <member name="P:MapWinGIS.IDrawingRectangle.LineWidth">
            <summary>
            Gets or sets the width of the rectangle's border.
            </summary>
        </member>
        <member name="T:MapWinGIS.IESRIGridManager">
            <summary>
            An ESRI grid manager object provides functions which facilitate using ESRI grids with MapWinGIS.
            </summary>
            <remarks>
            The functions and properties are listed below. Clicking on each will yield a description of 
            the function and its arguments as well as sample code where applicable.</remarks>
        </member>
        <member name="M:MapWinGIS.IESRIGridManager.CanUseESRIGrids">
            <summary>
            Gets whether or not MapWinGIS can open ESRI grids.
            </summary>
            <remarks>Since ESRI grids are proprietary, MapWinGIS can only open them if another ESRI product has already been installed 
            which provides the files needed to manipulate ESRI grids.</remarks>
            <returns>A boolean value representing whether or not MapWinGIS can open ESRI grids.</returns>
        </member>
        <member name="M:MapWinGIS.IESRIGridManager.DeleteESRIGrids(System.String)">
            <summary>
            Deletes the specified ESRI grid.
            </summary>
            <param name="Filename">The filename of the ESRI grid to be deleted.</param>
            <returns>A boolean value representing the success or failure of deleting the specified ESRI grid.</returns>
        </member>
        <member name="P:MapWinGIS.IESRIGridManager.GlobalCallback">
            <summary>
            The global callback is the interface used by MapWinGIS to pass progress and error events to interested applications.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="M:MapWinGIS.IESRIGridManager.IsESRIGrid(System.String)">
            <summary>
            Gets whether or not the specified file is an ESRI grid.
            </summary>
            <param name="Filename">The filename of the grid to be checked. </param>
            <returns>A boolean value representing whether or not the specified file is an ESRI grid.</returns>
        </member>
        <member name="P:MapWinGIS.IESRIGridManager.LastErrorCode">
            <summary>
            Retrieves the last error generated in the object.
            </summary>
        </member>
        <member name="M:MapWinGIS.IESRIGridManager.get_ErrorMsg(System.Int32)">
            <summary>
            Retrieves the error message associated with the specified error code.
            </summary>
            <param name="ErrorCode">The error code for which the error message is required.</param>
            <returns>The error message description for the specified error code.</returns>
        </member>
        <member name="T:MapWinGIS.IExtents">
             <summary>
             Represents a rectangle on the map.
             </summary>
             <remarks>In some cases additional Z and M dimensions can also be specified to denote the altitude of the displayed data for example.</remarks>\n
             Let's see how to display certain extents on the map.
             \code
             double y = 48.7;    // latitude, deg.
             double x = 2.3;     // longitude, deg.
             double span = 0.1;  // deg.
            
             // extents from 48.5 to 48.9 degrees of north latitude and 
             // from 2.1 to 2.5 degrees of east longitude will be set
             Extents ext = new Extents();
             ext.SetBounds(x - span, y - span, 0.0, x + span, y + span, 0.0);
            
             // show them on the map
             AxMap axMap;
             if (axMap.MapUnits == tkUnitsOfMeasure.umDecimalDegrees){  
                axMap.Extents = ext;
             }
             \endcode
             MapWinGIS doesn't hold instances of %Extents class for layers or map, but generates them on each client call.
             Therefore it's useless to try to change those extents in the way like this:
             \code
             AxMap axMap;
             Extents ext = axMap.Extents;
             ext.SetBounds(some_bounds);   // map won't be updated
             \endcode
             The following line is needed:
             \code axMap.Extents = ext; \endcode
             In case of data layers, like shapefiles or images, the extents are obtained by calculation,
             so the only way to alter them is to change the underlying data.
        </member>
        <member name="M:MapWinGIS.IExtents.GetBounds(System.Double@,System.Double@,System.Double@,System.Double@,System.Double@,System.Double@)">
            <summary>
            Gets the bounds of the extents object. 
            </summary>
            <param name="xMin">Returns the minimum x value for the extents object.</param>
            <param name="yMin">Returns the minimum y value for the extents object.</param>
            <param name="zMin">Returns the minimum z value for the extents object.</param>
            <param name="xMax">Returns the maximum x value for the extents object.</param>
            <param name="yMax">Returns the maximum y value for the extents object.</param>
            <param name="zMax">Returns the maximum z value for the extents object.</param>
        </member>
        <member name="M:MapWinGIS.IExtents.GetMeasureBounds(System.Double@,System.Double@)">
            <summary>
            Gets the minimum and maximum measure bounds for the extents object. 
            </summary>
            <remarks>Measure bounds only apply to shapefiles containing measure data. </remarks>
            <param name="mMin"></param>
            <param name="mMax"></param>
        </member>
        <member name="M:MapWinGIS.IExtents.SetBounds(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Sets the bounds for the extents object. 
            </summary>
            <param name="xMin">The new minimum x value for the bounds of the extents object. </param>
            <param name="yMin">The new minimum y value for the bounds of the extents object.</param>
            <param name="zMin">The new minimum z value for the bounds of the extents object.</param>
            <param name="xMax">The new maximum x value for the bounds of the extents object.</param>
            <param name="yMax">The new maximum y value for the bounds of the extents object.</param>
            <param name="zMax">The new maximum z value for the bounds of the extents object.</param>
        </member>
        <member name="M:MapWinGIS.IExtents.SetMeasureBounds(System.Double,System.Double)">
            <summary>
            Sets the measure bounds of the extents object. 
            </summary>
            <remarks>Measure bounds only apply to shapefiles containing measure data.</remarks>
            <param name="mMin">The new minimum measure bound for the extents object.</param>
            <param name="mMax">The new maximum measure bound for the extents object.</param>
        </member>
        <member name="P:MapWinGIS.IExtents.mMax">
            <summary>
            The maximum measure bound in the exents object. Measure bounds only apply to shapefiles containing measure data.
            </summary>
        </member>
        <member name="P:MapWinGIS.IExtents.mMin">
            <summary>
            Gets the minimum measure bound for the extents object. Measure bounds only apply to shapefiles containing measure data.
            </summary>
        </member>
        <member name="P:MapWinGIS.IExtents.xMax">
            <summary>
            The maximum x bound for the extents object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IExtents.xMin">
            <summary>
            Gets the minimum x bound for the extents object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IExtents.yMax">
            <summary>
            The maximum y bound for the extents object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IExtents.yMin">
            <summary>
            Gets the minimum y bound for the extents object
            </summary>
        </member>
        <member name="P:MapWinGIS.IExtents.zMax">
            <summary>
            The maximum z bound for the extents object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IExtents.zMin">
            <summary>
            Gets the minimum z bound for the extents object.
            </summary>
        </member>
        <member name="M:MapWinGIS.IExtents.ToDebugString">
            <summary>
            Gets serialized contents of the extents for debug purposes.
            </summary>
            <returns>Serialized string.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IExtents.Center">
            <summary>
            Gets a center point for the extents.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IExtents.MoveTo(System.Double,System.Double)">
            <summary>
            Moves extents so that center point will be at specified coordinates, while width and height will be preserved.
            </summary>
            <param name="x">X coordinate of new center.</param>
            <param name="y">Y coordinate of new center.</param>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IExtents.PointIsWithin(System.Double,System.Double)">
            <summary>
            Checks whether a point is within extents
            </summary>
            <param name="x">X coordinate of point</param>
            <param name="y">Y coordinate of point</param>
            <returns>True if point is within extents</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IExtents.ToShape">
            <summary>
            Creates a rectangular polygon matching current extents.
            </summary>
            <returns>New polygon shape.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IExtents.Width">
            <summary>
            Gets the Width of the extents object (xMax - xMin).
            </summary>
        </member>
        <member name="P:MapWinGIS.IExtents.Height">
            <summary>
            Gets the Height of the extents object (yMax - yMin).
            </summary>
        </member>
        <member name="P:MapWinGIS.IExtents.Depth">
            <summary>
            Gets the Depth of the extents object (zMax - zMin).
            </summary>
        </member>
        <member name="T:MapWinGIS.IIdentifier">
            <summary>
            Provides settings for built-in identifier tool (cmIdentify cursor).
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IIdentifier.HotTracking">
            <summary>
            Gets or set a value indicating whether shapes of identifiable shapefiles will be highlighted when
            mouse pointer is over them.
            </summary>
        </member>
        <member name="P:MapWinGIS.IIdentifier.IdentifierMode">
            <summary>
            Gets or sets which layers an identifier will be working with.
            </summary>
        </member>
        <member name="P:MapWinGIS.IIdentifier.OutlineColor">
            <summary>
            Gets or sets outline color for identified shape.
            </summary>
        </member>
        <member name="P:MapWinGIS.IIdentifier.ActiveLayer">
            <summary>
            Gets or sets the handle of active layer, which is used when Identifer.IdentifierMode set to imSingleLayer.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:MapWinGIS.IOgrLayer" -->
        <member name="M:MapWinGIS.IOgrLayer.Close">
            <summary>
            Closes current layer and releases resources associated with it.
            </summary>
            <remarks>It's recommended to call this method as soon as the layer is no longer needed.</remarks>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.GetConnectionString">
            <summary>
            Returns connection string which was used to open this layer.
            </summary>
            <remarks>
            \attention Password in connection string is stored as plain text. 
            Consider measures to ensure its security.
            </remarks>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.Deserialize(System.String)">
            <summary>
            Restores the state of layer from string generated with OgrLayer.Serialize method.
            </summary>
            <remarks>Deserialization includes:\n
            a) reconnection to the datasource;\n
            b) grabbing data from it;\n 
            c) restoring of visualization options set for underlying shapefile.\n\n
            Particular set of actions depends on the state of the object before serialization.\n
            
            Any data currently stored in this instance will be discarded.
            </remarks>
            <param name="newVal">String generated with OgrLayer.Serialize method.</param>
            <returns>True on success.</returns>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.GeoProjection">
            <summary>
            Gets GeoProjection associated with current layer. 
            </summary>
            <remarks>
            Corresponds to SRID set for the layer in underlying datasource.
            When SRID isn't specified (i.e. equals 0), empty GeoProjection instance will be returned.</remarks>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.GeometryColumnName">
            <summary>
            Gets the name of geometry column which was used to fetch geometry for current layer.
            </summary>
            <remarks>Depending on data format, a layer may support several geometry columns but 
            only one will be used to provide shape data via OgrLayer.GetBuffer(). By default
            the first column with geometry/geography type will be used. To access other columns 
            temporary layers can be opened via OgrDatasource.RunQuery.</remarks>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.GetBuffer">
            <summary>
            Gets layer data represented as in-memory shapefile.
            </summary>
            <remarks>
            Implements lazy loading pattern, i.e. data will be grabbed from underlying datasource 
            on the first call and will be used for all subsequent calls. To force re-read of the 
            data from datasource use OgrLayer.ReloadFromSource.\n
            
            This method will automatically be called after adding the layer to the map via
            AxMap.AddLayer or AxMap.AddLayerFromDatabase.
            </remarks>
            <returns>Instance of shapefile with layer data or null on failure or for uninitialized layer.</returns>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the specific error code.
            </summary>
            <param name="ErrorCode">The error code returned by LastErrorCode property.</param>
            <returns>String with the description.</returns>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.LastErrorCode">
            <summary>
            Gets code of the last error which took place inside this object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.GlobalCallback">
            <summary>
            Gets or sets a Callback object which handles progress and error messages.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.IOgrLayer.Key">
            <summary>
            A text string associated with object. Any value can be stored by developer in this property.
            </summary>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.Name">
            <summary>
            Gets name of the layer.
            </summary>
            <remarks>The name may correspond to table name in underlying database or store some generic string like 
            "sql_statement" for temporary layers opened by OgrDatasource.RunQuery.</remarks>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.OpenFromDatabase(System.String,System.String,System.Boolean)">
            <summary>
            Opens layer with specified name from the OGR datasource.
            </summary>
            <remarks>
            This method is called internally by OgrDatasource.GetLayerByName.
            </remarks>
            <param name="connectionString">Connection string or filename.</param>
            <param name="layerName">Layer name.</param>
            <param name="forUpdate">Indicates whether the returned layer will support saving of changes back to source
            (the functionality should be supported by particular driver).</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.OpenFromQuery(System.String,System.String)">
            <summary>
            Runs SQL query against datasource and returns results as a temporary layer.
            </summary>
            <remarks>This method is called internally by OgrDatasource.RunQuery.</remarks>
            <param name="connectionString">Connection string or filename.</param>
            <param name="sql">SQL query.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.OpenFromFile(System.String,System.Boolean)">
            <summary>
            Opens OGR layer from specified file. If the datasource holds several layers only the first one will be opened.
            </summary>
            <param name="Filename">Filename of the datasource to open.</param>
            <param name="forUpdate">Indicates whether the returned layer will support saving of changes back to source
            (the functionality should be supported by particular driver).</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.RedefineQuery(System.String)">
            <summary>
            Runs a new query against the datasource.
            </summary>
            <remarks>The layer must be opened with OgrLayer.OpenFromQuery or OgrDatasource.RunQuery 
            (OgrLayer.SourceType = ogrQuery) in order for this method to work.</remarks>
            <param name="newSql">New SQL command.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.ReloadFromSource">
            <summary>
            Discards all the local changes and reloads layer from the source.
            </summary>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.Serialize">
            <summary>
            Serializes the state of layer to a string, which can be later restored with OgrLayer.Deserialize.
            </summary>
            <remarks>State information includes connection string, layer name (or query string)
            and visualization options for underlying shapefile 
            (in case it is already populated when the method was called.)
            \attention Serialized string holds connection password as a plain text. 
            Consider measures to ensure its security.
            </remarks>
            <returns>String with state information.</returns>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.ShapeType">
            <summary>
            Gets shape type of the current layer.
            </summary>
            <remarks>The property automatically maps underlying OGRwkbGeometryType to corresponding shape type.</remarks>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.ShapeType2D">
            <summary>
            Gets "flattened" type of the current layer, i.e. Z and M components will be ignored.
            </summary>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.DriverName">
            <summary>
            Gets name of the driver which is used to access layer datasource.
            </summary>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.AvailableShapeTypes">
            <summary>
            Gets the array of available shape types inside OGR layer (should be cast to ShpfileType[]).
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IOgrLayer.ActiveShapeType">
            <summary>
            Gets or sets the type of the active shape type for the layer (is used in OgrLayer.GetBuffer for example).
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IOgrLayer.GetSourceQuery">
            <summary>
            Gets layer name or SQL query which was used to open this layer.
            </summary>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.TestCapability(MapWinGIS.tkOgrLayerCapability)">
            <summary>
            Test whether current layer supports certain functionality. 
            </summary>
            <remarks>In most cases no actual attempts to perform requested operation is made.</remarks>
            <param name="capability">A capability to test.</param>
            <returns>True in case the capability is supported by the layer.</returns>
            The following code opens a layer from datasource and display which capabilities are supported for it.
            \code
            var layer = new OgrLayer();
            if (!layer.OpenFromDatabase(CONNECTION_STRING, "waterways", true))
            {
                Debug.Print("Failed to open layer: " + layer.get_ErrorMsg(layer.LastErrorCode));
            }
            else
            {
                var values = Enum.GetValues(typeof(MapWinGIS.tkOgrLayerCapability));
                foreach (tkOgrLayerCapability value in values)
                {
                    Debug.Print(value.ToString() + ": " + layer.TestCapability(value).ToString());
                }
            }
            \endcode
        </member>
        <member name="M:MapWinGIS.IOgrLayer.get_Extents(MapWinGIS.Extents@,System.Boolean)">
            <summary>
            Gets extents of the layer.
            </summary>
            <remarks>
            Depending on driver implementation this method may retrieve this information
            directly from underlying datasource without loading the data, which provides 
            performance benefits.
            </remarks>
            <param name="layerExtents">Retrieved extents.</param>
            <param name="forceLoading">True to instruct driver to load the data locally 
            if information can't be retrieved from underlying datasource otherwise.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.get_FeatureCount(System.Boolean)">
            <summary>
            Returns number of features in the layer.
            </summary>
            <remarks>
            Depending on driver implementation this method may retrieve this information
            directly from underlying datasource without loading the data, which provides 
            performance benefits.
            </remarks>
            <param name="forceLoading">True to instruct driver to load the data locally 
            if information can't be retrieved from underlying datasource otherwise.</param>
            <returns>Number of features in the layer.</returns>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.SourceType">
            <summary>
            Gets source type of the layer. 
            </summary>
            <remarks>Any new instance of class starts with ogrUninitialized. Successful call of OgrLayer.OpenFromDatabase
            method will set it to ogrDbTable, OgrLayer.OpenFromQuery - to ogrQuery.</remarks>
            <returns>Source type.</returns>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.GdalLastErrorMsg">
            <summary>
            Extracts the last error message reported by GDAL library.
            </summary>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.ClearStyles">
            <summary>
            Clears all the styles stored for current layer in datasource.
            </summary>
            <returns>True on success.</returns>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.DynamicLoading">
            <summary>
            Gets or sets a value indicating whether features for large layers are to be loaded dynamically
            when moving to the new portions of map.
            </summary>
            <remarks>When set to false only the number of features set by OgrLayer.MaxFeatureCount
            is loaded into memory. No further attempts to load additional features will be done.\n
            
            In dynamic loading mode after map extents change a check is made 
            whether features for the requested extents are already in memory. If not the data loading 
            is started in the background thread. When the loading is over all the features currently stored
            in memory will be discarded. If the amount of features in new map extents exceeds
            OgrLayer.MaxFeatureCount no background loading will be done. \n
            
            The mode is chosen automatically when the layer is opened depending on the number of features.
            But afterwards it's possible possible to change the value.</remarks>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.GenerateCategories(System.String,MapWinGIS.tkClassificationType,System.Int32,MapWinGIS.tkMapColor,MapWinGIS.tkMapColor,MapWinGIS.tkColorSchemeType)">
             <summary>
             Generates visualization categories for OGR layer.
             </summary>
             <param name="Fieldname">%Field name to use as a base for classification.</param>
             <param name="ClassificationType">Type of classification.</param>
             <param name="numClasses">Number of classes (is not used with unique values classification type).</param>
             <param name="colorStart">Starting color for the color scheme.</param>
             <param name="colorEnd">End color for the color scheme.</param>
             <param name="schemeType">Type of color scheme.</param>
             <returns>True on success.</returns>
             <remarks> The whole set of features will be used during classification, not only those currently loaded into memory. 
             Therefore the method has definite advantage over calling OgrLayer.GetBuffer.Categories.Generate 
             directly for large layers.\n\n
            
             Categories will be added to underlying shapefile (OgrLayer.GetBuffer). This method
             will trigger the population of this shapefile if it's not yet in memory. \n
             
             The following code opens "buildings" layer, generates categories based on "population"
             field and then saves them as a "new_style" to the datasource.\n
             
             \code
             var layer = new OgrLayer();
             if (!layer.OpenFromDatabase(CONNECTION_STRING, "buildings"))
             {
                 Debug.WriteLine("Failed to open the layer: " + layer.GdalLastErrorMsg);
             }
             else
             {
                 layer.LabelExpression = "[Name]";
                 layer.LabelPosition = tkLabelPositioning.lpCenter;
                 layer.GlobalCallback = this;
             
                 if (!layer.GenerateCategories("population", tkClassificationType.ctEqualIntervals,
                     10, tkMapColor.Blue, tkMapColor.Yellow, tkColorSchemeType.ctSchemeGraduated))
                 {
                     Debug.WriteLine("Failed to generated categories: " + layer.get_ErrorMsg(layer.LastErrorCode));
                 }
                 else
                 {
                     var sf = layer.GetBuffer();
                     Debug.WriteLine("Number of generated categories: " + sf.Categories.Count);
             
                     // save it as a new style
                     if (!layer.SaveStyle("new_style"))
                     {
                         Debug.WriteLine("Failed to save style: " + layer.GdalLastErrorMsg);
                     }
                     else
                     {
                         Debug.WriteLine("The new style has been saved.");
                     }
                 }
                 layer.Close();
             }
             \endcode
             </remarks>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.GetNumStyles">
            <summary>
            Gets number of styles stored for the layer in datasource.
            </summary>
             MapWinGIS provides its own functionality to store visualization styles for OGR layers. Each 
            style hold serialized state of underlying shapefile and is stored in <i>mw_styles</i> table of database.
            The table will be created on the first call of OgrLayer.SaveStyle or on the first call of 
            OgrDatasource.ImportShapefile when GlobalSettings.UseOgrStyles is set to true. \n
            
            The default style has empty string name (""). When GlobalSettings.UseOgrStyles
            is set to true, this style will be automatically created during shapefile import and 
            then will be applied for the layer on further loadings. Alternative styles can be saved
            and applied with OgrLayer.SaveStyle and OgrLayer.ApplyStyle respectively. \n
            
            The style table has following definition for PostGIS datasource:
            \code
            CREATE Table mw_styles (
               StyleId serial primary key, 
               LayerName varchar(128), 
               StyleName varchar(128), 
               Style text, 
               CONSTRAINT layer_style_unique UNIQUE (LayerName,StyleName)
            );
            \endcode
            <returns>Number of styles.</returns>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.LabelExpression">
            <summary>
            Gets or sets an expression for label generation for the layer.
            </summary>
            <remarks>The syntax of expression is the same as for Shapefile.Labels.Generate method. To 
            generate labels based on single field use "[FieldName]" syntax. The property is supported
            for dynamic loading mode, where labels will be generated on the fly after each zooming 
            operation.
            </remarks>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.LabelOrientation">
            <summary>
            Gets or sets label orientation for polyline layers.
            </summary>
            \see OgrLayer.LabelExpression
        </member>
        <member name="P:MapWinGIS.IOgrLayer.LabelPosition">
            <summary>
            Gets or sets position of labels relative to their parent features.
            </summary>
            \see OgrLayer.LabelExpression
        </member>
        <member name="P:MapWinGIS.IOgrLayer.MaxFeatureCount">
            <summary>
            Gets or sets maximum number of features to be loaded in the memory.
            </summary>
            <remarks>If total number of features exceeds this number the layer will be rendered
            in dynamic loading mode (see OgrLayer.DynamicLoading). During dynamic loading if 
            number of features for the new map extents exceeds this number they won't be loaded. The default
            value of property can be changed with GlobalSettings.OgrLayerMaxFeatureCount.
            </remarks>
            \see OgrLayer.GetBuffer
        </member>
        <member name="M:MapWinGIS.IOgrLayer.RemoveStyle(System.String)">
            <summary>
            Removes style with particular name from the datasource.
            </summary>
            <param name="StyleName">The name of the style.</param>
            <returns>True on success.</returns>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.SupportsStyles">
            <summary>
            Checks whether the layers supports saving of styles to the datasource.
            </summary>
            <remarks>This property will check the presence of mw_styles table in the datasource and then
            will try to create one if it's missing. If neither succeeds, false will be returned.</remarks>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.get_StyleName(System.Int32)">
            <summary>
            Gets name of the style with particular index.
            </summary>
            <param name="styleIndex">Index of style.</param>
            <returns>Name of the style.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MapWinGIS.IOgrLayer.get_SupportsEditing(MapWinGIS.tkOgrSaveType)" -->
        <member name="M:MapWinGIS.IOgrLayer.get_UpdateSourceErrorMsg(System.Int32)">
            <summary>
            Gets a specified error message from the log registered during OgrLayer.SaveChanges call.
            </summary>
            <param name="errorIndex">Index of error.</param>
            <returns>Error message or empty string on invalid index.</returns>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.get_UpdateSourceErrorShapeIndex(System.Int32)">
            <summary>
            Gets shape index associated with specified error message 
            from the log registered during OgrLayer.SaveChanges call.
            </summary>
            <param name="errorIndex">Error index.</param>
            <returns>Index of shape in underlying in-memory shapefile (OgrLayer.GetBuffer()).</returns>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.UpdateSourceErrorCount">
            <summary>
            Gets the number of errors registered in the log during OgrLayer.SaveChanges call.
            </summary>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.FIDColumnName">
            <summary>
            Gets name of feature ID column.
            </summary>
            <remarks>Feature ID column corresponds to primary key in underlying database table.
            It is used to uniquely identify features and to save changes back to datasource.
            Feature ID column (if present) will always be inserted as a first field of attribute 
            table of underlying shapefile. This field must not be edited.\n
            
            For inserted features the column values are set to NULL. \n
            
            In case underlying datasource doesn't have feature ID column, an empty string will be returned.</remarks>
        </member>
        <member name="P:MapWinGIS.IOgrLayer.DataIsReprojected">
            <summary>
            Gets a value indicating whether underlying data ( OgrLayer.GetBuffer ) was reprojected.
            </summary>
            <remarks>
            This may happen because of projection mismatch on adding it to the map. See GlobalSettings.ReprojectLayersOnAdding for details.
            </remarks>
        </member>
        <member name="M:MapWinGIS.IOgrLayer.SaveChanges(System.Int32@,MapWinGIS.tkOgrSaveType,System.Boolean)">
            <summary>
            Saves local changes to the datasource.
            </summary>
            <remarks>
            To check whether the operation is supported for current layer use OgrLayer.get_SupportsEditing.\n
            
            The method works like this:\n
            
            1) Underlying shapefile is analyzed for changes, i.e. for shapes with Shapefile.get_ShapeModified property set to true. \n
            2) For each of such shapes UPDATE statement is generated by driver. 
            Shapes are identified in source by the value of Feature ID column.\n
            3) If update operation for particular shape fails the error is registered in:
            OgrLayer.get_UpdateSourceErrorMsg().\n
            
            The operation may fail for a particular shape because of 2 main reasons:
            - shape is invalid, while validateShapes parameter set to true;
            - new values aren't accepted by datasource, which often can maintain stricter data constraints.
            </remarks>
            <param name="savedCount">Returns number of saved changed.</param>
            <param name="saveType">Sets which part of data should be saved, geometry, attributes or both.
            Default value is tkOgrSaveType.ostSaveAll (i.e. both geometry and attributes).</param>
            <param name="validateShapes">Sets whether shapes will be validated before saving. Default value is true,
            i.e. invalid shapes won't be saved.</param>
            <returns>Result of the operation.</returns>
        </member>
        <member name="T:MapWinGIS.IShapeEditor">
            <summary>
            Facilitates interactive creation and editing of vector shapes.
            </summary>
            <remarks>
            
            
            <b>A. General:</b>
            
            Editor work with layers which have their Shapefile.InteractiveEditing property set to true.
            This may be both regular shapefile layers and OGR layers (shapefile buffer is accessible via OgrLayer.GetBuffer property for them).\n
            
            <i>In case of OGR layers some other preconditions must also be met to ensure that the changes can be saved back to datasource (see 
            OgrLayer.get_SupportsEditing) even if the interactive editing itself is working.</i>
            
            Each AxMap control has a single instance of shape editor associated with it available by AxMap.ShapeEditor property. \n
            
            To start editing operation it's enough to set appropriate tool to AxMap.CursorMode property. The following editing tools are 
            currently available: 
            - cmAddShape, 
            - cmEditShape, 
            - cmMoveShapes, 
            - cmRotateShapes, 
            - cmSplitByPolyline, 
            - cmSplitByPolygon, 
            - cmEraseByPolygon,
            - cmClipByPolygon.
            
            <b>B. Internal data storage.</b>
            
            Editor can store points and parts of only a single shape at a time. It supports all major shape types: points, multipoints, 
            polylines, polygons. Points entered by user with mouse are stored in internal buffer which can be accessed with
            ShapeEditor.RawData property. \n
            
            The data can be validated with ShapeEditor.ValidatedShape. All built-in tools perform validation before saving a new shape to the layer. 
            If validation fails AxMap.ShapeValidationFailed event will be fired to notify the user. 
            Invalid data can be be discarded by pressing Esc button or by calling ShapeEditor.Clear.\n
            
            <i>This validation behavior will also prevent changing the active tool (AxMap.CursorMode) while the editing operation is in progress.</i>
            
            The rendering of the point data is carried out independently of the layer. Visualization options can be changed by ShapeEditor.FillColor, 
            ShapeEditor.LineColor, ShapeEditor.FillTransparency. When editing of a new shape starts this properties
            will automatically be set with the values from the parent layer, so the shape being edited will look similar to its layer.
            To force redraw of the editor programatically it's enough to call AxMap.Redraw2 with RedrawDynamicTools parameter. 
            
            <b>C. Creation of new shapes.</b>
            
            - activated by settings AxMap.CursorMode = cmAddShape;
            - only creation of single part shapes supported;
            - layer to add the shape to is determined after the first mouse click by handling AxMap.ChooseLayer event;
            - new points can be added by left mouse button;
            - previous points can be removed by Ctrl+Z shortcut;
            - newly entered points by default are snapped to the vertices of exiting shapes (see ShapeEditor.SnapBehavior);
            - to finish the creation of shape Ctrl + left mouse click is used;
            - if the data passes validation, a new shape will automatically be inserted to the specified layer;
            
            <b>D. Editing of vertices and parts.</b>
            
            The data from existing shapes during the editing is copied to the editor while the original shape
            is hidden by setting Shapefile.set_ShapeIsHidden to true. After editing is finished and data in ShapeEditor is successfully validated
            original shape is substituted with this new data. If the changes are discarded then Shapefile.set_ShapeIsHidden 
            property of the original shape is simply set to false.
            
            Editing mode can be activated by settings AxMap.CursorMode = cmEditShape. Clicking on a shape from any layer with interactive 
            editing enabled will start editing session for this shape. After clicking on blank spot of the map without shapes
            an attempt to validate the shape and save the changes will be made. Vertices of shapes available for editing are highlighted
            under mouse cursor (ShapeEditor.HighlightVertices).
            
            cmEditShape cursor supports 2 behaviors which can be set by ShapeEditor.EditorBehavior property:
            - vertex editor - adding, moving, deleting of vertices; moving a shape as a whole;
            - part editor - moving and deleting of separate shape parts.
            
            To add new parts to the shape or create holes in polygon, ShapeEditor.StartOverlay method can be used. 
            It allows user to digitize a new polygon which afterwards will be overlayed with original shape in
            either union (eoAddPart) or difference mode (eoRemovePart).
            
            <b>E. Polyline and polygon overlays:</b>
            
            Overlays a single vector layer with custom digitized polygon or polyline. Currently the following tools of this type are available:
            - cmSplitByPolyline - splits polylines or polygons into multiple shapes;
            - cmSplitByPolygon - can be used to create a whole in polygon and a separate polygon shape to fill this hole;
            - cmEraseByPolygon - shapes and parts of shapes that intersect with the polygon will be removed from the layer;
            - cmClipByPolygon - only parts of shapes that intersect the polygon will remain, all other shapes will be removed.
            
            At first the tools work like cmAddShape tool, i.e. allow to digitize either polyline or polygon. After it's finished 
            (Ctrl + left mouse button) and the newly digitized shape is checked for validity, AxMap.ChooseLayer event will be fired.
            If the layer handle provided by user in this event represents vector layer in interactive editing mode, then the requested
            operation will be performed on this layer.
            
            <b>F. Group operations.</b>
            
            These operations work on a number of selected shapes within a single layer. The layer can be selected by handing AxMap.ChooseLayer event.
            
            Currently there are 2 built-in tools available:
            - cmRotateShapes - can rotate selected shapes around the centre of the bounding box;
            - cmMoveShapes - can move selected shapes.
            
            <i>Technically group operations aren't related to the ShapeEditor class, however they are mentioned here to cover all the available tools.</i>
            
            <b>G. Undo list.</b>
            
            All the operations performed by user are registered in so called Undo list (AxMap.UndoList). User can revert them (Ctrl+Z 
            or UndoList.Undo) or apply once again (Ctrl+Shift+Z or UndoList.Redo).
            When interactive editing session is taking place no other editing must be done programatically without registering
            in the Undo list. Otherwise Undo list will become invalid.\n
            
            \note The fully working implementation of the shape editor can be examined in the the Demo application 
            included in MapWinGIS installation (starting from v4.9.3). The source code for this application is available in
            the <a href = "http://mapwingis.codeplex.com/SourceControl/latest#NET%20Assemblies/Demo/MapWinGIS.Demo.sln">repository</a>.
            </remarks>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapeEditor.Area">
            <summary>
            Calculates the area of polygon being edited. 
            </summary>
            <remarks>Precise calculations on ellipsoid will be used if map projection is set and compatible
            with WGS84. Otherwise simply Euclidean geometry will be used.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.BearingType">
            <summary>
            Gets or sets type of the bearing to be display for line segments.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapeEditor.AreaDisplayMode">
            <summary>
            Gets or sets area display mode for polygon shapes. The default value is admNone.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapeEditor.Clear">
            <summary>
            Clears the editor returning it to an empty state. 
            </summary>
            <remarks>The method will discard any changes made to the shape being edited.</remarks>
        </member>
        <member name="M:MapWinGIS.IShapeEditor.CopyOptionsFrom(MapWinGIS.ShapeDrawingOptions)">
            <summary>
            Applies visualization options defined by ShapeDrawingOptions instance.
            </summary>
            <remarks>This method can be used to make the editor look consistent
            with the way subject shape looks in regular mode.</remarks>
            <param name="Options">Instance of visualization options.</param>
            \see Shapefile.DefaultDrawingOptions
        </member>
        <member name="P:MapWinGIS.IShapeEditor.EditorBehavior">
            <summary>
            Gets or sets editor behavior during the editing of existing shape, either vertex editor or part editor.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.EditorState">
            <summary>
            Gets the state an editor is currently in. See tkEditorState enumeration for details.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.FillColor">
            <summary>
            Gets or sets fill color for the shape being edited. Applies for polygon shapes only.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.FillTransparency">
            <summary>
            Gets or sets fill transparency for the shape being edited. Applies for polygon shapes only.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.GlobalCallback">
            <summary>
            Gets or sets a Callback object which handles progress and error messages.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.IShapeEditor.HasChanges">
            <summary>
            Returns true if editor has changes caused by user input.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.IsUsingEllipsoid">
            <summary>
            Gets a value indicating whether calculations are performed taking into account the shape of Earth 
            (when map projection is defined), or on 2D plane (Euclidean geometry).
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.Length">
            <summary>
            Gets the length of measured path (in meters if WGS84 compatible projection is set for map and in current map units otherwise).
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.ShowArea">
            <summary>
            Gets or sets a value indicating whether area will be displayed during creation or editing of polygons.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.AreaPrecision">
            <summary>
            Gets or sets the number of decimal degrees to be used to display area.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapeEditor.LengthPrecision">
            <summary>
            Gets or sets the number of decimal degrees to be used to display length.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapeEditor.AngleFormat">
            <summary>
            Gets or sets angle format to be used to display bearing.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapeEditor.AnglePrecision">
            <summary>
            Gets or sets the number of decimal degrees to be used to display bearing.
            </summary>
            <remarks>This setting is not used when AngleFormat is set to minutes or seconds.</remarks>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapeEditor.ShowBearing">
            <summary>
            Gets or sets a value indicating whether bearing of the line segments will be displayed.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapeEditor.ShowLength">
            <summary>
            Gets or sets a value indicating whether length of the line segments will be displayed.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapeEditor.HighlightVertices">
            <summary>
            Gets or sets value indicating whether vertices of shapes will be highlighted 
            on mouse move when interactive editing tools are used.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.IsDigitizing">
            <summary>
            Gets a value indicating whether a new shape is currently being created.
            </summary>
            <remarks>The property will return true is ShapeEditor is either in 
            esDigitize, esDigitizeUnbound or esOverlay states.</remarks>
            \see ShapeEditor.EditorState
        </member>
        <member name="P:MapWinGIS.IShapeEditor.IsEmpty">
            <summary>
            Returns true if the editor is empty.
            </summary>
            <remarks>Empty means that its underlying shape object has no points. However 
            ShapeEditor.EditorState can be different from esNone.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.Key">
            <summary>
            A text string associated with object. Any value can be stored by developer in this property.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.LastErrorCode">
            <summary>
            Gets the code of last error which took place inside this object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.LayerHandle">
            <summary>
            Gets layer handle of shape currently being edited. 
            </summary>
            <remarks>This property will be set automatically by ShapeEditor.StartEdit method, 
            and reverted back to -1 value by ShapeEditor.Clear or ShapeEditor.SaveChanges methods.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.LengthDisplayMode">
            <summary>
            Gets or sets length display mode.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.LineColor">
            <summary>
            Gets or sets line color for the shape being edited.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.LineWidth">
            <summary>
            Gets or sets line width for the shape being edited.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.IndicesVisible">
            <summary>
            Gets or sets a value indicating whether the indices of shape's vertices are visible.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.RawData">
            <summary>
            Gets underlying shape data without any attempt to validate it.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapeEditor.SaveChanges">
            <summary>
            Saves any changes made by user.
            </summary>
            <remarks>The editor will try to validate underlying shape on this call. If validation succeeds
            the changes will be passed to the original shapefile or other actions defined by
            current interactive tool will be triggered.
            Depending on editor state the actions will be:
            - esDigitize: new shape will be added to the shapefile set by ShapeEditor.LayerHandle property;
            - esEdit: shapefile will be updated with modified version of shape;
            - esDigitizeUnbound: a tool which started the unbound mode execute the appropriate action 
            (clipping, selection by polygon, etc.);
            - esOverlay: current overlay operation (i.e. eoAddPart or eoRemovePart) will be discarded, editor
            will return in esEdit state after which an attempt will be made to validate and save shape in regular manner.
            </remarks>
            <returns>True on success.</returns>
            \see AxMap.CursorMode, ShapeEditor.EditorState
        </member>
        <member name="M:MapWinGIS.IShapeEditor.Serialize">
            <summary>
            Saves the state of the class to the string
            </summary>
            <returns>A string with the state or an empty string on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapeEditor.Deserialize(System.String)">
            <summary>
            Restores the state of object from the string.
            </summary>
            <param name="state">A string generated by ShapeEditor.Serialize() method</param>
            <returns>True on success.</returns>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.SelectedVertex">
            <summary>
            Gets or sets the index of currently selected vertex.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.ShapeIndex">
            <summary>
            Gets index of the shape being edited.
            </summary>
            <remarks>This property will be set automatically by ShapeEditor.StartEdit method, 
            and reverted back to -1 value by ShapeEditor.Clear or ShapeEditor.SaveChanges methods.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.ShapeType">
            <summary>
            Gets shape type of the shape currently being edited.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.SnapBehavior">
            <summary>
            Gets or sets snapping behavior for Shape Editor (snaps vertices to the vertices of 
            exiting shapes on other layers).
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.SnapTolerance">
            <summary>
            Gets or sets snapping tolerance in screen coordinates.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapeEditor.StartEdit(System.Int32,System.Int32)">
            <summary>
            Starts editing of a given shape in specified shapefile.
            </summary>
            <param name="LayerHandle">Layer handle of the shapefile.</param>
            <param name="ShapeIndex">Index of shape to edit.</param>
            <returns>True on success.</returns>
            <remarks>The method will populate the editor with vertices of specified shape,
            hide original shape with Shapefile.put_ShapeIsHidden and set ShapeEditor.EditorState to esEdit.</remarks>
        </member>
        <member name="M:MapWinGIS.IShapeEditor.StartOverlay(MapWinGIS.tkEditorOverlay)">
            <summary>
            Starts overlay operation for the current shape.
            </summary>
            <remarks>Editor must be in esEdit state already, i.e. ShapeEditor.StartEdit must be called first.</remarks>
            <param name="overlayType">Type of overlay operation.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IShapeEditor.StartUnboundShape(MapWinGIS.ShpfileType)">
            <summary>
            Initializes editor for creation of unbound shape.
            </summary>
            <remarks>Unbound shape is the one which is not linked to particular shapefile. This
            method is used internally by a number of built-in tools, 
            like cmSelectByPolygon or cmSplitByPolyline.</remarks>
            <param name="ShpType">Type of shape to be created.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IShapeEditor.UndoPoint">
            <summary>
            Allows to undo the last vertex entered by user.
            </summary>
            <remarks>The method works when new shape is being created, i.e. ShapeEditor.IsDigitizing return true.</remarks>
            <returns>True on success, false if the editor is empty and there is no points to undo.</returns>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.ValidatedShape">
            <summary>
            Validates the data stored by editor and returns it as a shape.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.ValidationMode">
            <summary>
            Gets or sets validation mode for the editor. 
            </summary>
            <remarks>See tkEditorValidation enumeration for details.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.VerticesVisible">
            <summary>
            Gets or sets value indicating whether vertices edited shapes are visible.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapeEditor.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the specific error code.
            </summary>
            <param name="ErrorCode">The error code returned by LastErrorCode property.</param>
            <returns>String with the description.</returns>
        </member>
        <member name="M:MapWinGIS.IShapeEditor.get_PointXY(System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets coordinates of specified point of edited shape.
            </summary>
            <param name="pointIndex">Index of point.</param>
            <param name="x">X in projected map coordinates.</param>
            <param name="y">Y in projected map coordinates.</param>
            <returns>True if index of point within bounds.</returns>
        </member>
        <member name="M:MapWinGIS.IShapeEditor.put_PointXY(System.Int32,System.Double,System.Double)">
            <summary>
            Sets coordinates of specified point of edited shape.
            </summary>
            <param name="pointIndex">Index of point.</param>
            <param name="x">X in projected map coordinates.</param>
            <param name="y">Y in projected map coordinates.</param>
            <returns>True if index of point within bounds.</returns>
        </member>
        <member name="M:MapWinGIS.IShapeEditor.get_SegmentAngle(System.Int32)">
            <summary>
            Returns directional angle (bearing) of a given segment of edited shape.
            </summary>
            <param name="segmentIndex">Segment index to calculate angle for.</param>
            <returns>Angle in degrees.</returns>
        </member>
        <member name="M:MapWinGIS.IShapeEditor.get_SegmentLength(System.Int32)">
            <summary>
            Gets length of a given segment of edited shape.
            </summary>
            <param name="segmentIndex">Segment index to calculate length for.</param>
            <returns>Length of segment in meters.</returns>
            <remarks>If map projection is set and compatible with WGS84 geodesic distance will be returned.
            Otherwise Euclidean geometry will be used.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeEditor.numPoints">
            <summary>
            Gets number of points the shape being edited has.
            </summary>
        </member>
        <member name="T:MapWinGIS.IShapeValidationInfo">
            <summary>
            Provides information about validation of a single shapefile before or after certain operation.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IShapeValidationInfo.ClassName">
            <summary>
            Gets name of the class geoprocessing method was an from.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeValidationInfo.FixedCount">
            <summary>
            Gets number of errors that were fixed, i.e. invalid shapes were substituted with fixed ones.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeValidationInfo.IsValid">
            <summary>
            Get a value indicating whether the input or output was finally considered valid (probably after fixing invalid shapes).
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeValidationInfo.MethodName">
            <summary>
            Gets the name of geoprocessing methods that was validated.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeValidationInfo.ParameterName">
            <summary>
            Gets the name of parameter of geoprocessing methods that was validated.
            </summary>
            <remarks>Only parameters of Shapefile type are validated. "this" will be returned 
            in case shapefile object itself from which the method was ran was validated.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeValidationInfo.SkippedCount">
            <summary>
            Gets number of invalid shapes that were skipped during validation (i.e. input shapes not processed at all 
            or output shapes excluded from output).
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeValidationInfo.Status">
            <summary>
            Gets status of validation operation.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeValidationInfo.StillInvalidCount">
            <summary>
            Gets number of shape that were still invalid after possible attempts to fix them.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeValidationInfo.ValidationMode">
            <summary>
            Gets validation mode that was used.
            </summary>
            <remarks>The mode can be changed in GlobalSettings.ShapeInputValidationMode and 
            GlobalSettings.ShapeOutputValidationMode</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeValidationInfo.ValidationType">
            <summary>
            Gets a value indicating whether it was input or output validation.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeValidationInfo.WasValidated">
            <summary>
            Gets a value indicating whether validation was performed .
            </summary>
            <remarks>I.e. whether ValidationMode was set to something other than NoValidation.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeValidationInfo.WereInvalidCount">
            <summary>
            Gets number of shapes that were initially invalid. Depending on validation mode they might be fixed.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:MapWinGIS.IFieldStatOperations" -->
        <member name="M:MapWinGIS.IFieldStatOperations.AddFieldIndex(System.Int32,MapWinGIS.tkFieldStatOperation)">
            <summary>
            Adds statistic operation for a specified field.
            </summary>
            <param name="FieldIndex">Field index in input shapefile.</param>
            <param name="Operation">Operation to calculate.</param>
        </member>
        <member name="M:MapWinGIS.IFieldStatOperations.AddFieldName(System.String,MapWinGIS.tkFieldStatOperation)">
            <summary>
            Adds statistic operation for a specified field.
            </summary>
            <param name="Fieldname">Name of field in input shapefile (case-insensitive)</param>
            <param name="Operation">Operation to calculate.</param>
        </member>
        <member name="M:MapWinGIS.IFieldStatOperations.Clear">
            <summary>
            Clears all previously added operations
            </summary>
        </member>
        <member name="P:MapWinGIS.IFieldStatOperations.Count">
            <summary>
            Gets the number of added operations.
            </summary>
        </member>
        <member name="P:MapWinGIS.IFieldStatOperations.Key">
            <summary>
            A text string associated with object. Any value can be stored by developer in this property.
            </summary>
        </member>
        <member name="P:MapWinGIS.IFieldStatOperations.LastErrorCode">
            <summary>
            Gets the code of last error which took place inside this object.
            </summary>
        </member>
        <member name="M:MapWinGIS.IFieldStatOperations.Remove(System.Int32)">
            <summary>
            Removes operations with specified index.
            </summary>
            <param name="operationIndex">Index of operation to remove.</param>
            <returns>True on success, false if operation index is invalid.</returns>
        </member>
        <member name="M:MapWinGIS.IFieldStatOperations.Validate(MapWinGIS.Shapefile)">
            <summary>
            Checks whether current list of operations is applicable for a given shapefile.
            </summary>
            <remarks>For invalid operations get_OperationIsValid flag and get_OperationIsValidReason property are set.
            Invalid operations will be skipped when when doing statistic calculations and no output fields will be created for them.</remarks>
            <param name="sf">Shapefile to validate operations list against.</param>
            <returns>True if all operations are valid.</returns>
        </member>
        <member name="M:MapWinGIS.IFieldStatOperations.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the specific error code.
            </summary>
            <param name="ErrorCode">The error code returned by LastErrorCode property.</param>
            <returns>String with the description.</returns>
        </member>
        <member name="M:MapWinGIS.IFieldStatOperations.get_FieldIndex(System.Int32)">
            <summary>
            Gets field index for operation at specified position in the list.
            </summary>
            <param name="operationIndex">Index of operation in list.</param>
            <returns>Field index in input shapefile.</returns>
        </member>
        <member name="M:MapWinGIS.IFieldStatOperations.get_FieldName(System.Int32)">
            <summary>
            Gets field name for operation at specified position in the list.
            </summary>
            <param name="operationIndex">Index of operation in list.</param>
            <returns>Field name in input shapefile.</returns>
        </member>
        <member name="M:MapWinGIS.IFieldStatOperations.get_Operation(System.Int32)">
            <summary>
            Gets operation at specified position in the list.
            </summary>
            <param name="operationIndex">Index of operation in list.</param>
            <returns>Operation at specified position (fsoSum will be returned in case of invalid operation index).</returns>
        </member>
        <member name="M:MapWinGIS.IFieldStatOperations.get_OperationIsValid(System.Int32)">
            <summary>
            Gets the value of IsValid flag for operation. 
            </summary>
            <remarks>
            The flag is set only after FieldStatOperations.Validate methods was called. 
            The same list of operations may be valid for one shapefile and invalid for another.
            </remarks>
            <param name="operationIndex">Index of operation in list.</param>
            <returns>True in case operation is valid.</returns>
        </member>
        <member name="M:MapWinGIS.IFieldStatOperations.get_OperationIsValidReason(System.Int32)">
            <summary>
            Gets a value indicating the reason why the specific operation is invalid.
            </summary>
            <param name="operationIndex">Index of operation to check the property for.</param>
            <returns>Reason for invalidity or fovValid in operation is applicable.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:MapWinGIS.IFileManager" -->
        <member name="P:MapWinGIS.IFileManager.GlobalCallback">
            <summary>
            Gets or sets a Callback object which handles progress and error messages.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.IFileManager.Key">
            <summary>
            A text string associated with object. Any value can be stored by developer in this property.
            </summary>
        </member>
        <member name="P:MapWinGIS.IFileManager.LastErrorCode">
            <summary>
            Gets the code of last error which took place inside this object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IFileManager.LastOpenFilename">
            <summary>
            Gets filename of the last datasource that was attempted to be opened.
            </summary>
        </member>
        <member name="P:MapWinGIS.IFileManager.LastOpenIsSuccess">
            <summary>
            Gets a value indicating whether the last attempt to open a datasource was successful.
            </summary>
        </member>
        <member name="P:MapWinGIS.IFileManager.LastOpenStrategy">
            <summary>
            Gets a strategy that was used on last attempt to open datasource.
            </summary>
        </member>
        <member name="M:MapWinGIS.IFileManager.Open(System.String,MapWinGIS.tkFileOpenStrategy,MapWinGIS.ICallback)">
            <summary>
            Tries to open datasource with specified name.
            </summary>
            <param name="Filename">Filename of datasource.</param>
            <param name="OpenStrategy">Strategy to be used with default recommended value fosAutoDetect.</param>
            <param name="cBack">Callback interface.</param>
            <remarks>Return value may be either Shapefile or Image object. The latter is used for rendering both RGB images and grids.
            Under the hood the function uses OpenShapefile and OpenRaster methods, so their behaviour will be consistent.</remarks>
            <returns>Opened datasource or null on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IFileManager.OpenRaster(System.String,MapWinGIS.tkFileOpenStrategy,MapWinGIS.ICallback)">
            <summary>
            Tries to open raster datasource (either RGB image or grid) with specified name.
            </summary>
            <param name="Filename">Filename of datasource.</param>
            <param name="OpenStrategy">Strategy to be used with default recommended value fosAutoDetect. Three more strategies 
            are applicable here: fosRgbImage, fosDirectGrid, fosProxyForGrid.</param>
            <param name="cBack">Callback interface.</param>
            <returns>Image object or null on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IFileManager.OpenShapefile(System.String,MapWinGIS.ICallback)">
            <summary>
             Tries to open shapefile with specified name.
            </summary>
            <param name="Filename">Filename of shapefile to open.</param>
            <param name="cBack">Callback interface.</param>
            <returns>Shapefile object or null on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IFileManager.get_CanOpenAs(System.String,MapWinGIS.tkFileOpenStrategy)">
            <summary>
            Checks whether specific open strategy is applicable for a given datasource.
            </summary>
            <param name="Filename">Filename of datasource to open.</param>
            <param name="OpenStrategy">Open strategy to check.</param>
            <remarks>Inconsistent behaviour, i.e. return value is false while datasource is still can be opened with a given strategy, 
            should be reported as bugs. The opposite case, i.e. return value is true while datasource fails to open with given strategy, 
            may occur by design, but it may also be an indication of bugs in some other parts of MapWinGIS.</remarks>
            <returns>True in case strategy is applicable.</returns>
        </member>
        <member name="M:MapWinGIS.IFileManager.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the specific error code.
            </summary>
            <param name="ErrorCode">The error code returned by LastErrorCode property.</param>
            <returns>String with the description.</returns>
        </member>
        <member name="M:MapWinGIS.IFileManager.get_IsGrid(System.String)">
            <summary>
            Checks whether specified datasource is grid, i.e. non-RGB raster datasource which 
            require synthetic colour scheme for rendering.
            </summary>
            <param name="Filename">Filename of datasource to be checked.</param>
            <returns>True in case datasource is grid.</returns>
        </member>
        <member name="M:MapWinGIS.IFileManager.get_IsRgbImage(System.String)">
            <summary>
             Checks whether datasource is RGB image.
            </summary>
            <param name="Filename"></param>
            <remarks>Attempt is made to open datasource with GDAL. If it succeeds, a check is made whether bands with Red, Green, Blue
            colour interpretation are present in it.</remarks>
            <returns>True if datasource is RGB image.</returns>
        </member>
        <member name="M:MapWinGIS.IFileManager.get_IsSupported(System.String)">
            <summary>
            Checks whether the datasource is supported (can be opened) by MapWinGis.
            </summary>
            <param name="Filename">Filename of datasource</param>
            <remarks>Under the hood open strategy will be determined with FileManager.get_OpenStrategy and then
            FileManager.get_CanOpenAs(strategy) is called.</remarks>
            <returns>True in case datasource can be opened.</returns>
        </member>
        <member name="M:MapWinGIS.IFileManager.get_IsSupportedBy(System.String,MapWinGIS.tkSupportType)">
            <summary>
            Checks whether datasource is supported by specified subsystem of MapWinGIS.
            </summary>
            <param name="Filename">Filename of datasource</param>
            <param name="supportType">The subsystem to choose (the list may be extended later on).</param>
            <returns>True in case the datasource is supported, i.e. can be opened.</returns>
        </member>
        <member name="M:MapWinGIS.IFileManager.get_IsVectorLayer(System.String)">
            <summary>
            Checks whether specified datasource is vector layer that can be opened by MapWinGIS.
            </summary>
            <param name="Filename">Filename of datasource.</param>
            <remarks>Currently only shapefile format can be opened directly.</remarks>
            <returns>True in case datasource is vector one and is supported by MapWinGIS.</returns>
        </member>
        <member name="M:MapWinGIS.IFileManager.get_OpenStrategy(System.String)">
            <summary>
            Determines optimal open strategy for datasource.
            </summary>
            <param name="Filename">Filename of datasource.</param>
            <returns>The optimal strategy to open datasource.</returns>
        </member>
        <member name="M:MapWinGIS.IFileManager.OpenFromDatabase(System.String,System.String)">
            <summary>
            Opens a layer or runs a query against OGR spatial database.
            </summary>
            <remarks>This method will search if there is a layer with specified name in the datasource,
            and if so will open it. Otherwise it will run OgrDatasource.RunQuery method with provided
            layerNameOrQuery argument.</remarks>
            <param name="connectionString">Connection string. See details for particular formats <a href ="http://www.gdal.org/ogr_formats.html">here</a>.</param>
            <param name="layerNameOrQuery">Name of the layer (i.e. database table) or SQL query.</param>
            <returns>Opened layer or null on failure.</returns>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IFileManager.ClearGdalOverviews(System.String)">
            <summary>
            Clears overviews for a raster datasource managed by GDAL.
            </summary>
            <param name="Filename">Filename of datasource.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IFileManager.BuildGdalOverviews(System.String)">
            <summary>
            Builds overviews for a raster datasource managed by GDAL.
            </summary>
            <param name="Filename">Filename of datasource.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IFileManager.RemoveProxyForGrid(System.String)">
            <summary>
            Remove proxy images generated for grid rendering.
            </summary>
            <param name="Filename">Filename of grid datasource.</param>
            <returns></returns>
        </member>
        <member name="M:MapWinGIS.IFileManager.get_HasGdalOverviews(System.String)">
            <summary>
            Returns true if specified raster datasource managed by GDAL has overviews.
            </summary>
            <param name="Filename">Filename of datasource.</param>
            <returns>True if overviews are exist.</returns>
        </member>
        <member name="M:MapWinGIS.IFileManager.get_HasValidProxyForGrid(System.String)">
            <summary>
            Returns true if specified grid datasource has proxy images for its rendering.
            </summary>
            <param name="Filename">Filename of grid datasource.</param>
            <returns>True if proxy images exist.</returns>
        </member>
        <member name="P:MapWinGIS.IFileManager.CdlgFilter">
            <summary>
            Gets expression to be set for OpenFileDialog.Filter property to select supported datasources.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IFileManager.CdlgRasterFilter">
            <summary>
            Gets expression to be set for OpenFileDialog.Filter property to select raster datasources (both RGB images and grids).
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IFileManager.CdlgVectorFilter">
            <summary>
            Gets expression to be set for OpenFileDialog.Filter property to select vector datasources.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IFileManager.SupportedGdalFormats">
            <summary>
            Gets string with the list of supported GDAL formats.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IFileManager.OpenVectorDatasource(System.String)">
            <summary>
            Tries to open specified file as OGR datasource.
            </summary>
            <param name="Filename">Filename of the datasource to be opened.</param>
            <returns>Instance of OgrDatasource or null on failure.</returns>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IFileManager.OpenVectorLayer(System.String,MapWinGIS.ShpfileType,System.Boolean)">
            <summary>
            Tries to open specified file as OGR layer.
            </summary>
            <remarks>When preferedShapeType is set to default ShpfileType.SHP_NULLSHAPE value or there is no layer 
            with preferedShapeType, then the first layer in datasource will be returned.</remarks>
            <param name="Filename">Filename of the datasource to be opened.</param>
            <param name="preferedShapeType">Sets type of layer to be returned from datasource in case there are multiple layers available.</param>
            <param name="forUpdate">True in case layer should be open in read/write mode.</param>
            <returns>Instance of OgrLayer or null on failure.</returns>
            \new493 Added in version 4.9.3
        </member>
        <member name="T:MapWinGIS.IField">
             <summary>
             Represents a single field of the attribute table.
             </summary>
             \dot
             digraph field_diagram {
             nodesep = 0.3;
             ranksep = 0.3;
             splines = ortho;
             
             node [shape= "polygon", peripheries = 3, fontname=Helvetica, fontsize=9, color = gray, style = filled, height = 0.2, width = 0.8];
             fld [ label="Field" URL="\ref Field"];
            
             node [color = tan peripheries = 1 height = 0.3, width = 1.0];
             tbl [ label="Table" URL="\ref Table"];
             
             edge [ dir = "none", arrowhead="open", style = solid, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060", labeldistance = 0.6 ];
             tbl -> fld [ URL="\ref Table.get_Field()", tooltip = "Table.get_Field()", headlabel = "   n"];
             }
             \enddot
             <a href = "diagrams.html">Graph description</a>
             
             To show the properties of the field the following code can be used:
             \code
             Shapefile sf = some_shapefile;
             Field field = sf.get_Field(fieldIndex);
             if (field != null)
             {
                 string s = string.Format("Name = {0}; type = {1}; width = {2}; precision = {3}", 
                 field.Name, field.Type.ToString(), field.Width.ToString(), field.Precision.ToString());
                 Debug.Print(s);
             }
             \endcode
        </member>
        <member name="M:MapWinGIS.IField.Clone">
            <summary>
            Creates an exact copy of the field.
            </summary>
            <returns>The copy of the field.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IField.GlobalCallback">
            <summary>
            The global callback is the interface used by MapWinGIS to pass progress and error events to interested applications.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.IField.Key">
            <summary>
            The key may be used by the programmer to store any string data associated with the object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IField.Visible">
            <summary>
            Gets or sets a value indicating whether the field is visible. 
            For use in application only, not used by MapWinGIS internally.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IField.Alias">
            <summary>
            Gets or sets the alias for the field.
            For use in application only, not used by MapWinGIS internally.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IField.Joined">
            <summary>
            Gets a value indicating whether this field is joined.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IField.Expression">
            <summary>
            Gets or sets the expression for the field.
            For use in application only, not used by MapWinGIS internally.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IField.Modified">
            <summary>
            Gets or sets a value indicating whether this field is modified.
            It is used during saving of changes for OgrLayer. The flag should be set by application code.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IField.LastErrorCode">
            <summary>
            Retrieves the last error generated in the object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IField.Name">
            <summary>
            Gets or sets the name of the field.
            </summary>
        </member>
        <member name="P:MapWinGIS.IField.Precision">
            <summary>
            Gets or sets the precision of the field. Precision only applies to fields of fieldtype double.
            </summary>
        </member>
        <member name="P:MapWinGIS.IField.Type">
            <summary>
            Gets or sets the field type of the field.
            </summary>
        </member>
        <member name="P:MapWinGIS.IField.Width">
            <summary>
            Gets or sets the width of the field.
            </summary>
        </member>
        <member name="M:MapWinGIS.IField.get_ErrorMsg(System.Int32)">
            <summary>
            Retrieves the error message associated with the specified error code.
            </summary>
            <param name="ErrorCode">The error code for which the error message is required.</param>
            <returns>The error message description for the specified error code.</returns>
        </member>
        <member name="T:MapWinGIS.IGeoProjection">
            <summary>
            Holds information about coordinate system and projection of the data.
            </summary>
            <b>1. Formats and initialization. </b>Information about coordinate system and projection  can be represented in several formats:
                - ESRI WKT string;
                - proj 4 string;
                - EPSG code;
                .
            <a href ="http://www.epsg.org/">EPSG codes</a> represent a standardization effort to map each projection to the unique code. 
            It's recommended to use these codes whenever possible. GeoProjection.ImportFromAutoDetect() method implements logic to discern 
            the format of the provided projection string. \n
            \code
            GeoProjection proj = new GeoProjection(); 
            // EPSG code
            proj.ImportFromEPSG(4326);  // WGS84
                
            // proj 4 string
            proj.ImportFromProj4("+proj=longlat +datum=WGS84 +no_defs");  // WGS84
            
            //autodetect the format
            string unknown_format = "4326";
            proj.ImportFromAutoDetect(unknown_format);
            
            // from file
            string filename = "some_name";
            proj.ReadFromFile(filename);
            
            // show the name of the loaded projection
            Debug.Print("Projection loaded: " + proj.Name);
            
            // show proj 4 representation
            Debug.Print("Proj4 representation: " + proj.ExportToProj4());
            \endcode
            Projection is usually stored in a separate file with .prj extension which accompany the data file. 
            GeoProjection.ReadFromFile() and GeoProjection.WriteToFile() to interact with projection file.\n\n
            <b>2. Classification and parameters. </b>Coordinate systems are split in 2 broad categories:
                -# Geographical:
                    - the data is specified in decimal degrees as a pair of latitude and longitude value;
                    - it implies the usage of equirectangular projection for displaying the data on the screen;
                    .
                -# Projected:
                    - the Earth surface data is projected to the plane according to specific rule (projection);
                    - a number of projections can be used (Mercator, Transverse Mercator, Lambert conformal conic, etc),
                    each of the them characterized with certain distortions and certain properties of the data which are preserved 
                    (like angles, directions, area, etc.);
                    - usually the data is specified in meters or feet;
                    .
            Normally spatial reference holds the information about:
                - the reference ellipsoid (GRS80, Krasovski, etc.);
                - the name of datum, which defines coordinate system relative to the surface of ellipsoid (WGS84, NAD83, Pulkovo1942, etc.);
                - optionally projection, if the data isn't defined in decimal degrees (UTM, Gauss-Kruger, etc).
                . 
                \n
            Use GeoProjection.IsGeographic, GeoProjection.IsProjected properties to distinguish geographical and 
            projected coordinate systems. To retrieve parameters of geographic coordinate system - GeoProjection.get_GeogCSParam.
            To extract parameters of the projection use GeoProjection.get_ProjectionParam.\n\n
            <b>3. Well-known coordinate systems. </b>The most widely spread geographic coordinate system is so called WGS84. It is based on WGS84 datum 
            and uses GRS80 ellipsoid. Universal Transverse Mercator is the most widely used projection of this coordinate system, 
            which defines sixty 6-degree zones which cover the whole globe. There are several methods to setup the widely used 
            coordinate systems and projections: GeoProjection.SetWellKnownGeogCS(), GeoProjection.SetWgs84Projection(), 
            GeoProjection.SetNad83Projection().\n\n
            The definition of WGS84 coordinate system and projection in different formats can be as following:
                -# proj4:
                    - geographic WGS84: +proj=longlat +datum=WGS84 +no_defs 
                    - WGS84/UTM 10: +proj=utm +zone=10 +datum=WGS84 +units=m +no_defs \n
                    .
                -# EPSG code: 
                    - geographic: 4326
                    - WGS84/UTM 10: 32610
                    .
                -# ESRI WKT WGS84:
                    \image html wgs.png
            See http://spatialreference.org/ for specification of coordinate systems and projections.\n\n
            <b>4. Standardization issues. </b>Because of the lack of standardization it's not guaranteed that subsequent exporting and importing operations for the certain projection 
            format (proj4, WKT, etc.) will yield the same state of the geoprojection object. Therefore it's no guaranteed way
            to copy the state of the object unless knowing the way it was initialized.\n\n
            The different variants for specification of the same projection even in the same format became quite a problem for GIS
            software. GeoProjection.get_IsSame and GeoProjection.get_IsSameExt perform the comparison of 2 projections. 
            The task is critical when one need to determine whether the data from several sources will be displayed correctly on the screen.
            .
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IGeoProjection.CopyFrom(MapWinGIS.GeoProjection)">
            <summary>
            Copies information from another GeoProjection object.
            </summary>
            <param name="sourceProj">The geoprojection to copy information from.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.ExportToProj4">
            <summary>
            Exports information to the proj4 format.
            </summary>
            <returns>The string with proj4 projection.</returns>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.ExportToWKT">
            <summary>
            Exports information to the WKT format.
            </summary>
            <returns>The string with WKT projection.</returns>
        </member>
        <member name="P:MapWinGIS.IGeoProjection.GeogCSName">
            <summary>
            Returns the name of the coordinate system.
            </summary>
            <remarks>An empty string will be returned unless GeoProjection.IsGeographic property returns true.</remarks>
        </member>
        <member name="P:MapWinGIS.IGeoProjection.GlobalCallback">
            <summary>
            Gets or sets a callback object which is used to report errors.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="M:MapWinGIS.IGeoProjection.ImportFromAutoDetect(System.String)">
            <summary>
            Initializes geoprojection from the input string of arbitrary format.
            </summary>
            <remarks>See GDAL documentation on particular formats supported.</remarks>
            <param name="proj">The string to initialize projection from.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.ImportFromEPSG(System.Int32)">
            <summary>
            Initializes geoprojection object from EPSG numeric code.
            </summary>
            <param name="projCode">EPSG code.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.ImportFromESRI(System.String)">
            <summary>
            Initializes geoprojection object from ESRI WKT format.
            </summary>
            <param name="proj">The string in the ESRI WKT format.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.ImportFromProj4(System.String)">
            <summary>
            Initializes geoprojection object from proj4 format.
            </summary>
            <param name="proj">The string in the proj4 format.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.ImportFromWKT(System.String)">
            <summary>
            Initializes geoprojection object from OGC WKT format.
            </summary>
            <param name="proj">The string in the OGC WKT format.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.IGeoProjection.InverseFlattening">
            <summary>
            Returns the inverse flattening of the reference ellipsoid of the coordinate system.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGeoProjection.IsEmpty">
            <summary>
            Gets a boolean value which indicates whether any projection definition is stored in the object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGeoProjection.IsGeographic">
            <summary>
            Gets a boolean value which indicates whether the coordinate system stored in the object is the geographic one.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGeoProjection.IsLocal">
            <summary>
            Gets a boolean value which indicates whether the coordinate system stored in the object is the local one.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGeoProjection.IsProjected">
            <summary>
            Gets a boolean value which indicates whether the coordinate system stored in the object is the projected one.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGeoProjection.Key">
            <summary>
            A text string associated with the instance of the class. Any value can be stored by developer in this property.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGeoProjection.LastErrorCode">
            <summary>
            Retrieves the numeric code of the last error that took place in the class.
            </summary>
            <remarks>The usage of this property clears the error code.</remarks>
        </member>
        <member name="P:MapWinGIS.IGeoProjection.Name">
            <summary>
            Returns the name of the coordinate system.
            </summary>
            <remarks>Either GeoProjection.GeogCSName or GeoProjection.ProjectionName will be returned 
            depending on the type of coordinate system.</remarks>
        </member>
        <member name="P:MapWinGIS.IGeoProjection.ProjectionName">
            <summary>
            The name of the projected coordinate system.
            </summary>
            <remarks>An empty string will be returned unless GeoProjection.IsProjected property returns true.</remarks>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.ReadFromFile(System.String)">
            <summary>
            Initializes geoprojection from the specified file.
            </summary>
            <remarks>The method is used by MapWinGIS for reading projection of the data layer.
            The file with projection must have the same name as the name of the data file and .prj extension.</remarks>
            <param name="Filename">The name of the file to read projection string from.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.IGeoProjection.SemiMajor">
            <summary>
            Returns the half of the major axis of the reference ellipsoid.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGeoProjection.SemiMinor">
            <summary>
            Returns the half of the minor axis of the reference ellipsoid.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.SetNad83Projection(MapWinGIS.tkNad83Projection)">
            <summary>
            Initializes the object with NAD83 projection specified by enumerated constant.
            </summary>
            <param name="Projection">Numeric code of the projection (EPSG code).</param>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.SetWellKnownGeogCS(MapWinGIS.tkCoordinateSystem)">
            <summary>
            Initializes the object with well known geographic coordinate system.
            </summary>
            <param name="newVal">Numeric code of the projection (EPSG code).</param>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.SetWgs84Projection(MapWinGIS.tkWgs84Projection)">
            <summary>
            Initializes the object with WGS84 projection specified by enumerated constant.
            </summary>
            <param name="Projection">Numeric code of the projection (EPSG code).</param>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.WriteToFile(System.String)">
            <summary>
            Writes projection string in ESRI WKT format to the specified file.
            </summary>
            <param name="Filename">The name of the file to write the string in.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the specific error code.
            </summary>
            <param name="ErrorCode">The error code returned by ShapefileCategories.LastErrorCode.</param>
            <returns>The string with the description.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MapWinGIS.IGeoProjection.get_GeogCSParam(MapWinGIS.tkGeogCSParameter,System.Double@)" -->
        <member name="M:MapWinGIS.IGeoProjection.get_IsSame(MapWinGIS.GeoProjection)">
            <summary>
            Returns a boolean value which indicates whether 2 projections are identical.
            </summary>
            <remarks>Projections will be reported as non-identical if at least one of parameters
            differ between them, even if it doesn't affect the reprojection process. For example,
            different name of the datums, while all the parameters of the datums match.</remarks>
            <param name="proj">The projection object to compare the current projection with.</param>
            <returns>True in case the projection definitions are identical and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.get_IsSameExt(MapWinGIS.GeoProjection,MapWinGIS.Extents,System.Int32)">
            <summary>
            Performs a test of identity for 2 projections.
            </summary>
            <remarks>The method perform reprojection of the random points in the given extents to WGS84 
            coordinate system (EPSG:4326) for both projections being compared. In case the 
            coordinates of the projected points match - projections are considered the same. 
            This doesn't mean that result of test will be the same for some other extents or that 
            projection definitions are completely identical. But it ensures that data layers with 
            these 2 projection can be displayed jointly within the tested extents.
            </remarks>
            <param name="proj">The compared projection definition.</param>
            <param name="bounds">The bounding box to take random points for comparison from.</param>
            <param name="numSamplingPoints">Number of the random points to take for sampling.</param>
            <returns>True in case the projections proved to be identical and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.get_IsSameGeogCS(MapWinGIS.GeoProjection)">
            <summary>
            Returns a boolean value which indicates whether 2 projections belong to the same geographic coordinate system.
            </summary>
            <param name="proj">The compared projection definition.</param>
            <returns>True in case projection share the same geographic coordinate system and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.get_ProjectionParam(MapWinGIS.tkProjectionParameter,System.Double@)">
            <summary>
            Returns specified parameter of the projection
            </summary>
            <param name="Name">The parameter to return.</param>
            <param name="Value">The returned value of the parameter.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.IGeoProjection.HasTransformation">
            <summary>
            Gets a value indicating whether transformation to some target projection was opened with GeoProjection.StartTransform() call.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.StartTransform(MapWinGIS.GeoProjection)">
            <summary>
            Opens transformation to the specified target projection. The transformation will be used by GeoProjection. 
            Transform calls until GeoProjection.StopTransform is called.
            </summary>
            <param name="target">The target projection.</param>
            <returns>True if transformation is created and false on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.StopTransform">
            <summary>
            Stops transformation created by GeoProjection.StartTransform call.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.Transform(System.Double@,System.Double@)">
            <summary>
            Transforms a single point from this projection to target projection specified in GeoProjection.StartTransform call.
            </summary>
            <param name="x">X coordinate of point to transform.</param>
            <param name="y">Y coordinate of point to transform.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.Clear">
            <summary>
            Returns object to initial empty state.
            </summary>
            \see GeoProjection.IsFrozen
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGeoProjection.Clone">
            <summary>
            Creates a copy GeoProjection object
            </summary>
            <returns>A copy of GeoProjection object.</returns>
            <remarks>It's not guaranteed that exact clone will be created. The method uses 
            GeoProjection.ExportFromWKT and GeoProjection.ImportFromWKT pair of methods which may yield slightly different result, 
            as ExportToWKT may add defaults for parameters missing in initial Proj4 definition.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IGeoProjection.IsFrozen">
            <summary>
            Gets a value indicating whether the object can be changed.
            </summary>
            <remarks>
            When frozen all the methods which can change the inner state of object will fail.
            The property is set to true for map projection applied with AxMap.SetGeoProjection (see details there).
            </remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGeoProjection.SetGoogleMercator">
            <summary>
            Sets so called Google Mercator projection (aka Spherical Mercator; EPSG:3857), 
            commonly used by tile servers.
            </summary>
            <returns>True on success.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IGeoProjection.SetWgs84">
            <summary>
            Sets WGS84 geographic coordinates system (EPSG:4326). 
            </summary>
            <remarks>
            Equirectangular projection will be implicitly used during rendering.
            </remarks>
            <returns>True on success.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGeoProjection.TryAutoDetectEpsg(System.Int32@)">
            <summary>
            Tries to determine EPSG code projection currently stored in the object.
            </summary>
            <param name="epsgCode">Determined epsgCode or -1 on failure.</param>
            <remarks>It uses GDAL's OGRSpatialReference.AutoIdentifyEPSG method and recognized 
            limited number of commonly used coordinate systems (WGS84, NAD83, etc) and their zonal projections,
            plus information stored in Authority node for WKT format will be used as well.</remarks>
            <returns>True on success.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IGeoProjection.LinearUnits">
            <summary>
            Gets the linear units from projection definition.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGeoProjection.WriteToFileEx(System.String,System.Boolean)">
            <summary>
            Writes projection string to a file.
            </summary>
            <param name="Filename">The filename.</param>
            <param name="esri">If set to <c>true</c> ESRI WKT format is used.</param>
            <returns>True on success.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IGeoProjection.ReadFromFileEx(System.String,System.Boolean)">
            <summary>
            Reads projection string from a file.
            </summary>
            <param name="Filename">The filename.</param>
            <param name="esri">If set to <c>true</c> ESRI WKT format is used.</param>
            <returns>True on success.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IGeoProjection.ExportToEsri">
            <summary>
            Exports projection string to ESRI WKT format.
            </summary>
            <returns>Resulting string.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="T:MapWinGIS.ICallback">
            <summary>
            An interface for callback objects which can be used to return information about progress and errors.     
            </summary>
            <remarks>Here is an example which demonstrates the usage of Callback.</remarks>
            \code
            public void Test()
            {
                Shapefile sf = new Shapefile();
                sf.GlobalCallback = new Callback();
            }
            class Callback : ICallback
            { 
                public void Error(string KeyOfSender, string ErrorMsg)
                {
                    Debug.Print("Error reported: " + ErrorMsg);
                }
                public void Progress(string KeyOfSender, int Percent, string Message)
                {
                    Debug.Print(Message + ": " + Percent + "%");
                }
            }
            \endcode
        </member>
        <member name="M:MapWinGIS.ICallback.Error(System.String,System.String)">
            <summary>
            A function to report the information about an error.
            </summary>
            <param name="KeyOfSender">The key associated with the object in which error took place.</param>
            <param name="ErrorMsg">The description of the error.</param>
        </member>
        <member name="M:MapWinGIS.ICallback.Progress(System.String,System.Int32,System.String)">
            <summary>
            A function to report the information about progress of the task.
            </summary>
            <param name="KeyOfSender">The key associated with the object in which error took place.</param>
            <param name="Percent">The percent of completion (from 0 to 100).</param>
            <param name="Message">The information about the task being executed.</param>
        </member>
        <member name="T:MapWinGIS.IGlobalSettings">
            <summary>
            Holds global settings for MapWinGIS. Allows to retrieve GDAL errors.
            </summary>
            <remarks>All the properties of this class are defined as global variables and therefore changes in any instance of this 
            class will affect all the instances of MapWinGIS control hosted by the application.\n\n
            The major part of properties require advanced understanding of MapWinGIS functioning therefore it's not recommended
            to change them without a good reason.\n\n
            Sometimes properties can be added to this class to provide a switch for testing new functions.
            Such properties may be removed afterwards (GlobalSettings.ShapefileFastUnion for example).</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.ClipperGcsMultiplicationFactor">
            <summary>
            Gets a sets a value which defines the multiplication coefficient for data in decimal degrees.
            </summary>
            <remarks>The value is used for Clipper library due to the lack of built-in scaling in it. The default value is 10000.0.</remarks>
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.MinAreaToPerimeterRatio">
            <summary>
            Gets or sets a value which is used to weed out long narrow "splintered" polygons generated by geoprocessing routines.
            </summary>
            <remarks>Polygons with area to perimeter ratio less than this values won't be passed to the output.
            The default value is 0.0001.
            </remarks>
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.MinPolygonArea">
            <summary>
            Gets or sets the minimal area of polygon which will be passed to the output by geoprocessing routines.
            </summary>
            <remarks>When the data is defined in decimal degrees, this value will be divided into squared conversion factor 
            between decimal degrees and meters (roughly 110000 per degree).</remarks>
            <remarks>The default value is 1.0.</remarks>
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.ShapefileFastMode">
            <summary>
            Gets or sets the value which indicates whether all the new instances of Shapefile class will be initialized with the fast mode turned on.
            </summary>
            <remarks>The default value is false.</remarks>
            \see Shapefile.FastMode
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.GdalLastErrorMsg">
            <summary>
            Extracts the last error message reported by GDAL library.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.GdalLastErrorNo">
            <summary>
            Gets a subtype of the last error reported by GDAL library.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.GdalLastErrorType">
            <summary>
            Gets a type of the last error reported by GDAL library.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.GdalReprojectionErrorMsg">
            <summary>
            Gets last error reported by GDAL reprojection routine.
            </summary>
            <remarks>Can be used to find out the source of failure of Shapefile.Reproject and Shapefile.ReprojectInPlace functions.</remarks>
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.LabelsCompositingQuality">
            <summary>
            Gets or sets GDI+ compositing quality for label drawing which will be used for all newly added layers.
            </summary>
            <remarks>The default value is HighQuality.</remarks>
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.LabelsSmoothingMode">
            <summary>
            Gets or sets GDI+ smoothing mode for label drawing which will be used for all newly added layers.
            </summary>
            <remarks>The default value is HighQualityMode.</remarks>
        </member>
        <member name="M:MapWinGIS.IGlobalSettings.ResetGdalError">
            <summary>
            Clears information about last GDAL error.
            </summary>
            <remarks>Affects GdalLastErrorMsg, GdalLastErrorNo, GdalLastErrorType, GdalReprojectionErrorMsg properties.</remarks>
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.ShapefileFastUnion">
            <summary>
            Gets or sets a value which affects the speed of Shapefile.Union operation.
            </summary>
            <remarks>The default value is true.</remarks>
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.GridProxyFormat">
            <summary>
            Gets or sets format to be used for displaying grid datasources using image proxy.
            </summary>
            <remarks>Methods like Grid.HasImageProxy or Grid.RemoveImageProxy will only 
            take into account the format chosen in these property.</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.GridProxyMode">
            <summary>
            Gets or sets preferred display mode for grid datasources. 
            </summary>
            <remarks>This property will be used in AxMap.AddLayer and Grid.OpenAsImage methods 
            if Grid.PreferedDisplayMode is set to gpmAuto.</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.LabelsCollisionMode">
            <summary>
            Sets collision mode for all instances of Labels class (which represent labels for either shapefiles or images).
            </summary>
            \new490 Added in version 4.9.0
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.MaxDirectGridSizeMb">
            <summary>
            Gets or sets maximum allowable size in MB for a grid datasource to be opened without proxy creation.
            </summary>
            <remarks> For grids with size exceeding the value of this property, proxy image will be created when GridProxyMode
            is set to gpmAuto or gpmFavourNoProxy; for gpmNoProxy Grid.CanDisplayWithoutProxy will return false 
            and Grid.OpenAsImage will fail. Grids of smaller size will be rendered directly for all the modes but gpmUseProxy if
            datasources format allows it (see Grid.CanDisplayWithoutProxy).
            Default value is 20.0 MB. Zero of negative values set no limitation. 
            Direct rendering of grid datasources is computationally expensive process 
            therefore for large datasources rendering may become too slow.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.MaxUniqueValuesCountForGridScheme">
            <summary>
            Gets or sets the maximum allowable number of unique values in grid color scheme. 
            </summary>
            <remarks>Affects Grid.GeneratedColorScheme when generation method is set to  gsgUniqueValues or gsgUniqueValuesOrGradient.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.ZoomToFirstLayer">
            <summary>
            Gets or sets a value indicating whether a map will zoom automatically to the first layer added with AxMap.AddLayer.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGlobalSettings.get_LocalizedString(MapWinGIS.tkLocalizedStrings)">
            <summary>
            Gets the localized version for a specified string used in GUI.
            </summary>
            <param name="str">String to get localized version for.</param>
            <returns>Localized string.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGlobalSettings.set_LocalizedString(MapWinGIS.tkLocalizedStrings,System.String)">
            <summary>
            Sets the localized version for a specified string used in GUI.
            </summary>
            <param name="str">String to set localized version for.</param>
            <param name="retVal">Localized string.</param>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.DefaultColorSchemeForGrids">
            <summary>
            Gets or sets colour scheme to be used for rendering grids.
            </summary>
            <remarks>The value will be used on passing Grid object to AxMap.AddLayer method.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.GeometryEngine">
            <summary>
            Gets or sets initial value to be set for Shapefile.GeometryEngine property of newly created shapefiles.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.RandomColorSchemeForGrids">
            <summary>
            Gets or sets a value indicating whether colour scheme set in 
            GlobalsSettings.DefaultColorSchemeForGrids or a radom one should be used on opening grids.
            </summary>
            <remarks>The value will be used on passing Grid object to AxMap.AddLayer method.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.SaveGridColorSchemeToFile">
            <summary>
            Gets or sets a value indicating whether colour scheme for grid will be saved to .mwleg 
            to be reused on the next opening.
            </summary>
            <remarks>This value affects only grid datasources rendered by Image class directly.
            Colour scheme for proxy images will be written on disk despite this values. Without them those proxies become meaningless.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.ShapeInputValidationMode">
            <summary>
            Sets validation mode for input of geoprocessing operations.
            </summary>
            <remarks>This setting affects only Shapefile objects, while it it doesn't affect
            single shapes passed as parameters. Check results of validation in Shapefile.LastInputValidation.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.ShapeOutputValidationMode">
            <summary>
            Sets validation mode for output of geoprocessing operations.
            </summary>
            <remarks>This setting affects only methods where Shapefile objects are returned as output,
            single shapes returned as output are not affected. Check results of validation in Shapefile.LastOutputValidation.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.ImageDownsamplingMode">
            <summary>
            Gets or sets default value of Image.DownsamplingMode property.
            </summary>
            \new492 Added in version 4.9.2
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.ImageUpsamplingMode">
            <summary>
            Gets or sets default value of Image.UpsamplingMode property.
            </summary>
            \new492 Added in version 4.9.2
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.LoadSymbologyOnAddLayer">
            <summary>
            Gets or sets a value indicating whether layer symbology from .mwsymb XML file
            should be automatically applied on adding layer to the map.
            </summary>
            \new492 Added in version 4.9.2
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.MinOverviewWidth">
            <summary>
            Gets or sets the minimum width of image for GDAL overviews to be created.
            For images with smaller width no GDAL overviews will be created. 
            </summary>
            \new492 Added in version 4.9.2
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.RasterOverviewCreation">
            <summary>
            Gets or sets a value indicating whether automatic creation of GDAL overviews will
            be performed for large datasets.
            </summary>
            <remarks>Currently applied to grid datasets only (both direct and proxy rendeing).
            No automatic overview creation for RGB image is implemented so far.</remarks>
            \new492 Added in version 4.9.2
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.RasterOverviewResampling">
            <summary>
            Gets or sets resampling method for creation of GDAL overviews.
            </summary>
            \new492 Added in version 4.9.2
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.TiffCompression">
            <summary>
            Gets or sets compression mode to be used for TIFF proxies created for grid rendering.
            </summary>
            \new492 Added in version 4.9.2
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.TilesMinZoomOnProjectionMismatch">
            <summary>
            Gets or sets minimum available zoom level for tiles when map projection and server projection don't match.
            </summary>
            <remarks>This value will be used for any provider which uses Spherical Mercator projection
            while map projection isn't set to Spherical Mercator or WGS84. The default value is 6.
            Smaller zoom levels (1-5) typically have severe distortions caused by coordinate transformation
            which makes them unusable. Tiles won't be displayed at all for these levels and they will 
            not be included into zoom bar.</remarks>
            \new492 Added in version 4.9.2
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.TilesThreadPoolSize">
            <summary>
            Gets or sets the number of threads to be used for downloading tiles from remote server.
            Default value is 5. Increasing the number of threads doesn't necessarily lead to better 
            performance as servers may limit the number of simultaneous connections from the same IP 
            address.
            </summary>
            \new492 Added in version 4.9.2
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.OgrStringEncoding">
            <summary>
            Gets or sets string encoding used to communicate with OGR drivers.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.OgrLayerMaxFeatureCount">
            <summary>
            Gets or sets the maximum number of features that can be loaded into memory for a single 
            OGR layer.
            </summary>
            \see OgrLayer.MaxFeatureCount
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.AutoChooseOgrLoadingMode">
            <summary>
            Gets or sets a value which indicates whether OgrLayer.DynamicLoading mode will
            chosen automatically based on the number of features. The default value is true.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.HotTrackingMaxShapeCount">
            <summary>
            Gets or sets maximum number of shapes within view for hot tracking functionality to work.
            </summary>
            <remarks>Hot tracking is used by cmIdentify tool and interactive editing tools.</remarks>
            \see Identifier.HotTracking, ShapeEditor.HighlightVertices.
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.AllowLayersWithoutProjections">
            <summary>
            Gets or sets a value indicating whether layers without metadata about coordinate system / projection can be added to the map.
            </summary>
            <remarks>The default value is true. The decision can also be made on per-layer bases
            by handling AxMap.LayerProjectionIsEmpty event.</remarks>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.AllowProjectionMismatch">
            <summary>
            Gets or sets a value indicating whether layers with coordinate system / projection different from those of the map can be added to the map.
            </summary>
            <remarks>In most cases it's not advisable to allow projection mismatch, since relative position of layers with different 
            projections won't be correct. The default value is false. The decision can also be made on per-layer bases
            by handling AxMap.ProjectionMismatch event.</remarks>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.ApplicationCallback">
            <summary>
            Gets or sets global callback object to report information about progress and errors taking place inside MapWinGIS.
            </summary>
            <remarks>The callback object set by this property will override all callback set for particular classes 
            (like %Shapefile.GlobalCallback, %AxMap.GlobalCallback). Also it will automatically display internal GDAL error messages.</remarks>
            \note It's strongly recommended to use this property rather than setting callback for each and every class.
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.MaxReprojectionShapeCount">
            <summary>
            Gets or sets a value which limits the maximum number of shapes within a vector layer to run on-the-fly reprojection.
            </summary>
            <remarks>This property is taken into account when projection mismatch occurs on adding a new layer to the map.</remarks>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.MouseTolerance">
            <summary>
            Gets or sets a value which determines how close to a particular object mouse cursor should be 
            in order to select it with mouse click. 
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.ReprojectLayersOnAdding">
            <summary>
            Gets or sets a value which determines whether automatic on-the-fly reprojection of the vector layer
            will be performed on adding a new layer to the map with different projection.
            </summary>
            <remarks>The decision can also be made on per-layer bases by handling AxMap.ProjectionMismatch event.</remarks>
            \see MaxReprojectionShapeCount
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.AutoChooseRenderingHintForLabels">
            <summary>
            When set to true rendering hint for Labels will be chosen automatically to ensure better performance and visual quality.
            </summary>
            \see Labels.TextRednderingHint
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.ForceHideLabels">
            <summary>
            When set to true, any labels added to any instance of AxMap won't be rendered.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.GdalVersion">
            <summary>
            Gets the version of GDAL library which current build of MapWinGIS uses.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.OgrLayerForceUpdateMode">
            <summary>
            When set to true the opening of any OGR layer will be first made with forUpdate parameter. 
            If this first attempt fails, the layer will be opened without update flag.
            </summary>
            \see OgrLayer.SupportsEditing
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.PixelOffsetMode">
            <summary>
            Gets or sets pixel offset mode to be used during the rendering of vector layers.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.GdalDataPath">
            <summary>
            Gets or sets the path where data necessary for GDAL coordinate systems / projections will be searched for.
            </summary>
            <remarks>This property effectively overrides GDAL_DATA environment variable. By default
            it's set to gdal-data folder in the directory where MapWinGIS is installed.</remarks>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.GdalPluginPath">
            <summary>
            Gets or sets the path where GDAL plug-ins will be searched for.
            </summary>
            <remarks>This property effectively overrides GDAL_DRIVER_PATH environment variable. By default
            it's set to gdalplugins folder in the directory where MapWinGIS is installed.</remarks>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.BingApiKey">
            <summary>
            Gets or sets API key to access Bing maps. Without API key Bing Maps provider isn't available. See 
            <a href = "https://mapwingis.codeplex.com/wikipage?title=onlinetiles">details here</a>. 
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IGlobalSettings.SetHereMapsApiKey(System.String,System.String)">
            <summary>
            Sets application credentials for Here Maps online tiles. 
            Without these credentials Here Maps providers are not available. See 
            <a href = "https://mapwingis.codeplex.com/wikipage?title=onlinetiles">details here</a>. 
            </summary>
            <param name="appId">Application Id. Can be obtained by registering on the site of the service.</param>
            <param name="appCode">Application code. Can be obtained by registering on the site of the service.</param>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IGlobalSettings.TestBingApiKey(System.String)">
            <summary>
            Requests URL address for tiles download from Bing Maps server. 
            </summary>
            <param name="Key">API key to test.</param>
            <returns>True if the Url for downloading for obtained.</returns>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.CompressOverviews">
            <summary>
            Gets or sets the value indicating which compression mode will be used to compress image overviews.
            </summary>
            <value>
            The compress overviews.
            </value>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.GridFavorGreyscale">
            <summary>
            Gets or sets a value indicating whether greyscale or color scheme rendering will be used for grids by default.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.GridUseHistogram">
            <summary>
            Gets or sets a value indicating whether histogram will be computed and news for grid by default.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.OverrideLocalCallback">
            <summary>
            Gets or sets a value indicating whether instances of ICallback assigned to particular classes will be overriden by 
            global callback assined to GlobalSettings.ApplicationCallback property.
            </summary>
            <value>
            <c>true</c> if [override local callback]; otherwise, <c>false</c>.
            </value>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.CacheDbfRecords">
            <summary>
            Gets or sets a value indicating whether caching DBF records is on.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.CacheShapeRenderingData">
            <summary>
            Gets or sets a value indicating whether caching of rendering data for shapes is on.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.TileLogFilename">
            <summary>
            Gets the filename of the file to log TMS/WMS requests to.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.TileLogIsOpened">
            <summary>
            Gets a value indicating whether tile log is opened.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.LogTileErrorsOnly">
            <summary>
            Gets or sets a value indicating whether only errors will be logged to the for TMS/WMS requests.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.WmsDiskCaching">
            <summary>
            Gets or sets a value indicating whether WMS data will cached to the disk by default.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.CallbackVerbosity">
            <summary>
            Gets or sets the callback verbosity.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IGlobalSettings.OgrShareConnection">
            <summary> 
            Share connection between layers (may be unstable). 
            For large read-only layers it will increase performance.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IGlobalSettings.StartLogTileRequests(System.String,System.Boolean)">
            <summary>
            Starts logging of tile requests.
            </summary>
            <param name="Filename">The filename.</param>
            <param name="errorsOnly">If set to <c>true</c> only errors will be logged.</param>
            <returns>True on success.</returns>
            \new494 Added in version 4.9.4
        </member>
        <!-- Badly formed XML comment ignored for member "T:MapWinGIS.IGrid" -->
        <member name="M:MapWinGIS.IGrid.AssignNewProjection(System.String)">
            <summary>
            Assign new projection to the grid.
            </summary>
            <param name="Projection">Projection string in proj4 format.</param>
            <returns>True on success or false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.IGrid.CdlgFilter">
            <summary>
            Returns the common dialog filter containing all supported file extensions in string format. 
            </summary>
        </member>
        <member name="M:MapWinGIS.IGrid.CellToProj(System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Uses a cell's column and row position to find the center of the cell in projected map coordinates.
            </summary>
            <param name="Column">The column of the cell to find the center in projected map coordinates. </param>
            <param name="Row">The row of the cell to find the center in projected map coordinates. </param>
            <param name="x">Returns the x projected map coordinate of the center of the specified cell.</param>
            <param name="y"> Returns the y projected map coordinate of the center of the specified cell.</param>
        </member>
        <member name="M:MapWinGIS.IGrid.Clear(System.Object)">
            <summary>
            Clears all data in the grid, setting the value of all cells in the grid to the specified clear value. 
            </summary>
            <param name="ClearValue">The value to set all of the grid's cells to.</param>
            <returns>A boolean value representing the success or failure of clearing the grid.</returns>
        </member>
        <member name="M:MapWinGIS.IGrid.Close">
            <summary>
            Closes the grid.
            </summary>
            <returns>A boolean value representing the success or failure of closing the grid.</returns>
        </member>
        <member name="M:MapWinGIS.IGrid.CreateNew(System.String,MapWinGIS.GridHeader,MapWinGIS.GridDataType,System.Object,System.Boolean,MapWinGIS.GridFileType,MapWinGIS.ICallback)">
            <summary>
            Creates a new grid.
            </summary>
            <param name="Filename">The filename for the new grid. </param>
            <param name="Header">The header defining the attributes of the new grid.</param>
            <param name="DataType">The data type of the new grid.</param>
            <param name="InitialValue">The initial value for each cell of the new grid.</param>
            <param name="InRam">Optional. A boolean value representing the grid being stored in memory(RAM) when True, and the 
            grid being stored on disk when False. </param>
            <param name="fileType">Optional. The grid file type.</param>
            <param name="cBack">Optional. The ICallback object that will receive the progress and error events during the creation of the new grid.</param>
            <returns>A boolean value representing the success or failure of the creation of the new grid.</returns>
        </member>
        <member name="P:MapWinGIS.IGrid.DataType">
            <summary>
            Returns the data type of the values stored in the grid.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGrid.Filename">
            <summary>
            The filename associated with the object.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGrid.GetFloatWindow(System.Int32,System.Int32,System.Int32,System.Int32,System.Single@)">
            <summary>
            Returns an array with grid values which lie within specified bounds.
            </summary>
            <remarks>For inner use or C++ use only. Only a single value will be returned to .NET.</remarks>
            <param name="StartRow">The start row of the window.</param>
            <param name="EndRow">The end row of the window.</param>
            <param name="StartCol">The start colour of the window.</param>
            <param name="EndCol">The end colour of the window.</param>
            <param name="Vals">A supposed array (only a single value in .NET).</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IGrid.GetRow(System.Int32,System.Single@)">
            <summary>
            The faster way to read the array values that are of a specific size.
            </summary>
            <remarks> The row is the integer row to read from the grid 
            object. The vals variable is actually the first element of the array of floats that you want to be populated with the values from 
            the grid. Since arrays are stored sequentially in memory, passing the first element allows the prediction of where the other 
            values must go. It is very important that you always dimension the array as being of type float, and always make sure that 
            you dimension it from 0 to numCols - 1. </remarks>
            <param name="Row">The Integer value of the row to retrieve values for.</param>
            <param name="Vals">Reference to the first element of the array of floats that will hold the row of values. </param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.IGrid.GlobalCallback">
            <summary>
            The global callback is the interface used by MapWinGIS to pass progress and error events to interested applications.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.IGrid.Header">
            <summary>
            Returns the header of the grid.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGrid.InRam">
            <summary>
            Returns whether the grid is loaded in to RAM memory or not. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IGrid.Key">
            <summary>
            The key may be used by the programmer to store any string data associated with the object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGrid.LastErrorCode">
            <summary>
            Retrieves the last error generated in the object. 
            </summary>
        </member>
        <member name="M:MapWinGIS.IGrid.Open(System.String,MapWinGIS.GridDataType,System.Boolean,MapWinGIS.GridFileType,MapWinGIS.ICallback)">
            <summary>
            Opens a grid.
            </summary>
            <param name="Filename">The filename of the grid to be opened.</param>
            <param name="DataType">Optional. The data type of the grid to be opened. </param>
            <param name="InRam">Optional. A boolean value representing whether the grid will be stored in RAM or on disk.</param>
            <param name="fileType">Optional. The file type of the grid. The default file type is "Use Extension". </param>
            <param name="cBack">Optional. The ICallback object that will receive the progress and error events during the creation 
            of the new grid.</param>
            <returns>A boolean value that represents the success or failure of opening the grid. </returns>
        </member>
        <member name="M:MapWinGIS.IGrid.ProjToCell(System.Double,System.Double,System.Int32@,System.Int32@)">
            <summary>
            Converts a point in projected map coordinates to a cell (column, row) in the grid.
            </summary>
            <remarks>If the point lies outside the bounds of the grid, a column and row are returned which are outside the boundaries of the grid. 
            For example, if the point lies to the left or lies below the grid boundaries, a negative column or row will be returned. Similarly, 
            if the point lies above or to the right of the grid boundaries, a column or row which is greater than the number of columns or rows will be returned. </remarks>
            <param name="x">The x projected map coordinate for which the corresponding cell in the grid is required.</param>
            <param name="y">The y projected map coordinate for which the corresponding cell in the grid is required. </param>
            <param name="Column">The column the specified point lies within. This value may not be within the valid bounds of the grid.</param>
            <param name="Row"> The row the specified point lies within. This value may not be within the valid bounds of the grid.</param>
        </member>
        <member name="M:MapWinGIS.IGrid.PutFloatWindow(System.Int32,System.Int32,System.Int32,System.Int32,System.Single@)">
            <summary>
             Sets an array of values for a given region of the grid.
            </summary>
            <param name="StartRow">The start row of the window.</param>
            <param name="EndRow">The end row of the window.</param>
            <param name="StartCol">The start colour of the window.</param>
            <param name="EndCol">The end colour of the window.</param>
            <param name="Vals">A supposed array (only a single value in .NET).</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IGrid.PutRow(System.Int32,System.Single@)">
            <summary>
            Provides The faster way to write the array values that are of a specific size.
            </summary>
            <remarks>
            The row is the integer row to read from the grid 
            object. The vals variable is actually the first element of the array of floats that you want to be populated with the values from 
            the grid. Since arrays are stored sequentially in memory, passing the first element allows the prediction of where the other values must go. It is very important that you always dimension the array as being of type float, and always make sure that 
            you dimension it from 0 to numCols - 1. 
            </remarks>
            <param name="Row">The Integer value of the row to retrieve values for.</param>
            <param name="Vals">Reference to the first element of the array of floats that will hold the row of values.</param>
            <returns>True on success.</returns>
        </member>
        <member name="P:MapWinGIS.IGrid.RasterColorTableColoringScheme">
            <summary>
            Gets grid colour scheme object used for rendering of the image representation of the grid, in case 
            the datasource has a color table (GTiff with indexed colors, for example).
            </summary>
        </member>
        <member name="M:MapWinGIS.IGrid.Resource(System.String)">
            <summary>
            Changes the grid source without closing it.
            </summary>
            <param name="newSrcPath">The name of the new file source.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IGrid.Save(System.String,MapWinGIS.GridFileType,MapWinGIS.ICallback)">
            <summary>
            Saves the grid.
            </summary>
            <param name="Filename">Optional. The filename the grid will be saved under. 
            If no filename is specified the filename in the grid's Filename property is used.</param>
            <param name="GridFileType">Optional. The file type to save the grid as. 
            If no type is specified, the type stored in the grid object is used. </param>
            <param name="cBack">Optional. The ICallback object that will receive the progress and error events during the creation of the new grid.</param>
            <returns>A boolean value representing the success or failure of saving the grid. </returns>
        </member>
        <member name="M:MapWinGIS.IGrid.SetInvalidValuesToNodata(System.Double,System.Double)">
            <summary>
            Sets invalid values to no data values.
            </summary>
            <param name="MinThresholdValue">The minimum valid value.</param>
            <param name="MaxThresholdValue">The maximum valid value.</param>
            <returns>True in success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IGrid.get_ErrorMsg(System.Int32)">
            <summary>
            Retrieves the error message associated with the specified error code.
            </summary>
            <param name="ErrorCode">The numeric code of error returned by Grid.LastErrorCode.</param>
            <returns>The description of the error.</returns>
        </member>
        <member name="M:MapWinGIS.IGrid.get_Value(System.Int32,System.Int32)">
            <summary>
            Returns the value stored in the grid at the specified cell. 
            </summary>
            <param name="Column">The column representing the cell for which the value is required.</param>
            <param name="Row">The row representing the cell for which the value is required.</param>
            <returns>The value stored in the grid in the specified cell.</returns>
        </member>
        <member name="M:MapWinGIS.IGrid.set_Value(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the value of the specified cell of the grid.
            </summary>
            <param name="Column">The index of the cell's column.</param>
            <param name="Row">The index of the cell's row.</param>
            <param name="pVal">The new value as variant data type.</param>
        </member>
        <member name="P:MapWinGIS.IGrid.ActiveBandIndex">
            <summary>
            The index of the active band within grid.
            </summary>
            <remarks>Active band will be used on data extraction operation like Grid.get_Value, Grid.GetFloatWindow 
            and during creation of image proxy. </remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="P:MapWinGIS.IGrid.CanDisplayWithoutProxy">
            <summary>
            Gets the value indicating whether grid source can be displayed by Image class without creation of proxy file.
            </summary>
            <remarks>Check return value for the reason whey such rendering isn't possible.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGrid.CreateImageProxy(MapWinGIS.GridColorScheme)">
            <summary>
            Creates a proxy image file to display grid data.
            </summary>
            <param name="ColorScheme">Colour scheme which specified how the data will be visualized.</param>
            <returns>Created image proxy or null if the operation failed.</returns>
            <remarks>The format of proxy can be changed in GlobalSettings.GridProxyFormat.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IGrid.Extents">
            <summary>
            Gets extents of the grid.
            </summary>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IGrid.GenerateColorScheme(MapWinGIS.tkGridSchemeGeneration,MapWinGIS.PredefinedColorScheme)">
            <summary>
            Generates colour scheme for the grid.
            </summary>
            <param name="Method">Method of generation to be used.</param>
            <param name="Colors">Predefined colour scheme to be mapped to the values of grid.</param>
            <returns>Generated colour scheme or null if the operation failed.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IGrid.HasValidImageProxy">
            <summary>
            Gets the value indicating whether grid has a valid image proxy for visualization.
            </summary>
            <remarks>To be considered valid the proxy must have proper name (with "_proxy" postfix) and colour scheme file (.mwleg).
            Both this files must have older creation date than the grid source file itself.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IGrid.Maximum">
            <summary>
            Returns the maximum value stored in the grid.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGrid.Minimum">
            <summary>
            Returns the minimum value stored in the grid.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGrid.NumBands">
            <summary>
            Gets the number of within the grid.
            </summary>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IGrid.OpenAsImage(MapWinGIS.GridColorScheme,MapWinGIS.tkGridProxyMode,MapWinGIS.ICallback)">
            <summary>
            Opens grid as image. 
            </summary>
            <param name="Scheme">Colour scheme which specifies how grid will be visualized.</param>
            <param name="proxyMode">Proxy mode to be used.</param>
            <param name="cBack">Callback interface.</param>
            <returns>Resulting image object or null if the operation failed.</returns>
            <remarks>Depending on the proxy mode, grid datasource can be opened directly, or a proxy file can be created.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGrid.OpenBand(System.Int32)">
            <summary>
             Makes the specified band of the grid active.
            </summary>
            <param name="bandIndex">Index of the band to be set active.</param>
            <returns>True on success and false otherwise.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="P:MapWinGIS.IGrid.PreferedDisplayMode">
            <summary>
            Gets or sets the value indicating how the grid should be displayed.
            </summary>
            <remarks>This value will be used in AxMap.AddLayer and Grid.OpenAsImage methods.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGrid.RemoveImageProxy">
            <summary>
            Removes proxy image file created for grid display.
            </summary>
            <returns>True on success or if there is no image proxy and false if the operation failed.</returns>
            <remarks>Only the proxy format set in GlobalSettings.GridProxyFormat will be removed.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGrid.RetrieveColorScheme(MapWinGIS.tkGridSchemeRetrieval)">
            <summary>
            Retrieves colour scheme from the grid. 
            </summary>
            <param name="Method">Retrieval method. Use Auto to try all the available method.</param>
            <returns>Colour scheme object or null if the operation failed.</returns>
            <remarks>Is different from Grid.GenerateColorScheme, 
            as it get colour scheme already stored in the grid itself or as an external .mwleg file rather than creating a completely new one.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGrid.RetrieveOrGenerateColorScheme(MapWinGIS.tkGridSchemeRetrieval,MapWinGIS.tkGridSchemeGeneration,MapWinGIS.PredefinedColorScheme)">
            <summary>
            Tries to retrieve any existing color scheme associated with grid or generates a new one if none is found.
            </summary>
            <param name="retrievalMethod">Colour scheme retrieval method.</param>
            <param name="generateMethod">Colour scheme generation method</param>
            <param name="Colors">Predefined set of colours to be mapped to grid values during generation process.</param>
            <returns>Color scheme or null if both retrieval and generation failed.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IGrid.SourceType">
            <summary>
            Gets the type of grid source, which defines a) whether any grid source is opened and b) if so, what the inner representation of grid by MapWinGIS.
            </summary>
            <remarks>The functionality and behaviour of various source types may differ.</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IGrid.GetFloatWindow2(System.Int32,System.Int32,System.Int32,System.Int32,System.Double@)">
            <summary>
            Returns an array with grid values which lie within specified bounds. Double overload of Grid.GetFloatWindow method.
            </summary>
            <remarks>For inner use or C++ use only. Only a single value will be returned to .NET.</remarks>
            <param name="StartRow">The start row of the window.</param>
            <param name="EndRow">The end row of the window.</param>
            <param name="StartCol">The start colour of the window.</param>
            <param name="EndCol">The end colour of the window.</param>
            <param name="Vals">A supposed array (only a single value in .NET).</param>
            <returns>True on success and false otherwise.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGrid.GetRow2(System.Int32,System.Double@)">
            <summary>
            Provides the faster way to read the array values that are of a specific size. Double overload of Grid.GetRow.
            </summary>
            <remarks> The row is the integer row to read from the grid 
            object. The vals variable is actually the first element of the array of floats that you want to be populated with the values from 
            the grid. Since arrays are stored sequentially in memory, passing the first element allows the prediction of where the other 
            values must go. It is very important that you always dimension the array as being of type double, and always make sure that 
            you dimension it from 0 to numCols - 1. </remarks>
            <param name="Row">The Integer value of the row to retrieve values for.</param>
            <param name="Vals">Reference to the first element of the array of doubles that will hold the row of values. </param>
            <returns>True on success and false otherwise.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGrid.PutFloatWindow2(System.Int32,System.Int32,System.Int32,System.Int32,System.Double@)">
            <summary>
             Sets an array of values for a given region of the grid. Double overload of Grid.PutFloatWindow.
            </summary>
            <param name="StartRow">The start row of the window.</param>
            <param name="EndRow">The end row of the window.</param>
            <param name="StartCol">The start colour of the window.</param>
            <param name="EndCol">The end colour of the window.</param>
            <param name="Vals">A supposed array (only a single value in .NET).</param>
            <returns>True on success and false otherwise.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGrid.PutRow2(System.Int32,System.Double@)">
            <summary>
            Provides The faster way to write the array values that are of a specific size. Double overload of Grid.PutRow.
            </summary>
            <remarks>
            The row is the integer row to read from the grid 
            object. The vals variable is actually the first element of the array of floats that you want to be populated with the values from 
            the grid. Since arrays are stored sequentially in memory, passing the first element allows the prediction of where the other values must go. It is very important that you always dimension the array as being of type float, and always make sure that 
            you dimension it from 0 to numCols - 1. 
            </remarks>
            <param name="Row">The Integer value of the row to retrieve values for.</param>
            <param name="Vals">Reference to the first element of the array of doubles that will hold the row of values.</param>
            <returns>True on success.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGrid.get_Band(System.Int32)">
            <summary>
            Gets datasource band with specified index.
            </summary>
            <param name="bandIndex">Index of the band.</param>
            <returns>The band or null if index is not valid.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IGrid.ActiveBand">
            <summary>
            Gets the active band of the datasource.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="T:MapWinGIS.IGridColorBreak">
            <summary>
            A grid color break object defines how a specified region of a grid will be colored. 
            </summary>
            <remarks>Represents a part of the GridColorScheme.</remarks>
        </member>
        <member name="P:MapWinGIS.IGridColorBreak.Caption">
            <summary>
            Gets or sets the caption to display for the color break
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridColorBreak.ColoringType">
            <summary>
            Gets or sets the way a break is colored.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridColorBreak.GlobalCallback">
            <summary>
            The global callback is the interface used by MapWinGIS to pass progress and error events to interested applications.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.IGridColorBreak.GradientModel">
            <summary>
            Gets or sets the model used to color the break.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridColorBreak.HighColor">
            <summary>
            Gets or sets the color representing the highest value in the color break.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridColorBreak.HighValue">
            <summary>
            Gets or sets the highest value in the color break.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridColorBreak.Key">
            <summary>
            The key may be used by the programmer to store any string data associated with the object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridColorBreak.LastErrorCode">
            <summary>
            Retrieves the last error generated in the object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridColorBreak.LowColor">
            <summary>
            Gets or sets the lowest value in the color break.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridColorBreak.LowValue">
            <summary>
            Gets or sets the lowest value in the color break. 
            </summary>
        </member>
        <member name="M:MapWinGIS.IGridColorBreak.get_ErrorMsg(System.Int32)">
            <summary>
            Retrieves the error message associated with the specified error code. 
            </summary>
            <param name="ErrorCode">The error code for which the error message is required.</param>
            <returns>The error message description for the specified error code. </returns>
        </member>
        <member name="P:MapWinGIS.IGridColorBreak.Visible">
            <summary>
            Gets or sets a value indicating whether the break is visible.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="T:MapWinGIS.IGridColorScheme">
            <summary>
            A grid color scheme defines how a grid will be colored.
            </summary>
            <remarks>A grid color scheme may either contain grid color breaks created by 
            the user, or may use a predefined color scheme. </remarks>
        </member>
        <member name="P:MapWinGIS.IGridColorScheme.AmbientIntensity">
            <summary>
            Gets or sets the intensity of the ambient lighting for the color scheme. Only applies when creating hillshaded breaks.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.Clear">
            <summary>
            Clears all color breaks in the color scheme.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.DeleteBreak(System.Int32)">
            <summary>
            Deletes the specified color break from the color scheme. 
            </summary>
            <param name="Index">The index of the color break to be removed.</param>
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.Deserialize(System.String)">
            <summary>
            Restores the setings of the grid from the string generated by Grid.Serialize() method.
            </summary>
            <param name="newVal">The string with grid settings.</param>
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.GetLightSource">
            <summary>
            Gets the direction the light source is pointing for the color scheme in the form of a vector which originates from the light 
            source. This only applies to hillshaded breaks.
            </summary>
            <returns>The direction the light source is pointing represented by a vector. </returns>
        </member>
        <member name="P:MapWinGIS.IGridColorScheme.GlobalCallback">
            <summary>
            The global callback is the interface used by MapWinGIS to pass progress and error events to interested applications. 
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.InsertAt(System.Int32,MapWinGIS.GridColorBreak)">
            <summary>
            Inserts a break at the specified position of the color scheme.
            </summary>
            <param name="Position">The position to insert the break at.</param>
            <param name="Break">The grid color break.</param>
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.InsertBreak(MapWinGIS.GridColorBreak)">
            <summary>
            Adds a break to the color scheme.
            </summary>
            <param name="BrkInfo">The grid color break.</param>
        </member>
        <member name="P:MapWinGIS.IGridColorScheme.Key">
            <summary>
            The key may be used by the programmer to store any string data associated with the object. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridColorScheme.LastErrorCode">
            <summary>
            Retrieves the last error generated in the object. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridColorScheme.LightSourceAzimuth">
            <summary>
            Gets the azimuth, or compass heading of the light source. Only applies to hillshaded breaks.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridColorScheme.LightSourceElevation">
            <summary>
            Gets the elevation of the light source. Only applies to hillshaded breaks.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridColorScheme.LightSourceIntensity">
            <summary>
            Gets or sets the intensity of the light source for the color scheme. Only applies to hillshaded breaks. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridColorScheme.NoDataColor">
            <summary>
            The color to use for the color scheme when drawing grid cells with a no-data value. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridColorScheme.NumBreaks">
            <summary>
            Gets the number of color breaks in the color scheme.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.Serialize">
            <summary>
            Serializes the setting of the grid to the string.
            </summary>
            <returns>The string with serialized setting of empty string on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.SetLightSource(System.Double,System.Double)">
            <summary>
            Sets the direction of the light source.
            </summary>
            <param name="Azimuth">The azimuth heading of the light source. Also known as the compass heading.</param>
            <param name="Elevation">The elevation of the light source.</param>
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.UsePredefined(System.Double,System.Double,MapWinGIS.PredefinedColorScheme)">
            <summary>
            Loads the values into the color scheme from pre-defined color scheme.
            </summary>
            <param name="LowValue">The lowest value in the grid. </param>
            <param name="HighValue">The highes value in the grid. </param>
            <param name="Preset">Optional. The pre-defined color scheme to be used. The default is 
            MapWinGIS.PredefinedColorScheme.SummerMountains. </param>
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.get_Break(System.Int32)">
            <summary>
            Gets a break from the color scheme using the specified index. 
            </summary>
            <param name="Index">The index of the color break to be returned.</param>
            <returns>The color break specified by the index.</returns>
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.get_ErrorMsg(System.Int32)">
            <summary>
            Retrieves the error message associated with the specified error code. 
            </summary>
            <param name="ErrorCode">The error code for which the error message is required.</param>
            <returns>The error message description for the specified error code.</returns>
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.ApplyColoringType(MapWinGIS.ColoringType)">
            <summary>
            A shortcut to apply new coloring type for each of the breaks of the colors scheme.
            </summary>
            <param name="ColoringType">New coloring type.</param>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.ApplyGradientModel(MapWinGIS.GradientModel)">
            <summary>
            A shortcut to apply gradient model for each of the breaks of the colors scheme.
            </summary>
            <param name="GradientModel">New gradient model.</param>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.ReadFromFile(System.String,System.String)">
            <summary>
            Reads color scheme from .mwleg XML file.
            </summary>
            <param name="mwlegFilename">Filename to read color scheme from.</param>
            <param name="nodeName">The name of node to read from (usually GridColoringScheme).</param>
            <returns>True on success.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.WriteToFile(System.String,System.String,System.Int32)">
            <summary>
            Writes color scheme to the specified file.
            </summary>
            <param name="mwlegFilename">Filename to write color scheme into.</param>
            <param name="gridName">The name of the source grid without path (should be located in the same folder). Default value is empty string.</param>
            <param name="bandIndex">Band index the color scheme was created for. Default value is 1.</param>
            <returns>True on success.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IGridColorScheme.ApplyColors(MapWinGIS.tkColorSchemeType,MapWinGIS.ColorScheme,System.Boolean)">
            <summary>
            Applies specified colors to the exiting breaks of GridColorScheme.
            </summary>
            <param name="schemeType">Type of the scheme.</param>
            <param name="scheme">Colors to apply.</param>
            <param name="gradientWithinCategories">If <c>true</c> gradient within each category will be set.</param>
            <returns>True on suceess.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="T:MapWinGIS.IGridHeader">
            <summary>
            A grid header object is used to hold the information contained in a grid's header
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridHeader.ColorTable">
            <summary>
            Gets or sets a text string with information about color table. This value doesn't affect grid processing.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGridHeader.CopyFrom(MapWinGIS.GridHeader)">
            <summary>
            Copies the contents of another instance of the grid header.
            </summary>
            <param name="pVal">The grid header to copy setting from.</param>
        </member>
        <member name="P:MapWinGIS.IGridHeader.GeoProjection">
            <summary>
            Not implemented. Get or sets the geoprojection associated with grid header.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridHeader.GlobalCallback">
            <summary>
            The global callback is the interface used by MapWinGIS to pass progress and error events to interested applications. 
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.IGridHeader.Key">
            <summary>
            The key may be used by the programmer to store any string data associated with the object. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridHeader.LastErrorCode">
            <summary>
            Retrieves the last error generated in the object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridHeader.NodataValue">
            <summary>
            The value representing cells in the grid with no-data or missing data values.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridHeader.Notes">
            <summary>
            Gets or sets notes or any additional information about the grid stored in the grid header. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridHeader.NumberCols">
            <summary>
            Gets or sets the number of columns for the grid represented by the grid header.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridHeader.NumberRows">
            <summary>
            Gets or sets the number of rows in the grid represented by the grid header. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridHeader.Projection">
            <summary>
            Gets or sets information about the projection of the grid represented by the grid header. Setting this value has no effect on 
            the actual grid data. The projection should be expressed as a PROJ4 string. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridHeader.XllCenter">
            <summary>
            The x coordinate of the center of the lower-left cell in the grid represented by the grid header.
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridHeader.YllCenter">
            <summary>
            Gets or sets the y coordinate of the center of the lower-left cell in the grid represented by the grid header. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridHeader.dX">
            <summary>
            Gets or sets the width of the grid cell in physical units for the grid represented by the grid header
            </summary>
        </member>
        <member name="P:MapWinGIS.IGridHeader.dY">
            <summary>
            Gets or sets the height of a cell in the grid represented by the grid header.
            </summary>
        </member>
        <member name="M:MapWinGIS.IGridHeader.get_ErrorMsg(System.Int32)">
            <summary>
            Retrieves the error message associated with the specified error code.
            </summary>
            <param name="ErrorCode">The error code for which the error message is required.</param>
            <returns>The error message description for the specified error code.</returns>
        </member>
        <member name="M:MapWinGIS.IGridHeader.set_Owner(System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            For inner use only.
            </summary>
        </member>
        <member name="T:MapWinGIS.IImage">
            <summary>
            Represents an raster image of particular format which may be added to the map.
            </summary>
            \dot 
            digraph image_diagram {
            nodesep = 0.3;
            ranksep = 0.3;
            splines = ortho;
            
            node [shape= "polygon", peripheries = 1, fontname=Helvetica, fontsize=9, color = tan, style = filled, height = 0.3, width = 1.0];
            lbs [ label="Labels" URL="\ref Labels"];
            
            node [style = dashed, color = gray];
            map [ label="AxMap" URL="\ref AxMap"];
            
            node [color = gray, peripheries = 3, style = filled, height = 0.2, width = 0.8]
            img [ label="Image" URL="\ref Image"];
            
            edge [dir = "none", dir = "none", style = solid, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060", labeldistance = 0.6 ]
            img -> lbs [ URL="\ref Image.Labels()", tooltip = "Image.Labels()", headlabel = "   1"];
            map -> img [URL="\ref AxMap.get_Image()", tooltip = "AxMap.get_Image()", headlabel = "   n"]
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>\n\n
            Here is a diagram with groups of API members for Image class.
            \dotfile imagegroups.dot
            <a href = "diagrams.html">Graph description</a>\n\n
            <remarks>
            <b>Types of image handling.</b>\n\n
            The class is a wrapper for several representation of images used internally:\n\n
            1. In-RAM images created with Image.CreateNew method and not bound to any file;
            - data for each pixel is stored in the memory as R, G, B bytes; no semitransparency is stored;
            - can be edited and saved in several formats with Image.Save() method.
            
            2. Disk-based images handled by MapWinGIS own driver;
            - available for BMP format only;
            - support editing with immediate saving to the source file.
            
            3. GDAL-based images:\n
            - data is accessed by GDAL drivers;
            - suitable for rendering very large images especially when overviews are preliminary created (Image.BuildOverviews);
            - before each redraw the requested part of image is read into memory buffer;
            - doesn't support editing of data (values in memory buffer can be changed with Image.set_Value but these changes can't be saved to disk).
            
            Inner representation of image can be determined via Image.SourceType property. 
            Some properties and methods are applicable to the GDAL images only.\n
            </remarks>
        </member>
        <member name="P:MapWinGIS.IImage.BufferSize">
            \addtogroup image_gdal GDAL images
            Here is a list of methods and properties that are specific for images accessed through GDAL library.
            The properties and methods described here belong to Image class.
            \dot
            digraph image_common {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Image" URL="\ref Image"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr   [label="GDAL images"   URL="\ref image_common"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            @{
            <summary>
            Gets or sets the size of image buffer in percentage.
            </summary>
            <remarks>The values less than 100 will increase performance of drawing at the cost of decreasing the visual quality.</remarks>
        </member>
        <member name="M:MapWinGIS.IImage.BufferToProjection(System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Converts the position of pixel in image buffer to the map coordinates.
            </summary>
            <param name="BufferX">The x coordinate of the pixel.</param>
            <param name="BufferY">The y coordinate of the pixel.</param>
            <param name="projX">The resulting x coordinate of the map.</param>
            <param name="projY">The resulting y coordinate of the map.</param>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IImage.BuildOverviews(MapWinGIS.tkGDALResamplingMethod,System.Int32,System.Array)">
            <summary>
            Builds overviews for GDAL image.
            </summary>
            <remarks>Overviews are the images with lower resolution which are used as a replacement for the
            original image while drawing it at small scales. The usage of overviews can significantly 
            improve performance and is highly recommended for large images.</remarks>
            <param name="ResamplingMethod">The resampling method to use for generation of the image with lower resolution.</param>
            <param name="NumOverviews">The number of overviews. Should be equal to the size of OverviewList.</param>
            <param name="OverviewList">An array of integer type with the specification of overviews (magnification ratios).</param>
            <returns>True on success and false otherwise.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IImage.ClearGDALCache">
            <summary>
            Clears the cache of GDAL library which can be used for faster display.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IImage.LoadBuffer(System.Double)">
            <summary>
            Loads the whole image in the memory buffer of specified size. Applicable for GDAL images only.
            </summary>
            <remarks>If the buffer size is smaller than image disk size, the image will be resampled, by decreasing
            it's linear dimensions by 2.</remarks>
            <param name="maxBufferSize">The maximum size of buffer in MB.</param>
            <returns>True on successful loading and false otherwise.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IImage.NoBands">
            <summary>
            Returns the number of bands of GDAL image.
            </summary>
        </member>
        <member name="P:MapWinGIS.IImage.NumOverviews">
            <summary>
            Returns the number of overviews for GDAL image.
            </summary>
            \see Image.BuildOverviews.
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IImage.PaletteInterpretation">
            <summary>
            Gets the type of palette interpretation. Applicable for GDAL images only.
            </summary>
            <remarks>The possible values are 
            - "Grayscale";
            - "Red, Green, Blue and Alpha";
            - "Cyan, Magenta, Yellow and Black";
            - "Hue, Lightness and Saturation"; 
            - "Unknown".</remarks>
        </member>
        <member name="P:MapWinGIS.IImage.UseHistogram">
            <summary>
            Gets or sets a boolean value which indicates whether a histogram will be used. Applicable for GDAL images only.
            </summary>
        </member>
        <member name="M:MapWinGIS.IImage.SetNoDataValue(System.Double,System.Boolean@)">
            <summary>
            Sets no-data value for the image. Applicable for GDAL images only.
            </summary>
            <remarks>The pixels with this value will be treated as transparent.</remarks>
            <param name="Value">The value to be set.</param>
            <param name="Result">A boolean output value which indicates the success of the operation.</param>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IImage.HasColorTable">
            <summary>
            Returns a boolean value which indicates whether an image has a color table. Applicable for GDAL images only.
            </summary>
        </member>
        <member name="M:MapWinGIS.IImage.SetVisibleExtents(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Single)">
            <summary>
            Reloads the image buffer to represent the specified map extents. Applicable for GDAL images only.
            </summary>
            <remarks>In most cases the method must not be called directly, as MapWinGIS reloads the buffers for the images
            automatically after zooming operations.</remarks>
            <param name="newMinX">The minimal x coordinate of the new extents.</param>
            <param name="newMinY">The minimal y coordinate of the new extents.</param>
            <param name="newMaxX">The maximum x coordinate of the new extents.</param>
            <param name="newMaxY">The maximum y coordinate of the new extents.</param>
            <param name="newPixelsInView">The number of image pixels which fall into the specified extents.</param>
            <param name="transPercent">This parameter is no longer used.</param>
        </member>
        <member name="P:MapWinGIS.IImage.IsRgb">
            <summary>
            Returns true if the datasource represents RGB image.
            </summary>
            <remarks>The property can be used to distinguish grid datasource from genuine images. 
            Implementation checks if all 3 R,G,B colors are set as color interpretation for GDAL bands. 
            Any additional bands will be ignored. </remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IImage.Warped">
            <summary>
            Returns true if the image is warped, i.e. there are rotation parameters in world file.
            </summary>
            \new490 Added in version 4.9.0
        </member>
        <member name="P:MapWinGIS.IImage.SourceFilename">
            \addtogroup image_common Image common
            Here is a list of methods and properties that are common for all images despite their source.
            The properties and methods described here belong to Image class.
            \dot
            digraph image_management {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Image" URL="\ref Image"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr   [label="Open and close"   URL="\ref image_common"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            @{
            <summary>
            Returns the filename of the datasource for an image.
            </summary>
            <remarks>For proxy image grid filename will be renamed, in other cases Filename of Image itself.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IImage.CdlgFilter">
            <summary>
            Returns the common dialog filter containing all supported file extensions in string format.
            </summary>
        </member>
        <member name="M:MapWinGIS.IImage.Clear(System.UInt32,MapWinGIS.ICallback)">
            <summary>
            Clears the image using the specified canvas color as the new color for every pixel in the image. 
            </summary>
            <param name="CanvasColor">The color to be used to as the new color of every pixel in the image. This is a UInt32 
            representation of an RGB value.</param>
            <param name="cBack">Optional. The ICallback object that will receive the progress and error events while the image is cleared.</param>
            <returns>A boolean value representing the success or failure of clearing the image.</returns>
        </member>
        <member name="M:MapWinGIS.IImage.Close">
            <summary>
            Closes the image.
            </summary>
            <returns>True on successful release of the resources and false otherwise.
            This value can be omitted.</returns>
        </member>
        <member name="M:MapWinGIS.IImage.CreateNew(System.Int32,System.Int32)">
            <summary>
            Creates a new image with specified width and height.
            </summary>
            <param name="NewWidth">The width of the new image in pixels.</param>
            <param name="NewHeight">The height of the new image in pixels.</param>
            <returns>A boolean value representing the success or failure of creating the new image. </returns>
        </member>
        <member name="M:MapWinGIS.IImage.Deserialize(System.String)">
            <summary>
            Restores the properties of the image object from the serialized string.
            </summary>
            <param name="NewVal">The serialized string generated by Image.Serialize() method.</param>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IImage.Filename">
            <summary>
            The filename associated with the object.
            </summary>
        </member>
        <member name="M:MapWinGIS.IImage.Open(System.String,MapWinGIS.ImageType,System.Boolean,MapWinGIS.ICallback)">
            <summary>
            Opens an image from file. 
            </summary>
            <param name="ImageFileName">The filename of the image to be opened.</param>
            <param name="fileType">Optional. The type of image being opened. The default is "USE_FILE_EXTENSION".</param>
            <param name="InRam">Optional. A boolean value representing whether the image is stored in RAM memory while open.
            The default is false. The settings affects only BMP images, as other image types are handled by GDAL. 
            Image.IsInRam property will be set to true for them, but only memory will only hold a buffer currently displayed on screen.</param>
            <param name="cBack">Optional. The ICallback object which will receive progress and error events while the image is being opened.</param>
            <returns>A boolean value representing the success or failure of opening the image.</returns>
        </member>
        <member name="P:MapWinGIS.IImage.ImageType">
            <summary>
            Gets the image object's image type.
            </summary>
        </member>
        <member name="P:MapWinGIS.IImage.IsInRam">
            <summary>
            Returns true when the image is loaded in RAM memory, and returns false when the image is not loaded in RAM memory.
            </summary>
        </member>
        <member name="M:MapWinGIS.IImage.Resource(System.String)">
            <summary>
            Changes the data source of the image object without the its closing.
            </summary>
            <param name="NewImgPath">The new file to serve as a datasource for the image object.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IImage.Save(System.String,System.Boolean,MapWinGIS.ImageType,MapWinGIS.ICallback)">
            <summary>
            Saves the image to file.
            </summary>
            <param name="ImageFileName">The filename to use to save the image.</param>
            <param name="WriteWorldFile">Optional. A boolean value representing whether a world file is also written. The default is false.</param>
            <param name="FileType">Optional. The file type to use to save the image. Default is "USE_FILE_EXTENSION".</param>
            <param name="cBack">Optional. The ICallback object which will receive the progress and error messages while the image is being saved.</param>
            <returns>A boolean value representing the success or failure of saving the image.</returns>
        </member>
        <member name="M:MapWinGIS.IImage.Serialize(System.Boolean)">
            <summary>
            Serializes the image properties to the string. 
            </summary>
            <param name="SerializePixels">A boolean value which indicates whether image pixels should be serialized.</param>
            <returns>The serialized string.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IImage.Labels">
            <summary>
            Gets or sets instance of the labels class associated with the image.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IImage.GlobalCallback">
            <summary>
            The global callback is the interface used by MapWinGIS to pass progress and error events to interested applications.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.IImage.Key">
            <summary>
            The key may be used by the programmer to store any string data associated with the object. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IImage.SourceType">
            <summary>
            The source type of the image.
            </summary>
            <remarks>Images start with istUninitialized state. After loading bmp images istDiskBased or istInMemory value will be set depending
            on the value of inMem parameter. For GDAL images istGDALBased will be set.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IImage.get_ErrorMsg(System.Int32)">
            <summary>
            Retrieves the error message associated with the specified error code. 
            </summary>
            <param name="ErrorCode">The error code for which the error message is required.</param>
            <returns>The error message description for the specified error code.</returns>
        </member>
        <member name="P:MapWinGIS.IImage.LastErrorCode">
            <summary>
            Retrieves the last error generated in the object. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IImage.CanUseGrouping">
            <summary>
            Gets or sets a boolean value which indicates how images with identical size and position on the map will be drawn.
            </summary>
            <remarks>When set to true such images will be merged into a single bitmap. This may improve performance 
            in case of low number of data pixels (those which differ from the transparent color). The default value is false.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IImage.FileHandle">
            <summary>
            Returns file handle for BMP image. For inner use only.
            </summary>
        </member>
        <member name="P:MapWinGIS.IImage.GeoProjection">
            <summary>
            Get or sets an instance of GeoProjection class associated with the image.
            </summary>
            <remarks>The property can't be set to NULL (there is always an instance of GeoProjection class associated with image).</remarks>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IImage.IsEmpty">
            <summary>
            Returns true if image object is empty, i.e. not bound to some disk-based datasource and doesn't hold any in-memory data. 
            This property is the same as checking Image.SourceType = istUninitialized.
            </summary>
        </member>
        <member name="M:MapWinGIS.IImage.GetProjection">
            \addtogroup image_position Image position
            Here is a list of methods and properties which affect position and scale of image, conversion between map units and image coordinates.
            The properties and methods described here belong to Image class.
            \dot
            digraph image_management {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Image" URL="\ref Image"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr   [label="Position"   URL="\ref image_position"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            @{
            <summary>
            Retrieves projection string from the associated .prj file.
            </summary>
            <returns>Projection string or empty string on it's absence.</returns>
        </member>
        <member name="M:MapWinGIS.IImage.SetProjection(System.String)">
            <summary>
            Sets projection string for the image.
            </summary>
            <remarks>The string will be saved to .prj file with the same name as image.</remarks>
            <param name="Proj4">The projection string.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.IImage.Extents">
            <summary>
            Returns the extents of the image.
            </summary>
        </member>
        <member name="P:MapWinGIS.IImage.Height">
            <summary>
            Gets the height of the image in pixels.
            </summary>
        </member>
        <member name="M:MapWinGIS.IImage.ImageToProjection(System.Int32,System.Int32,System.Double@,System.Double@)">
            <summary>
            Converts coordinates of image's pixel to the screen coordinates.
            </summary>
            <param name="Column">The column.</param>
            <param name="Row">The row.</param>
            <param name="ProjX">The resulting x coordinate of the map.</param>
            <param name="ProjY">The resulting y coordinate of the map.</param>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IImage.OriginalDX">
            <summary>
            Gets or sets the number of map units per image pixel for x axis.
            </summary>
            <remarks>The changes of this value will result in scaling of the image horizontally.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IImage.OriginalDY">
            <summary>
            Gets or sets the number of map units per image pixel for y axis.
            </summary>
            <remarks>The changes of this value will result in scaling of the image vertically.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IImage.OriginalHeight">
            <summary>
            Gets the height of the image.
            </summary>
            <remarks>This property should be used to return the total height of the image, as compared to the height of the image buffer.</remarks>
            <returns>The height of the image in pixels.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IImage.OriginalWidth">
            <summary>
            Gets the width of the image.
            </summary>
            <remarks>This property should be used to return the total width of the image, as compared to the width of the image buffer.</remarks>
            <returns>The width of the image in pixels.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IImage.OriginalXllCenter">
            <summary>
            Gets or sets the x coordinate of the center of lower left pixel of the image in map units.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IImage.OriginalYllCenter">
            <summary>
            Gets or sets the y coordinate of the center of lower left pixel of the image in map units.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IImage.ProjectionToBuffer(System.Double,System.Double,System.Int32@,System.Int32@)">
            <summary>
            Returns the coordinates of pixel in image buffer which correspond to the given point on the map.
            </summary>
            <param name="ProjX">X coordinate of the point in map units.</param>
            <param name="ProjY">Y coordinate of the point in map units.</param>
            <param name="BufferX">The resulting x coordinate of pixel in the image buffer.</param>
            <param name="BufferY">The resulting y coordinate of pixel in the image buffer.</param>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IImage.ProjectionToImage(System.Double,System.Double,System.Int32@,System.Int32@)">
            <summary>
            Returns the coordinates of image pixel which correspond to the given point on the map.
            </summary>
            <param name="ProjX">X coordinate of the point in map units.</param>
            <param name="ProjY">Y coordinate of the point in map units.</param>
            <param name="Column">The column.</param>
            <param name="Row">The row.</param>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IImage.Width">
            <summary>
            Gets the width of the image in pixels.
            </summary>
        </member>
        <member name="P:MapWinGIS.IImage.XllCenter">
            <summary>
            Gets or sets the x coordinate of the center of the lower-left pixel in the image. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IImage.YllCenter">
            <summary>
            Gets or sets the y coordinate of the center of the lower-left pixel in the image. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IImage.dX">
            <summary>
            Gets or sets the number of map units per pixel of image buffer for x axis.
            </summary>
            <remarks>The set part of the property is not applicable for GDAL images.</remarks>
        </member>
        <member name="P:MapWinGIS.IImage.dY">
            <summary>
            Gets or sets the number of map units per pixel of image buffer for y axis.
            </summary>
            <remarks>The set part of the property is not applicable for GDAL images.</remarks>
        </member>
        <member name="M:MapWinGIS.IImage.SetTransparentColor(System.UInt32)">
            \addtogroup image_visualization Image visualization
            Here is a list of properties that affect the visualization of the image.
            The properties and methods described here belong to Image class.
            \dot
            digraph image_visualization {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Image" URL="\ref Image"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr   [label="Visualization"   URL="\ref image_visualization"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            @{
            <summary>
             Sets transparent color for image.
            </summary>
            <param name="Color">New transparent color.</param>
            <remarks>This is shortcut to set both Image.TransparencyColor and Image.TransparencyColor2. 
            It also set Image.UseSetTranparencyColor to true.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IImage.DownsamplingMode">
            <summary>
            The interpolation mode for images which are displayed with the resolution higher than original, i.e. after zoom in (down).
            </summary>
        </member>
        <member name="P:MapWinGIS.IImage.DrawingMethod">
            <summary>
            Gets or sets the drawing method of image. 
            </summary>
            <remarks>Was used temporarily while moving from GDI to GDI+ drawing.</remarks>
            \deprecated v 4.8. No longer used.
        </member>
        <member name="P:MapWinGIS.IImage.SetToGrey">
            <summary>
            A boolean value which indicates whether an image will be displayed using a gray palette.
            </summary>
        </member>
        <member name="P:MapWinGIS.IImage.TransparencyColor">
            <summary>
            Gets or sets a color which is used as the transparency color for the image. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IImage.TransparencyColor2">
            <summary>
            Gets or sets a second color which is used as the transparency color for the image. 
            </summary>
            <remarks>All the colors between TransparencyColor and TransparencyColor2 will be transparent.
            This "between" relation is calculated for each color channel and then the results are combined by AND operation.</remarks>
        </member>
        <member name="P:MapWinGIS.IImage.TransparencyPercent">
            <summary>
            Gets or sets the value which define alpha component of image colors (0.0-1.0).
            </summary>
            <remarks>The values range from 0.0(fully transparent) to 1.0(fully opaque).</remarks>
        </member>
        <member name="P:MapWinGIS.IImage.UpsamplingMode">
            <summary>
            The interpolation mode for images which are displayed with the resolution lower than original, i.e. after zooming out (up).
            </summary>
        </member>
        <member name="P:MapWinGIS.IImage.UseTransparencyColor">
            <summary>
            Gets or sets whether or not the transparency color is being used when the image is displayed. 
            </summary>
        </member>
        <member name="M:MapWinGIS.IImage.GetImageBitsDC(System.Int32)">
            \addtogroup image_data Data access
            Here is a list of methods and properties which provide access to the values of pixels.
            The properties and methods described here belong to Image class.
            \dot
            digraph image_data {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Image" URL="\ref Image"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr   [label="Data access"   URL="\ref image_data"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            @{
            <summary>
            Gets the data from the image and puts it into the selected bitmap in the specified device context. 
            </summary>
            <remarks>This function requires the width and height of the selected bitmap and the image to match. 
            Use of this function requires advanced knowledge in windows graphics concepts and is intended for advanced users only. </remarks>
            <param name="hdc">The handle to the device context. </param>
            <returns>A boolean value representing the success or failure of getting the device context handle for the image.</returns>
        </member>
        <member name="M:MapWinGIS.IImage.SetImageBitsDC(System.Int32)">
            <summary>
            This function uses a bitmap selected in the specified device context handle as the data to copy into the image for which the 
            function is called. </summary>
            <remarks>This function requires the image to be the same width and height as the bitmap selected in the device context.
            Use of this function requires advanced knowledge in windows graphics concepts and is intended for advanced users only.</remarks>
            <param name="hdc">The device context handle of the device context for which the selected bitmap is to be used to 
            copy the bits into the image used to call the function. </param>
            <returns>A boolean value representing success or failure of setting the image's bits using the bitmap 
            selected in the specified device context. </returns>
        </member>
        <member name="M:MapWinGIS.IImage.GetRow(System.Int32,System.Int32@)">
            <summary>
            Gets a row of pixels from the image. 
            </summary>
            <param name="Row">The row of pixels you want to get from the image.</param>
            <param name="Vals">An array which will return the pixels in the specified row of the image. </param>
            <returns>A boolean value representing the success or failure of getting the row of pixels from the image.</returns>
        </member>
        <member name="M:MapWinGIS.IImage.GetUniqueColors(System.Double,System.Object@,System.Object@)">
            <summary>
            Returns the arrays with the unique colors of the image and their frequencies. 
            </summary>
            <remarks>For large images it's recommended to perform the operation with the smaller
            size of buffer to improve performance and possible RAM overuse.</remarks>
            <param name="MaxBufferSizeMB">The size of buffer for calculation.</param>
            <param name="Colors">The output array of unsigned integer type with unique colors.</param>
            <param name="Frequencies">The output array of the same size with Colors array with the frequency of the each color.</param>
            <returns>The number of unique colors.</returns>
        </member>
        <member name="P:MapWinGIS.IImage.Picture">
            <summary>
            Gets or sets the picture object.
            </summary>
        </member>
        <member name="M:MapWinGIS.IImage.get_Value(System.Int32,System.Int32)">
            <summary>
            Gets the value of a pixel in the image. 
            </summary>
            <param name="Row">The row in the image for which the value is required.</param>
            <param name="Column">The column in the image for which the value is required.</param>
            <returns>The value of the specified pixel in the image.</returns>
        </member>
        <member name="M:MapWinGIS.IImage.set_Value(System.Int32,System.Int32,System.Int32)">
            <summary>
            Sets the value of a pixel in the image. 
            </summary>
            <param name="Row">The row in the image for which the value is required.</param>
            <param name="Column">The column in the image for which the value is required.</param>
            <param name="pVal">The value of the specified pixel in the image.</param>
        </member>
        <!-- Badly formed XML comment ignored for member "P:MapWinGIS.IImage.AllowGridRendering" -->
        <member name="P:MapWinGIS.IImage.CustomColorScheme">
            <summary>
            Gets or sets the color scheme to render image with.
            </summary>
            <remarks>This property should be used for grid datasources in the first place (when there is no build-in colors). 
            But may also be used for a single band of regular RGB/ARGB images for synthetic colors and hillshading.
            When no custom color scheme is set, grid rendering is chosen the color scheme from Image.ImageColorScheme will be used.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IImage.IsGridProxy">
            <summary>
            Gets the value which indicates whether an image object represents a visualization proxy for another datasource.
            </summary>
            <remarks>Will return true if the image was opened with Grid.OpenAsImage only. When opened directly the link to the source grid will be lost.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IImage.GridRendering">
            <summary>
            Returns true if the image is rendered as grid.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IImage.OpenAsGrid">
            <summary>
            Opens the datasource of the image as grid. 
            </summary>
            <returns>Grid object or null if the operation failed.</returns>
            <remarks>If the image represents a visualization proxy for grid, than the grid datasource will be opened,
            otherwise the datasource of image itself.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IImage.SourceGridName">
            <summary>
            Gets the name of the source grid in case the image represent a visualization proxy for a grid.
            </summary>
            \new490 Added in version 4.9.0
        </member>
        <member name="P:MapWinGIS.IImage.SourceGridBandIndex">
            <summary>
            Gets or sets index of band within datasource whose values should be used to apply color scheme. 
            </summary>
            <remarks>Other bands will ignored during display process. This is useful for multiband grids (e.g. NetCDF),
            but may also be used with RGB images, to set synthetic colors for a single band.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IImage.AllowHillshade">
            <summary>
            Indicate whether hillshade algorithm will be used for generation of image representation of the grid.
            </summary>
            <remarks>The behaviour has changed in v4.9. Now when active it only switches ColoringType from Hillshade to Gradient. 
            In v.4.8. it used to have the same behaviour as Image.AllowExternalColorScheme.</remarks>
        </member>
        <member name="M:MapWinGIS.IImage._pushSchemetkRaster(MapWinGIS.GridColorScheme)">
            <summary>
            Sets color scheme to use in process of generation of the image representation of the grid.
            </summary>
            <param name="cScheme">The color scheme.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.IImage.ImageColorScheme">
            <summary>
            Gets or sets the predefined color scheme for the image. Applicable for GDAL images only.
            </summary>
            <remarks>The color scheme is used for generation of image representation of the grid.</remarks>
        </member>
        <member name="P:MapWinGIS.IImage.GridProxyColorScheme">
            <summary>
            Gets grid color scheme this proxy image was generated with. The method should be called for proxy images only: Image.IsGridProxy = true.
            </summary>
            <remarks>Color scheme will be read from .mwleg XML file on the disk.</remarks>
        </member>
        <member name="M:MapWinGIS.IImage.get_Band(System.Int32)">
            \addtogroup image_newmembers New members
            Here is a list of properties and methods added in the version 4.9.4.
            The properties and methods described here belong to Image class.\n\n
            @{
            <summary>
            Gets the band with the specified index.
            </summary>
            <param name="bandIndex">Index of the band.</param>
            <returns>Raster band.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.GdalDriver">
            <summary>
            Gets the GDAL driver which manages the current datasource.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.ActiveBand">
            <summary>
            Gets the active band (the one used for rendering when grid rendering is on).
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.PaletteInterpretation2">
            <summary>
            Gets the palette interpretation for the image.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.Brightness">
            <summary>
            Gets or sets the brightness of the image.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.Contrast">
            <summary>
            Gets or sets the contrast of the image.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.Saturation">
            <summary>
            Gets or sets the saturation of the image.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.Hue">
            <summary>
            Gets or sets the hue of the image.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.Gamma">
            <summary>
            Gets or sets the gamma correction value for the image.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.ColorizeIntensity">
            <summary>
            Gets or sets the colorize intensity.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.ColorizeColor">
            <summary>
            Gets or sets the color of the colorize.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.RedBandIndex">
            <summary>
            Gets or sets the index of the red band (used when RGB rendering is chosen).
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.GreenBandIndex">
            <summary>
            Gets or sets the index of the green band (used when RGB rendering is chosen).
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.BlueBandIndex">
            <summary>
            Gets or sets the index of the blue band (used when RGB rendering is chosen).
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.UseRgbBandMapping">
            <summary>
            Gets or sets a value indicating whether RGB band mapping will be used.
            </summary>
            \see RedBandIndex, GreenBandIndex, BlueBandIndex, AlphaBandIndex
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.ForceSingleBandRendering">
            <summary>
            Gets or sets a value indicating whether the band 
            set by Image.ActiveBandIndex will be used rather then RGB rendering.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.AlphaBandIndex">
            <summary>
            Gets or sets the index of the alpha band.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.UseActiveBandAsAlpha">
            <summary>
            Gets or sets a value indicating whether to use active band as an alpha band as well.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IImage.get_BandMinimum(System.Int32)">
            <summary>
            Gets the minimum value for the specified band.
            </summary>
            <param name="bandIndex">Index of the band.</param>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IImage.get_BandMaximum(System.Int32)">
            <summary>
            Gets the maximum value for the specified band.
            </summary>
            <param name="bandIndex">Index of the band.</param>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.ReverseGreyscale">
            <summary>
            Gets or sets a value indicating whether colors should be reversed during gray scale rendering (i.e. the smallest values are white).
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.IgnoreColorTable">
            <summary>
            Gets or sets a value indicating whether built-in color table of the image will be ignored.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.RenderingMode">
            <summary>
            Gets the current rendering mode for the image (depends on the values of other properties).
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IImage.get_ValueWithAlpha(System.Int32,System.Int32)">
            <summary>
            Gets the value of the specified pixel including the alpha component.
            </summary>
            <param name="Row">The row.</param>
            <param name="Column">The column.</param>
            <returns>32bit unsigned integer value.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IImage.set_ValueWithAlpha(System.Int32,System.Int32,System.UInt32)">
            <summary>
            Sets the value of the specified pixel including the alpha component.
            </summary>
            <param name="Row">The row.</param>
            <param name="Column">The column.</param>
            <param name="pVal">The value to set.</param>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.BufferOffsetX">
            <summary>
            Gets the index of the left most pixel of the original image that was included in the current buffer.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.BufferOffsetY">
            <summary>
            Gets the index of the top most pixel of the original image that was included in the current buffer.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IImage.ActiveColorScheme">
            <summary>
            Gets the active color scheme used for the rendering, it may be either default or custom one.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IImage.ClearOverviews">
            <summary>
            Clears the overviews for the datasource.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IImage.SetBandMinMax(System.Int32,System.Double,System.Double)">
            <summary>
            Sets the band minimum maximum values for the band. Values outside of this range will not be rendered.
            </summary>
            <param name="bandIndex">Index of the band.</param>
            <param name="min">The minimum.</param>
            <param name="max">The maximum.</param>
            <returns>True on success.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IImage.SetDefaultMinMax(System.Int32)">
            <summary>
            Calculates the minimum and maximum values for the specified band and caches them for further use.
            </summary>
            <param name="bandIndex">Index of the band.</param>
            <returns>True on success.</returns>
            \new494 Added in version 4.9.4
        </member>
        <!-- Badly formed XML comment ignored for member "T:MapWinGIS.ILabelCategory" -->
        <member name="P:MapWinGIS.ILabelCategory.Alignment">
            <summary>
            Gets or sets the horizontal and vertical alignment of labels.
            </summary>
        </member>
        <member name="M:MapWinGIS.ILabelCategory.Deserialize(System.String)">
            <summary>
            Restores the state of the object from the string.
            </summary>
            <param name="newVal">A string generated by LabelCategory.Serialize() method.</param>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.Enabled">
            <summary>
            Gets or sets the value which indicates whether the category will be used in the process of shapefile drawing.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.Expression">
            <summary>
            Gets or sets expression which defines shapes that belong to this category.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FontBold">
            <summary>
            Gets or sets a boolean value which indicates whether font is bold.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FontColor">
            <summary>
            Gets or sets font color of labels.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FontColor2">
            <summary>
            Gets or sets the second font color 
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FontGradientMode">
            <summary>
            Gets or sets the gradient for the font of labels.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FontItalic">
            <summary>
            Gets or sets a boolean value which indicates whether font is italic.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FontName">
            <summary>
            Gets or sets font name to draw labels with. 
            </summary>
            <remarks>The names of fonts or font families like "Arial" should be passed.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FontOutlineColor">
            <summary>
            Gets or sets the outline color of the font.
            </summary>
            \see FontOutlineVisible
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FontOutlineVisible">
            <summary>
            Gets or sets a boolean value which indicates whether outline of the font is visible.
            </summary>
            \see FontOutlineColor, FontOutlineWidth
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FontOutlineWidth">
            <summary>
            Gets or sets the width in pixels of the font outline
            </summary>
            \see FontOutlineVisible
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FontSize">
            <summary>
            Gets or sets the size of the font
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FontStrikeOut">
            <summary>
            Gets or sets a boolean value which indicates whether font is striked out.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FontTransparency">
            <summary>
            Gets or sets the transparency of the font. Values from 0 (opaque) to 255 (transparent) are accepted.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FontUnderline">
            <summary>
            Gets or sets a boolean value which indicates whether the font is underlined.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FrameBackColor">
            <summary>
            Gets or sets the back color of the frame.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FrameBackColor2">
            <summary>
            Gets or sets the end color of the frame gradient.
            </summary>
            \see FrameGradientMode
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FrameGradientMode">
            <summary>
            Gets or sets the gradient mode for the label's frame.
            </summary>
            <remarks>Use gmNone value to disable gradient.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FrameOutlineColor">
            <summary>
            Gets or set the outline color of the label's frame.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FrameOutlineStyle">
            <summary>
            Gets or sets the outline color of the label's frame.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FrameOutlineWidth">
            <summary>
            Gets or sets the width of the label's frame outline.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FramePaddingX">
            <summary>
            Gets or sets the horizontal distance from text to the border of label's frame
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FramePaddingY">
            <summary>
            Gets or sets the vertical distance from text to the border of label's frame
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FrameTransparency">
            <summary>
            Gets or sets the transparency of the label's frame. Values from 0 to 255 are accepted.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FrameType">
            <summary>
            Gets or sets the shape of the label's frame
            </summary>
            
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FrameVisible">
            <summary>
            Gets or sets a boolean value which indicates whether label's frame will be drawn.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.HaloColor">
            <summary>
            Gets or sets the color of the halo around the text of the label.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.HaloSize">
            <summary>
            Gets or sets the width of the halo around the text of the label. 
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.HaloVisible">
            <summary>
            Gets or sets a boolean value which indicates whether a halo around text will be drawn.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.InboxAlignment">
            <summary>
            Gets or sets the alignment of text within label's frame. 
            </summary>
            <remarks>This property is commonly used for the alignment of multi-line labels.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.LineOrientation">
            <summary>
            Gets or sets the orientation of the label relative to the polyline it belongs to.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.MaxValue">
            <summary>
            Gets or sets the maximum value for the specified label category in case an LabelCategory.Expression contains a range of values. 
            </summary>
            <remarks>The property is used internally.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.MinValue">
            <summary>
            Gets or sets the minimum value for the specified label category in case an LabelCategory.Expression contains a range of values. 
            </summary>
            <remarks>The property is used internally.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.Name">
            <summary>
            Gets or sets the name of the category. The names must not be unique.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.OffsetX">
            <summary>
            Gets or sets the horizontal offset in pixels which is used to draw labels.
            </summary>
            <remarks>When labels are subject to the rotation, "horizontal" means "along text width".</remarks>
            \see Labels.AutoOffset property
        </member>
        <member name="P:MapWinGIS.ILabelCategory.OffsetY">
            <summary>
            Gets or sets the vertical offset in pixels which is used to draw labels.
            </summary>
            <remarks>When labels are subject to the rotation, "vertical" means "along text height".</remarks>
            \see Labels.AutoOffset property
        </member>
        <member name="P:MapWinGIS.ILabelCategory.Priority">
            <summary>
            The property isn't implemented.
            </summary>
        </member>
        <member name="M:MapWinGIS.ILabelCategory.Serialize">
            <summary>
            Returns the state of the object in the XML-formatted string.
            </summary>
            <remarks>Use LabelCategory.Deserialize() to restore the state.</remarks>
            <returns>Serialized string</returns>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.ShadowColor">
            <summary>
            Gets or sets a color of shadow for the text of the label.
            </summary>
            \see ShadowVisible, ShadowOffsetX, ShadowOffsetY
        </member>
        <member name="P:MapWinGIS.ILabelCategory.ShadowOffsetX">
            <summary>
            Gets or sets the horizontal distance between text of the label and its shadow.
            </summary>
            <remarks>When labels are subject to the rotation, "horizontal" means "along text width"</remarks>
            \see ShadowOffsetY, ShadowVisible
        </member>
        <member name="P:MapWinGIS.ILabelCategory.ShadowOffsetY">
            <summary>
            Gets or sets the horizontal distance between text of the label and its shadow.
            </summary>
            <remarks>When labels are subject to the rotation, "vertical" means "along text height"</remarks>
            \see ShadowOffsetX, ShadowVisible
        </member>
        <member name="P:MapWinGIS.ILabelCategory.ShadowVisible">
            <summary>
            Gets or sets a boolean value which indicates whether shadow of the label will be visible.
            </summary>
            \see ShadowColor, ShadowOffsetX, ShadowOffsetY
        </member>
        <member name="P:MapWinGIS.ILabelCategory.Visible">
            <summary>
            Gets or sets a boolean value which indicates whether shapes that belongs to the category 
            will be visible.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabelCategory.FontSize2">
            <summary>
            Gets or sets the maximum font size fo the category.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="T:MapWinGIS.ILabel">
            <summary>
            Represents a single label on the map.
            </summary>
            \dot
            digraph label_diagram {
            nodesep = 0.3;
            ranksep = 0.3;
            splines = ortho;
            
            node [shape= "polygon", peripheries = 3, fontname=Helvetica, fontsize=9, color = gray, style = filled, height = 0.2, width = 0.8];
            lb [ label="Label" URL="\ref Label"];
            
            node [color = tan, peripheries = 1, height = 0.3, width = 1.0];
            lbs [ label="Labels" URL="\ref Labels"];
            
            edge [ dir = "none", arrowhead="open", style = solid, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060", labeldistance = 0.6 ]
            lbs -> lb [ URL="\ref Labels.get_Label()", tooltip = "Labels.get_Label()", headlabel = "   n"];
            }
            \enddot
            
            <a href = "diagrams.html">Graph description</a>\n\n
            <remarks>Multipart shapes can have separate labels for every part. Each of such labels is represented by the instance of Label class. 
            Labels added to the map can be accessed via Labels.get_Label() property. It's not recommended to store instances of this class 
            retrieved from the map after the layer they belong to was removed.</remarks>\n\n
            This code demonstrate how to move the label for a shape with a given index.
            \code 
            Shapefile sf = some_shapefile;
            int shapeIndex = 10;         // the index of shape we want to move
              
            // retrieving label object
            Label label = sf.Labels.get_Label(shapeIndex, 0);    // 0 - the first part
            if (label != null)
            {
                // is it currently displayed on the screen?
                Debug.Print("The label is drawn: " + label.IsDrawn.ToString());
                   
                label.x += 10.0;            // let's move it to the right by 10 map units
                label.y -= 5.0;             // let's move it to the bottom by 5 map units
                label.Visible = true;       // ensure that it's visible
                   
                Debug.Print("The text of the label: " + label.Text);
                map.Redraw();               // redraw is needed to see the changes of position
            }
            else {
                Debug.Print(string.Format("The chart with index {0} doesn't exists", shapeIndex));
            }
            \endcode
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.ILabel.Category">
            <summary>
            The index of visualization category the label belongs to.
            </summary>
            <remarks>The value -1 indicates that the label doesn't belong to any visualization category and 
            default drawing options specified in the Labels class will be used for it's drawing.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabel.IsDrawn">
            <summary>
            Gets a boolean value which indicates whether the label was drawn at the current extents of the map.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabel.Rotation">
            <summary>
            Gets or sets the angle of label rotation in degrees. Positive values set 
            clockwise rotation, negative - counter-clockwise.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabel.ScreenExtents">
            <summary>
            Gets the extents the label occupies on the map (in pixels).
            </summary>
            <remarks>In case the label wasn't drawn on the map, NULL reference will be returned.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabel.Text">
            <summary>
            Gets or sets the text of the label.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabel.Visible">
            <summary>
            Gets or sets a boolean value which indicates whether the label is visible.
            </summary>
            <remarks>Call AxMap.Redraw() to see the effect of this property.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabel.x">
            <summary>
            Gets or sets the horizontal position of the label in map coordinates.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabel.y">
            <summary>
            Gets or sets the vertical position of the label in map coordinates.
            </summary>
        </member>
        <member name="T:MapWinGIS.ILabels">
            <summary>
            Represents a list of labels of the map layer and their visualization options.
            </summary>
            \dot
            digraph labels_diagram {
            nodesep = 0.3;
            ranksep = 0.3;
            splines = ortho;
            
            node [shape= "polygon", peripheries = 3, fontname=Helvetica, fontsize=9, color = gray, style = filled, height = 0.2, width = 0.8];
            lcat [ label="LabelCategory" URL="\ref LabelCategory"];
            lb [ label="Label" URL="\ref Label"];
            
            node [color = tan, peripheries = 1, height = 0.3, width = 1.0];
            lbs [ label="Labels" URL="\ref Labels"];
            
            node [style = dashed, color = gray];
            sf [ label="Shapefile" URL="\ref Shapefile"];
            img [ label="Image" URL="\ref Image"];
            
            edge [ dir = "none", style = solid, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060", labeldistance = 0.6 ]
            sf -> lbs [ URL="\ref Shapefile.Labels", tooltip = "Shapefile.Labels", headlabel = "   1"];
            img -> lbs [ URL="\ref Image.Labels", tooltip = "Image.Labels", headlabel = "   1"];
            lbs -> lcat [ URL="\ref Labels.get_Category()", tooltip = "Labels.get_Category()", headlabel = "   n"];
            lbs -> lb [ URL="\ref Labels.get_Label()", tooltip = "Labels.get_Label()", headlabel = "   n"];
            }
            \enddot
            
            <a href = "diagrams.html">Graph description</a>\n\n
            Here is a diagram with groups of API members of Labels class.
            \dotfile labelsgroups.dot
            <a href = "diagrams.html">Graph description</a>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.ILabels.GlobalCallback">
            <summary>
            Gets or sets the global callback object which is used for passing to the client 
            an information about progress and errors.
            </summary>
            <remarks>An instance of the class which implements ICallback interface should be passed.
            The class should be implemented by caller.</remarks>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.ILabels.Key">
            <summary>
            A text string associated with the instance of the class. Any value can be stored by developer in this property.
            </summary>
        </member>
        <member name="M:MapWinGIS.ILabels.UpdateSizeField">
            <summary>
            Marks that values of size field have changed and the size of labels should be recalculated on the next redraw.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.ILabels.FontSize2">
            <summary>
            Gets or sets the maximum font size for labels (when size field is used).
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.ILabels.UseVariableSize">
            <summary>
            Gets or sets a value indicating whether variable size for labels should be used 
            (in the range between Labels.FontSize, Labels.FontSize2).
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.ILabels.LogScaleForSize">
            <summary>
            Gets or sets a value indicating whether logarithmic scale will be used to calculate the size of labels.
            </summary>
            \see Labels.UseVariableSize
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.ILabels.LastErrorCode">
            <summary>
            Returns the code of the last error which has occurred within the instance of class.
            </summary>
        </member>
        <member name="M:MapWinGIS.ILabels.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the specific error code.
            </summary>
            <param name="ErrorCode">The error code returned by Labels.LastErrorCode.</param>
            <returns>The string with the description.</returns>
        </member>
        <member name="P:MapWinGIS.ILabels.Options">
            <summary>
            Gets or sets the list of visualization options of labels. For inner use only.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.UseGdiPlus">
            <summary>
            Gets or sets the values indicating whether GDI+ library should be used to draw labels.
            </summary>
            <remarks>The default value is true. When set to false, GDI will be used for drawing.
            In GDI mode no gradients and transparency is supported, while in some cases it can be somewhat faster then GDI+.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabels.ClassificationField">
            <summary>
            Gets a classification field used by unique values classification.
            </summary>
            <remarks>The property is used internally in couple with LabelCategory.MinValue and LabelCategory.MaxValue
            to avoid the parsing of expressions for the categories in case unique values classification was applied.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabels.Expression">
            <summary>
            Gets or sets the expression used to generate text of labels from the attribute table of the shapefile.
            </summary>
            <remarks>Applicable for the instances of Labels class associated with shapefile (obtained by Shapefile.Labels).</remarks>
        </member>
        <member name="M:MapWinGIS.ILabels.ForceRecalculateExpression">
            <summary>
            For labels attached to shapefile layer updates the text of each label based on Expression property.
            </summary>
            <remarks>The method is necessary when the values in underlying DBF table have changed, 
            since Labels class doesn't track these changes automatically.</remarks>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MapWinGIS.ILabels.get_Category(System.Int32)" -->
        <!-- Badly formed XML comment ignored for member "M:MapWinGIS.ILabels.set_Category(System.Int32,MapWinGIS.LabelCategory)" -->
        <member name="M:MapWinGIS.ILabels.RemoveCategory(System.Int32)">
            <summary>
            Removes a visualization category with specified index.
            </summary>
            <param name="Index">The index of category to be removed.</param>
            <returns>True on successful removal and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ILabels.AddCategory(System.String)">
            <summary>
            Adds a visualization category for labels.
            </summary>
            <remarks>Use LabelCategory.Expression or Label.Category to map specific labels to the newly
            created category.</remarks>
            <param name="Name">The name of the new category</param>
            <returns>The reference to the new category.</returns>
        </member>
        <member name="M:MapWinGIS.ILabels.ApplyCategories">
            <summary>
            Maps labels to the visualization categories.
            </summary>
            <remarks>LabelCategory.Expression property is analysed. 
            Afterwards Label.Category property is changed for all labels whose attributes comply with the expression.</remarks>
        </member>
        <member name="M:MapWinGIS.ILabels.ClearCategories">
            <summary>
            Removes all the visualization categories.
            </summary>
        </member>
        <member name="M:MapWinGIS.ILabels.GenerateCategories(System.Int32,MapWinGIS.tkClassificationType,System.Int32)">
            <summary>
            Generates visualization categories for labels based on certain field from the attribute 
            table of the parent shapefile.
            </summary>
            <remarks>Use Labels.ApplyCategories to map particular labels to the generated categories based on the 
            LabelCategory.Expression property.</remarks>
            <param name="FieldIndex">The index of field from the attribute table.</param>
            <param name="ClassificationType">The type of classification.</param>
            <param name="numClasses">Number of categories to be generated. It will be ignored for ctUniqueValues.</param>
            <returns>True on successful generation and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ILabels.InsertCategory(System.Int32,System.String)">
            <summary>
            Inserts a new visualization category at the given position of the list.
            </summary>
            <param name="Index">The index to insert the new category at. Should be greater or equal to 0 and less then 
            Labels.numCategories.</param>
            <param name="Name">The name of the new category.</param>
            <returns>The reference to the newly created category.</returns>
        </member>
        <member name="M:MapWinGIS.ILabels.MoveCategoryDown(System.Int32)">
            <summary>
            Moves a specified label category down in the list.
            </summary>
            <param name="Index">The index of the category to move.</param>
            <returns>True on successful operation and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ILabels.MoveCategoryUp(System.Int32)">
            <summary>
            Moves a specified label category up in the list.
            </summary>
            <param name="Index">The index of the category to move.</param>
            <returns>True on successful operation and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.ILabels.NumCategories">
            <summary>
            Number of visualization categories associated with this instance of class.
            </summary>
        </member>
        <member name="M:MapWinGIS.ILabels.ApplyColorScheme(MapWinGIS.tkColorSchemeType,MapWinGIS.ColorScheme)">
            <summary>
            Applies color scheme to the visualization categories.
            </summary>
            <param name="Type">The method of interpolation.</param>
            <param name="ColorScheme">Color scheme to take colors from.</param>
        </member>
        <member name="M:MapWinGIS.ILabels.ApplyColorScheme2(MapWinGIS.tkColorSchemeType,MapWinGIS.ColorScheme,MapWinGIS.tkLabelElements)">
            <summary>
            Applies color scheme to the visualization categories. 
            </summary>
            <remarks>Allows to choose the part of label to apply colors to.</remarks>
            <param name="Type">The method of interpolation.</param>
            <param name="ColorScheme">Color scheme object to borrow colors from.</param>
            <param name="Element">The element of the label to apply colors to. Labels.ApplyColorScheme is shortcut for using leDefault option.</param>
        </member>
        <member name="M:MapWinGIS.ILabels.ApplyColorScheme3(MapWinGIS.tkColorSchemeType,MapWinGIS.ColorScheme,MapWinGIS.tkLabelElements,System.Int32,System.Int32)">
            <summary>
            Applies color scheme to the visualization categories. 
            </summary>
            <param name="Type">The method of interpolation.</param>
            <param name="ColorScheme">Color scheme object to borrow colors from.</param>
            <param name="Element">The element of the label to apply colors to. Labels.ApplyColorScheme is shortcut for using leDefault option.</param>
            <param name="CategoryStartIndex">The index of the first visualization category to apply colors to.</param>
            <param name="CategoryEndIndex">The index of the last visualization category to apply colors to.</param>
        </member>
        <member name="M:MapWinGIS.ILabels.AddLabel(System.String,System.Double,System.Double,System.Double,System.Int32)">
            \addtogroup labels_management Labels generation
            Here is a list of properties and methods for adding labels (or their parts) to the map or removing them. 
            This module is a part of the documentation of Labels class.
            \dot
            digraph labels_management_graph {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Labels" URL="\ref Labels"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr  [label="Managemant"          URL="\ref labels_management"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            @{
            <summary>
            Adds a new label as the last one in the list.
            </summary>
            <remarks>All the parameters passed to the method can be changed afterwards using Labels.get_Label() property.</remarks>
            <param name="Text">The text of the new label.</param>
            <param name="x">The x coordinate of the new label.</param>
            <param name="y">The y coordinate of the new label.</param>
            <param name="Rotation">The rotation of the label in degrees. Positive values set clockwise rotation, negative - counter-clockwise.</param>
            <param name="Category">The index of visualization category to be used for the label drawing. 
            Default value is -1, which means the default drawing options will be used.</param>
        </member>
        <member name="M:MapWinGIS.ILabels.AddPart(System.Int32,System.String,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Adds a part to the label with specified index.
            </summary>
            <remarks>According to the shapefile specification shapes such as polylines or polygons can have multiple parts. 
            Use this method to add a separate label for each part of the parent shape.</remarks>
            <param name="Index">The index of label to add a part to.</param>
            <param name="Text">The text to be displayed.</param>
            <param name="x">The x coordinate of the part.</param>
            <param name="y">The y coordinate of the part.</param>
            <param name="Rotation">The rotation of the label's part.</param>
            <param name="Category">The index of visualization category to be used for the label drawing. 
            Default value is -1, which means the default drawing options will be used.</param>
        </member>
        <member name="M:MapWinGIS.ILabels.Clear">
            <summary>
            Removes all the labels and parts but not the visualization categories.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.Count">
            <summary>
            Gets the number of labels. 
            </summary>
            <remarks>Each label can have more then one part.</remarks>
        </member>
        <member name="M:MapWinGIS.ILabels.Generate(System.String,MapWinGIS.tkLabelPositioning,System.Boolean)">
            <summary>
            Generates labels for each shape of the parent shapefile.
            </summary>
            <remarks>Applicable for the instances of Labels class associated with shapefile, i.e. returned
            by Shapefile.Labels property.</remarks>
            <param name="Expression">The expression to be used for generation of the text for labels.</param>
            <param name="Method">The method to calculate position of each label.</param>
            <param name="LargestPartOnly">A value which indicates whether labels should be created for each part of the 
            multipart shape or for the largest part only.</param>
            <returns>The number of generated labels.</returns>
        </member>
        <member name="M:MapWinGIS.ILabels.InsertLabel(System.Int32,System.String,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Inserts a new label at the given position.
            </summary>
            <param name="Index">The index to insert the label at.</param>
            <param name="Text">The text of the label.</param>
            <param name="x">The x coordinate of the label.</param>
            <param name="y">The y coordinate of the label.</param>
            <param name="Rotation">The angle of label rotation.</param>
            <param name="Category">The index of the visualization category for the label. Use -1 if the label doesn't belong to any category.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ILabels.InsertPart(System.Int32,System.Int32,System.String,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Inserts a new part for the specified label.
            </summary>
            <remarks>%Labels can have several parts which correspond to the parts of shapes they belong to.</remarks>
            <param name="Index">The index of the label.</param>
            <param name="Part">The index to insert the new part at.</param>
            <param name="Text">The text of the label.</param>
            <param name="x">The x coordinate of the label.</param>
            <param name="y">The y coordinate of the label.</param>
            <param name="Rotation">The rotation of the label in degrees.</param>
            <param name="Category">The index of visualization category. Use -1 if the label doesn't belong to any category.</param>
            <returns>True on success or false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ILabels.RemoveLabel(System.Int32)">
            <summary>
            Removes a label with the specified index. If the label is multipart then all its parts will be removed.
            </summary>
            <param name="Index">The index of the label to be removed.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ILabels.RemovePart(System.Int32,System.Int32)">
            <summary>
            Removes a part of label with the specified index.
            </summary>
            <param name="Index">The index of the label.</param>
            <param name="Part">The index of part to be removed.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.ILabels.Synchronized">
            <summary>
            Gets or sets a boolean value which indicates whether labels should be synchronized with the parent shapefile.
            </summary>
            <remarks>Synchronization means that labels will be automatically added or removed simultaneously with 
            the corresponding operation in the shapefile.
            Labels can be synchronized only if their number is equal to the number of shapes.
            </remarks>
            \see Labels.Count, Shapefile.NumShapes
        </member>
        <member name="M:MapWinGIS.ILabels.get_Label(System.Int32,System.Int32)">
            <summary>
            Gets label with the specified index. 
            </summary>
            <param name="Index">The index of label to return.</param>
            <param name="Part">The part of the label to return. In case of single part labels 0 should be used.</param>
            <returns>A reference to the label or null reference in case of incorrect index.</returns>
        </member>
        <member name="M:MapWinGIS.ILabels.get_NumParts(System.Int32)">
            <summary>
            Gets the number of parts for the label with specified index.
            </summary>
            <param name="Index">The index of the label.</param>
            <returns>The number of parts or -1 in case of incorrect index</returns>
        </member>
        <member name="P:MapWinGIS.ILabels.BasicScale">
            \addtogroup labels_positioning Labels positioning
            Here is a list of properties and methods which affects alignment, positioning and scale of labels. This module is a part of the documentation of Labels class.
            \dot
            digraph labels_positioning {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Labels" URL="\ref Labels"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr  [label="Positioning"          URL="\ref labels_positioning"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            @{
            <summary>
            Map scale for which the size of labels will be equal to value set in Labels.FontSize property.
            </summary>
            <remarks>Applicable only when Label.Scale is set to true.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabels.ScaleLabels">
            <summary>
            Gets or sets the value which indicates whether the labels will change their size depending upon map scale. The default value is false.
            </summary>
            \see Labels.BasicScale
        </member>
        <member name="P:MapWinGIS.ILabels.VerticalPosition">
            <summary>
            Gets or sets the value which affects the sequence of labels drawing relative to the map layers.
            </summary>
            <remarks>See details in the description of tkVerticalPosition enumeration.</remarks>
        </member>
        <member name="M:MapWinGIS.ILabels.Select(MapWinGIS.Extents,System.Int32,MapWinGIS.SelectMode,System.Object@,System.Object@)">
            <summary>
            Returns the indices of all labels which are displayed in the given part of the map.
            </summary>
            <remarks>This property doesn't change appearance of the labels.</remarks>
            <param name="BoundingBox">The bounding box in screen coordinates.</param>
            <param name="Tolerance">The selection tolerance.</param>
            <param name="SelectMode">The selection mode.</param>
            <param name="LabelIndices">An output array with indices of the labels.</param>
            <param name="PartIndices">An output array with indices of parts for each label.</param>
            <returns>True in case at least one label fell into selection.</returns>
        </member>
        <member name="P:MapWinGIS.ILabels.Positioning">
            <summary>
            Gets or sets the method of label positioning.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.LineOrientation">
            <summary>
            Gets or sets the type of the label's orientation relative to the direction of the labelled shape.
            </summary>
            <remarks>Applicable for the instance of the Labels class associated with polyline shapefiles, 
            i.e. obtained by Shapefile.Labels property while Shapefile.ShapefileType is polyline.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabels.OffsetX">
            <summary>
            Gets or sets the horizontal offset in pixels which is used to draw labels.
            </summary>
            <remarks>When labels are subject to the rotation, "horizontal" means "along the text width".</remarks>
            \see Labels.AutoOffset property
        </member>
        <member name="P:MapWinGIS.ILabels.OffsetY">
            <summary>
            Gets or sets the vertical offset in pixels which is used to draw labels.
            </summary>
            <remarks>When labels are subject to rotation "vertical" means "along the text height".</remarks>
            \see Labels.AutoOffset property
        </member>
        <member name="P:MapWinGIS.ILabels.InboxAlignment">
            <summary>
            Gets or sets the value which defines an alignment of text within label's frame.
            </summary>
            <remarks>Should be used with multiline labels.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabels.AutoOffset">
            <summary>
            Turns on or off the auto offset behaviour. 
            </summary>
            <remarks>
            When set to true, Labels.OffsetX and Labels.OffsetY property will be changed 
            automatically according to the size of symbols for parent shape points to avoid overlaps.
            Applicable for point and multipoint shapefiles only.
            </remarks>
        </member>
        <member name="P:MapWinGIS.ILabels.Alignment">
            <summary>
            Sets horizontal and vertical alignment of labels.
            </summary>
        </member>
        <member name="M:MapWinGIS.ILabels.SaveToDbf(System.Boolean,System.Boolean)">
            \addtogroup labels_serialization Labels serialization
            Here is a list of methods and properties for serialization of labels and their persistence between the runs of application. 
            This module is a part of the documentation of Labels class.
            \dot
            digraph labels_serialization {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Labels" URL="\ref Labels"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr  [label="Serialization"          URL="\ref labels_serialization"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>\n\n
            It's possible to serialize different types of information for labels (charts):\n
            -# The drawing settings, such visualization options, order of drawing, etc. It's desirable to save them in virtually any scenario.\n\n
            -# The positions of the labels (charts). It makes sense to save them to avoid the recalculation of the positions on the next loading. 
            It's quite relevant even for middle sized datasets if the more or less complex routine for positioning is used 
            (Shape.Centroid, Shape.InteriorPoint).\n\n
            -# The angles rotation, text and categories for labels. This type of information requires serialization less often. The text of labels
            can be easily restored by applying Labels.Expression. Unless the Label.Text property was set manually.
            In the same way categories rely on LabelCategory.Expression and will be serialized among the first group of settings, 
            unless Label.Category property was set manually. Finally the rotation of labels which is preserved less often.
            .
            The first group of settings is embedded in the larger XML body, either layer or map settings. It can be saved:
            - to the file (see AxMap.SaveLayerOptions, AxMap.SaveMapState);
            - returned as a string (see AxMap.SerializeLayer, AxMap.SerializeMapState).
            .
            For data described in the 2nd and 3rd sections more options are available by Labels.SavingMode property and tkSavingMode enumeration. It can be:
            - not serialized at all (modeNone);
            - embedded in the layer or map settings in the same way as the first group (modeStandard);
            - written to stand-alone XML file with the name [LayerName].lbl (modeXML, modeXMLOverwrite);
            - written to the dbf table of the shapefile (modeDBF).
            .
            @{
            <summary>
            Saves position and text of the labels to the attribute table (dbf file).
            </summary>
            <param name="saveText">A value which indicates whether the text of labels will be saved.</param>
            <param name="saveCategory">A value which indicates whether the mapping between labels 
            and visualization categories will be saved.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ILabels.SaveToDbf2(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Saves positions and text of the labels to the attribute table (dbf file).
            </summary>
            <remarks>This method allows to specify the names of fields to save the data in.</remarks>
            <param name="xField">The name of field to store x coordinate.</param>
            <param name="yField">The name of field to store y coordinate.</param>
            <param name="angleField">The name of field to store angle.</param>
            <param name="textField">The name of field to store text.</param>
            <param name="categoryField">The name of field to store category.</param>
            <param name="saveText">A value which indicates whether the text of labels will be saved.</param>
            <param name="saveCategory">A value which indicates whether the mapping between labels and visualization categories will be saved.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ILabels.SaveToXML(System.String)">
            <summary>
            Saves the text, positions and visualization options of the labels to the XML file.
            </summary>
            <param name="Filename">The name of the file to save the settings to.</param>
            <returns>True on successful saving and false otherwise. 
            Use Labels.get_ErrorMsg() to find out the reason of failure.</returns>
        </member>
        <member name="P:MapWinGIS.ILabels.SavingMode">
            <summary>
            Gets or sets the method to save and restore the state labels.
            </summary>
            <remarks>See details in tkSavingMode enumeration.</remarks>
        </member>
        <member name="M:MapWinGIS.ILabels.LoadFromDbf(System.Boolean,System.Boolean)">
            <summary>
            Loads text and position of labels from the attribute table of the parent shapefile.
            </summary>
            <remarks>Applicable for the instance of the Labels class associated with polyline shapefiles, 
            i.e. obtained by Shapefile.Labels property </remarks>
            <param name="loadText">A value which indicates whether the text of the labels should be loaded.</param>
            <param name="loadCategory">A value which indicates whether the mapping between labels and visualization categories should be restored.</param>
            <returns>True on successful loading and false otherwise. </returns>
        </member>
        <member name="M:MapWinGIS.ILabels.LoadFromDbf2(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            Loads text and position of labels from the attribute table of the parent shapefile.
            </summary>
            <param name="xField">The name of field which holds x values.</param>
            <param name="yField">The name of field which holds y values.</param>
            <param name="angleField">The name of field which holds rotation angles.</param>
            <param name="textField">The name of the field which stores text of the labels.</param>
            <param name="categoryField">The name of the field which stores index of visualization category for each label.</param>
            <param name="loadText">A value which indicates whether the text of the labels should be loaded.</param>
            <param name="loadCategory">A value which indicates whether the mapping between labels and visualization categories should be restored.</param>
            <returns>True on successful loading and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ILabels.LoadFromXML(System.String)">
            <summary>
            Restores the state of the labels from the specified XML file.
            </summary>
            <param name="Filename">The name of the file previously generated by Labels.SaveToXML method.</param>
            <returns>True on successful loading and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ILabels.Serialize">
            <summary>
            Saves the state of the labels.
            </summary>
            <remarks>Serialized state holds information about visualization options, categories and text expressions. \n\n
            Optionally it can hold information about position and text of labels (see Labels.SavingMode property). 
            The default values of the properties will not be serialized.</remarks>
            <returns>A string with serialized state. On failure an empty string will be returned.</returns>
        </member>
        <member name="M:MapWinGIS.ILabels.Deserialize(System.String)">
            <summary>
            Restores the state of the Labels class from the string.
            </summary>
            <param name="newVal">A string with serialized state generated by Labels.Serialize() method.</param>
        </member>
        <member name="P:MapWinGIS.ILabels.Visible">
            \addtogroup labels_visibility Labels visibility
            Here is list of properties and methods which affect visibility of labels. This module is a part of the documentation of Labels class.
            \dot
            digraph labels_visibility {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Labels" URL="\ref Labels"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr  [label="Visibility"          URL="\ref labels_visibility"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            @{
            <summary>
            Gets or sets the value which indicates whether the labels will be visible on the map.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.VisibilityExpression">
            <summary>
            Gets or sets an expression which defines what shapes should be labelled on the map.
            </summary>
            <remarks>Applicable only to the instances of the Labels class associated with shapefile, i.e.
            obtained by Shapefile.Labels property.</remarks>
            \code
            Labels lb = new Labels();
            lb.VisibilityExpression = "[Area] > 100 and [population] > 100000";
            \endcode
        </member>
        <member name="P:MapWinGIS.ILabels.UseWidthLimits">
            <summary>
            Is not implemented.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.RemoveDuplicates">
            <summary>
            Gets or sets the value which indicates whether labels with the same text should be drawn.
            </summary>
            <remarks>When set to true only the labels with unique text will be drawn on map. The choice of label 
            to draw depends on their position in the list and the fact of belonging to the visualization category.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabels.MaxVisibleScale">
            <summary>
            Gets or sets the maximum scale at which labels are visible on the map.
            </summary>
            \see Labels.DynamicVisibility, AxMap.CurrentScale
        </member>
        <member name="P:MapWinGIS.ILabels.MinDrawingSize">
            <summary>
            Gets or sets the minimum size of the shape in pixels to be labelled at the current map scale.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.MinVisibleScale">
            <summary>
            Get or sets the minimum scale at which labels are visible on the map.
            </summary>
            \see Labels.DynamicVisibility, AxMap.CurrentScale
        </member>
        <member name="P:MapWinGIS.ILabels.MinVisibleZoom">
            <summary>
            Gets or sets the minimum zoom at which labels are visible on the map.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.MaxVisibleZoom">
            <summary>
            Gets or sets the maximum zoom at which labels are visible on the map.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.CollisionBuffer">
            <summary>
            Gets or sets the value which affects the collision avoidance routine.
            Two labels are considered overlapping when the distance between their bounding rectangles
            is less then this value.
            </summary>
            \see Labels.AvoidCollisions
        </member>
        <member name="P:MapWinGIS.ILabels.DynamicVisibility">
            <summary>
            Gets or sets the value which turns the dynamic visibility on or off.
            </summary>
            <remarks>
            When set to true, labels will be visible only in the range of scales set by Labels.MinVisibleScale and Labels.MinVisibleScale.
            </remarks>
        </member>
        <member name="P:MapWinGIS.ILabels.AvoidCollisions">
            <summary>
            Gets or sets the value which indicates whether a routine for preventing of label overlaps will be used.
            </summary>
            <remarks>When set to true overlapping labels won't be drawn. </remarks>
        </member>
        <member name="P:MapWinGIS.ILabels.ShadowColor">
            \addtogroup labels_visualization Labels visualization
            Here is the list of visualization properties for labels. This module is a part of the documentation of Labels class.\n\n
            The more details on the topic in the description of the LabelCategory class. The properties listed below are used for all labels 
            without specific visualization category set, i.e. Label.Category == -1;
            \dot
            digraph labels_visualization {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Labels" URL="\ref Labels"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr  [label="Visualization"          URL="\ref labels_visualization"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            @{
            <summary>
            Gets or sets the color of the label's shadow.
            </summary>
            \see ShadowVisible
        </member>
        <member name="P:MapWinGIS.ILabels.ShadowOffsetX">
            <summary>
            Gets or sets the horizontal offset of the label's shadow.
            </summary>
            \see ShadowVisible
        </member>
        <member name="P:MapWinGIS.ILabels.ShadowOffsetY">
            <summary>
            Gets or sets the vertical offset of the label's shadow.
            </summary>
            \see ShadowVisible
        </member>
        <member name="P:MapWinGIS.ILabels.ShadowVisible">
            <summary>
            Gets or sets the value which indicates whether label's shadow is visible.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.HaloColor">
            <summary>
            Gets or sets the color of the halo around label's text.
            </summary>
            \see Labels.HaloVisible
        </member>
        <member name="P:MapWinGIS.ILabels.HaloSize">
            <summary>
            Gets or sets the size of the halo drawn around label's text.
            </summary>
            \see Labels.HaloVisible
        </member>
        <member name="P:MapWinGIS.ILabels.HaloVisible">
            <summary>
            Gets or sets the value which indicates whether label's halo is visible.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.FontBold">
            <summary>
            Gets or sets the value which indicates whether the font of labels is bold.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.FontColor">
            <summary>
            Gets or sets the color of the label font.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.FontColor2">
            <summary>
            Gets or sets the second color of the label font. It is used to set color gradient for the font.
            </summary>
            \see Labels.FontGradientMode
        </member>
        <member name="P:MapWinGIS.ILabels.FontGradientMode">
            <summary>
            Gets or sets the gradient mode for the labels.
            </summary>
            \see Labels.FontColor2
        </member>
        <member name="P:MapWinGIS.ILabels.FontItalic">
            <summary>
            Gets or sets the value which indicates whether the font of labels is italic.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.FontName">
            <summary>
            Gets or sets the name of the font to draw labels with, e.g. Arial.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.FontOutlineColor">
            <summary>
            Sets the color of the font outline.
            </summary>
            \see Labels.FontOutlineVisible
        </member>
        <member name="P:MapWinGIS.ILabels.FontOutlineVisible">
            <summary>
            Gets or sets the value which indicates whether font outline is visible. The default value is false.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.FontOutlineWidth">
            <summary>
            Gets or sets the width of the font outline. The default value is 1.
            </summary>
            \see FontOutlineVisible
        </member>
        <member name="P:MapWinGIS.ILabels.FontSize">
            <summary>
            Gets or sets the size of the font to draw labels with.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.FontStrikeOut">
            <summary>
            Gets or sets the value which indicates whether the font of labels is struck out.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.FontTransparency">
            <summary>
            Gets or sets the transparency of the font. A values between 0 (transparent) to 255 (opaque) can be used.
            </summary>
            <remarks>The default value is 255. Values which fall outside the specified range will be 
            corrected to the closest acceptable value without reporting an error.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabels.FontUnderline">
            <summary>
            Gets or sets the value which indicates whether the font of labels is struck out.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.FrameBackColor">
            <summary>
            Gets or sets the color of the frame's background.
            </summary>
            
        </member>
        <member name="P:MapWinGIS.ILabels.FrameBackColor2">
            <summary>
            Gets or sets the second color of the frame's background.
            </summary>
            , Labels.FrameGradientMode
        </member>
        <member name="P:MapWinGIS.ILabels.FrameGradientMode">
            <summary>
            Gets or sets the type of gradient for the frame of the label. 
            </summary>
            <remarks>
            For all values other than gmNone a gradient
            starting from Labels.FrameBackColor and ending by Labels.FrameBackColor2 will be applied.</remarks>
            
        </member>
        <member name="P:MapWinGIS.ILabels.FrameOutlineColor">
            <summary>
            Gets or sets the outline color of the label's frame
            </summary>
            
        </member>
        <member name="P:MapWinGIS.ILabels.FrameOutlineStyle">
            <summary>
            Gets or sets the outline style of the label's frame. 
            </summary>
            
        </member>
        <member name="P:MapWinGIS.ILabels.FrameOutlineWidth">
            <summary>
            Gets or sets the width of the outline of the label's frame.
            </summary>
            
        </member>
        <member name="P:MapWinGIS.ILabels.FramePaddingX">
            <summary>
            Gets or sets the horizontal distance between the text of the label and its frame.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.FramePaddingY">
            <summary>
            Gets or sets the vertical distance between the text of the label and its frame.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.FrameTransparency">
            <summary>
            Gets or sets the transparency of the label's frame. A values between 0 (transparent) to 255 (opaque) can be used.
            </summary>
            <remarks>The default value is 255. Values which fall outside the specified range will be 
            corrected to the closest acceptable value without reporting an error.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabels.FrameType">
            <summary>
            Gets or sets the shape of the label's frame.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.FrameVisible">
            <summary>
            Gets or sets the values which indicates whether label's frame is visible.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILabels.TextRenderingHint">
            <summary>
            Gets or sets rendering hint to be used during GDI+ rendering.
            </summary>
            <remarks>This property will be ignored if GlobalSettings.AutoChooseRenderingHintForLabels is set to true.</remarks>
        </member>
        <member name="P:MapWinGIS.ILabels.FloatNumberFormat">
            <summary>
            Gets or sets the formatting to be used for floating point numbers during generation of labels.
            </summary>
            <remarks>See acceptable formats in description of <a href = "http://www.cplusplus.com/reference/cstdio/printf/">C printf function</a>.
            The commonly used values may be: %g (shortest representation), %.2f (two decimal points).</remarks>
            \new493 Added in version 4.9.3
        </member>
        <member name="T:MapWinGIS.ILinePattern">
            <summary>
            Provides means for defining custom pattern from lines and point symbols for rendering polyline layers.
            </summary>
            <remarks>The line pattern consists of line segments which can be representing by lines of various style, 
            width and color or by markers. Line segments are drawn one atop of the other in the sequence defined 
            in the line pattern.</remarks> \n\n
            Here is a diagram for the LinePattern class.
            \dot
            digraph pattern_diagram {
            nodesep = 0.3;
            ranksep = 0.3;
            splines = ortho;
            
            node [shape= "polygon", peripheries = 3, fontname=Helvetica, fontsize=9, color = gray, style = filled, height = 0.2, width = 0.8];
            segm [ label="LineSegment" URL="\ref LineSegment"];
            
            node [color = tan, peripheries = 1, height = 0.3, width = 1.0];
            ptrn [label="LinePattern" URL="\ref LinePattern"];
            
            node [style = dashed, color = gray];
            sdo [ label="ShapeDrawingOptions" URL="\ref ShapeDrawingOptions"];
            
            edge [ dir = "none", style = solid, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060", labeldistance = 0.6 ]
            sdo -> ptrn [ URL="\ref ShapeDrawingOptions.LinePattern", tooltip = "ShapeDrawingOptions.LinePattern", headlabel = "   1"];
            ptrn -> segm [ URL="\ref LinePattern.get_Line()", tooltip = "LinePattern.get_Line()", headlabel = "   n"];
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.ILinePattern.AddLine(System.UInt32,System.Single,MapWinGIS.tkDashStyle)">
            <summary>
            Adds a line segment to the pattern.
            </summary>
            <param name="Color">The color of the line.</param>
            <param name="Width">The width of the line.</param>
            <param name="style">The style of the line.</param>
        </member>
        <member name="M:MapWinGIS.ILinePattern.AddMarker(MapWinGIS.tkDefaultPointSymbol)">
            <summary>
            Adds a segment represented by point symbol (marker).
            </summary>
            <param name="Marker">The type of the marker.</param>
            <returns>Reference to the newly added segment or NULL reference on failure.</returns>
        </member>
        <member name="M:MapWinGIS.ILinePattern.Clear">
            <summary>
            Removes all the line segments from the pattern.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILinePattern.Count">
            <summary>
            Returns the number of all segments in the pattern.
            </summary>
        </member>
        <member name="M:MapWinGIS.ILinePattern.Deserialize(System.String)">
            <summary>
            Restores the state of the line segment from the string.
            </summary>
            <param name="newVal">A string generated by LinePattern.Serialize() method.</param>
        </member>
        <member name="M:MapWinGIS.ILinePattern.Draw(System.IntPtr,System.Single,System.Single,System.Int32,System.Int32,System.UInt32,System.Byte)">
            <summary>
            Draws a line pattern on the specified device context.
            </summary>
            <remarks>The method can be used to draw map legend.</remarks>
            <param name="hdc">The handle of the device context.</param>
            <param name="x">The x coordinate of the upper left corner of the drawing.</param>
            <param name="y">The y coordinate of the upper left corner of the drawing.</param>
            <param name="clipWidth">The width of the clipping rectangle.</param>
            <param name="clipHeight">The height of the clipping rectangle.</param>
            <param name="BackColor">The back color of the device context the drawing is performed at.
            The value should be specified to ensure correct blending when semi-transparent colors are used.</param>
            <param name="backAlpha">The alpha component of the back color of the device context the drawing is performed at.
            Specify a value of 255 for the background color to be fully opaque, and 0 for the background to be transparent.</param>
            <returns>True on successful drawing and false on failure.</returns>
        </member>
        <member name="M:MapWinGIS.ILinePattern.DrawVB(System.Int32,System.Single,System.Single,System.Int32,System.Int32,System.UInt32,System.Byte)">
            <summary>
            Draws a line pattern on the specified device context.
            </summary>
            <remarks>The method can be used to draw map legend.</remarks>
            <param name="hdc">The handle of the device context.</param>
            <param name="x">The x coordinate of the upper left corner of the drawing.</param>
            <param name="y">The y coordinate of the upper left corner of the drawing.</param>
            <param name="clipWidth">The width of the clipping rectangle.</param>
            <param name="clipHeight">The height of the clipping rectangle.</param>
            <param name="BackColor">The back color of the device context the drawing is performed at.
            The value should be specified to ensure correct blending when semi-transparent colors are used.</param>
            <param name="backAlpha">The alpha component of the back color of the device context the drawing is performed at.
            Specify a value of 255 for the background color to be fully opaque, and 0 for the background to be transparent.</param>
            <returns>True on successful drawing and false on failure.</returns>
        </member>
        <member name="P:MapWinGIS.ILinePattern.GlobalCallback">
            <summary>
            Gets or sets the global callback object which is used for passing to the client 
            the information about the progress of time consuming tasks and errors.
            </summary>
            <remarks>An instance of the class which implements ICallback interface should be passed.
            The class should be implemented by caller.</remarks>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="M:MapWinGIS.ILinePattern.InsertLine(System.Int32,System.UInt32,System.Single,MapWinGIS.tkDashStyle)">
            <summary>
            Inserts line definition at the specified position of the pattern.
            </summary>
            <param name="Index">The index to insert the new line segment at.</param>
            <param name="Color">The color of the line.</param>
            <param name="Width">The width of the line.</param>
            <param name="style">The style of the line.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ILinePattern.InsertMarker(System.Int32,MapWinGIS.tkDefaultPointSymbol)">
            <summary>
            Insert marker definition on the pattern at the specified position. 
            </summary>
            <param name="Index">The index to insert the new segment at.</param>
            <param name="Marker">The type of marker.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.ILinePattern.Key">
            <summary>
            Gets or sets a string value associated with the instance of the class. 
            It can store any information provided developer.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILinePattern.LastErrorCode">
            <summary>
            Retrieves the numeric code of the last error that took place in the class.
            </summary>
            <remarks>The usage of this property clears the error code.</remarks>
        </member>
        <member name="M:MapWinGIS.ILinePattern.RemoveItem(System.Int32)">
            <summary>
            Removes a segment stored at the specified position of the pattern.
            </summary>
            <param name="Index">The position to remove the segment at.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ILinePattern.Serialize">
            <summary>
            Saves the state of the object to the string.
            </summary>
            <returns>A string with serialized state.</returns>
        </member>
        <member name="P:MapWinGIS.ILinePattern.Transparency">
            <summary>
            Gets or sets the transparency of the line pattern. The value ranges from 0(opaque) to 255(transparent).
            </summary>
            <remarks>The default value is 255. The setting affects the drawing of both lines and markers.</remarks>
        </member>
        <member name="M:MapWinGIS.ILinePattern.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the text description of the specified error code.
            </summary>
            <param name="ErrorCode">The numeric error code retrieved by ShapeDrawingOptions.LastErrorCode property.</param>
            <returns>The description of the error.</returns>
        </member>
        <member name="M:MapWinGIS.ILinePattern.get_Line(System.Int32)">
            <summary>
            Gets the reference to the line segment stored at the specified position in the pattern.
            </summary>
            <param name="Index">The index of the segment.</param>
            <returns>The reference to the line segment or NULL reference on failure.</returns>
        </member>
        <member name="M:MapWinGIS.ILinePattern.set_Line(System.Int32,MapWinGIS.LineSegment)">
            <summary>
            Changes line segment at the specified position to the new one. 
            </summary>
            <param name="Index">The index of segment.</param>
            <param name="retval">The reference to the new segment.</param>
        </member>
        <member name="T:MapWinGIS.ILineSegment">
            <summary>
            Holds information about a single line or marker in the line pattern represented by %LinePattern class.
            </summary>
            Here is a diagram for the LineSegment class.
            \dot
            digraph segm_diagram {
            nodesep = 0.3;
            ranksep = 0.3;
            splines = ortho;
            
            node [shape= "polygon", peripheries = 3, fontname=Helvetica, fontsize=9, color = gray, style = filled, height = 0.2, width = 0.8];
            segm [ label="LineSegment" URL="\ref LineSegment"];
            
            node [color = tan peripheries = 1 height = 0.3, width = 1.0];
            ptrn [ label="LinePattern" URL="\ref LinePattern"];
            
            edge [ dir = "none", arrowhead="open", style = solid, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060", labeldistance = 0.6 ]
            ptrn -> segm [ URL="\ref LinePattern.get_Line()", tooltip = "Labels.get_Line()", headlabel = "   n"];
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.ILineSegment.Color">
            <summary>
            Gets or sets the color of the line or marker.
            </summary>
        </member>
        <member name="M:MapWinGIS.ILineSegment.Draw(System.IntPtr,System.Single,System.Single,System.Int32,System.Int32,System.UInt32,System.Byte)">
            <summary>
            Draws a line segment on the specified device context.
            </summary>
            <remarks>The method can be used to draw map legend.</remarks>
            <param name="hdc">The handle of the device context.</param>
            <param name="x">The x coordinate of the upper left corner of the drawing.</param>
            <param name="y">The y coordinate of the upper left corner of the drawing.</param>
            <param name="clipWidth">The width of the clipping rectangle.</param>
            <param name="clipHeight">The height of the clipping rectangle.</param>
            <param name="BackColor">The back color of the device context the drawing is performed at.
            The value should be specified to ensure correct blending when semi-transparent colors are used.</param>
            <param name="backAlpha">The alpha component of the back color of the device context the drawing is performed at.
            Specify a value of 255 for the background color to be fully opaque, and 0 for the background to be transparent.</param>
            <returns>True on successful drawing and false on failure.</returns>
        </member>
        <member name="M:MapWinGIS.ILineSegment.DrawVB(System.Int32,System.Single,System.Single,System.Int32,System.Int32,System.UInt32,System.Byte)">
            <summary>
            Draws a line segment on the specified device context.
            </summary>
            <remarks>The method can be used to draw map legend.</remarks>
            <param name="hdc">The handle of the device context.</param>
            <param name="x">The x coordinate of the upper left corner of the drawing.</param>
            <param name="y">The y coordinate of the upper left corner of the drawing.</param>
            <param name="clipWidth">The width of the clipping rectangle.</param>
            <param name="clipHeight">The height of the clipping rectangle.</param>
            <param name="BackColor">The back color of the device context the drawing is performed at.
            The value should be specified to ensure correct blending when semi-transparent colors are used.</param>
            <param name="backAlpha">The alpha component of the back color of the device context the drawing is performed at.
            Specify a value of 255 for the background color to be fully opaque, and 0 for the background to be transparent.</param>
            <returns>True on successful drawing and false on failure.</returns>
        </member>
        <member name="P:MapWinGIS.ILineSegment.LineStyle">
            <summary>
            Gets or sets the style of the line.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILineSegment.LineType">
            <summary>
            Gets or sets the type of the line segment, either line or marker.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILineSegment.LineWidth">
            <summary>
            Gets or sets the width of the line.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILineSegment.Marker">
            <summary>
            Gets or sets the marker for the line segment.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILineSegment.MarkerFlipFirst">
            <summary>
            Gets or sets the value which indicates whether the first marker in the line should be rotated by 180 degrees.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILineSegment.MarkerInterval">
            <summary>
            Gets or sets the interval between markers in pixels.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILineSegment.MarkerOffset">
            <summary>
            Gets or sets the offset for the marker. 
            </summary>
            <remarks>The first marker will be positioned with offset from 
            the beginning of polyline by this value.</remarks>
        </member>
        <member name="P:MapWinGIS.ILineSegment.MarkerOrientation">
            <summary>
            Gets or set the orientation of the marker symbols relative to the polyline.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILineSegment.MarkerOutlineColor">
            <summary>
            Gets or sets the outline color of the marker.
            </summary>
        </member>
        <member name="P:MapWinGIS.ILineSegment.MarkerSize">
            <summary>
            Gets or sets the size of marker in pixels.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:MapWinGIS.IMeasuring" -->
        <member name="P:MapWinGIS.IMeasuring.Area">
            <summary>
            Gets the measured area (in square meters if WGS84 compatible projection is set for map and in current square map units otherwise).
            </summary>
        </member>
        <member name="M:MapWinGIS.IMeasuring.Clear">
            <summary>
            Clears all measurements.
            </summary>
        </member>
        <member name="M:MapWinGIS.IMeasuring.Serialize">
            <summary>
            Saves the state of the class to the string
            </summary>
            <returns>A string with the state or an empty string on failure.</returns>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IMeasuring.Deserialize(System.String)">
            <summary>
            Restores the state of object from the string.
            </summary>
            <param name="state">A string generated by Measuring.Serialize() method</param>
            <returns>True on success.</returns>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IMeasuring.FinishMeasuring">
            <summary>
            Finishes measuring. The measured path won't be cleared from map immediately.
            </summary>
        </member>
        <member name="P:MapWinGIS.IMeasuring.IsStopped">
            <summary>
            Gets value indicating whether measurement was stopped.
            </summary>
        </member>
        <member name="P:MapWinGIS.IMeasuring.Length">
            <summary>
            Gets the length of measured path (in meters if WGS84 compatible projection is set for map and in current map units otherwise).
            </summary>
        </member>
        <member name="P:MapWinGIS.IMeasuring.MeasuringType">
            <summary>
            The type of measurement, either distance or area.
            </summary>
        </member>
        <member name="P:MapWinGIS.IMeasuring.Persistent">
            <summary>
            Gets or sets a value indicating whether the finished path will be preserved on map
            when map cursor changes to something other than cmMeasure. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IMeasuring.ShowBearing">
            <summary>
            Gets or sets a value indicating whether bearing of the line segments will be displayed.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.PointCount">
            <summary>
            Gets number of points in the measured path.
            </summary>
        </member>
        <member name="M:MapWinGIS.IMeasuring.UndoPoint">
            <summary>
            Undoes entering of the last point in the path.
            </summary>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IMeasuring.get_AreaWithClosingVertex(System.Double,System.Double)">
            <summary>
            Gets an area within the path polygon including an additional point (typically the current position of mouse cursor).
            </summary>
            <param name="lastPointProjX">X coordinate of the last point (in map coordinates).</param>
            <param name="lastPointProjY">Y coordinate of the last point (in map coordinates).</param>
            <returns>Area in square meters if WGS84 compatible projection is set for map and in current square map units otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IMeasuring.get_PointXY(System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets coordinates of specified point in the path.
            </summary>
            <param name="PointIndex">Index of a point.</param>
            <param name="x">X coordinate of the point in map coordinates.</param>
            <param name="y">Y coordinate of the point in map coordinates.</param>
            <returns>True on success.</returns>
        </member>
        <member name="P:MapWinGIS.IMeasuring.IsUsingEllipsoid">
            <summary>
            Gets a value indicating whether calculations are performed taking into account the shape of Earth 
            (when map projection is defined), or on 2D plane (Euclidean geometry).
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IMeasuring.GlobalCallback">
            <summary>
            Gets or sets a Callback object which handles progress and error messages.
            </summary>
            \new493 Added in version 4.9.3
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.IMeasuring.IsEmpty">
            <summary>
            Returns true if measured path contains at least one point.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.BearingType">
            <summary>
            Gets or sets type of the bearing to be display for line segments.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.ShowLength">
            <summary>
            Gets or sets a value indicating whether length of the line segments will be displayed.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.LengthUnits">
            <summary>
            Gets or sets type of the length units to be displayed.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.AreaUnits">
            <summary>
            Gets or sets the area units to be displayed.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.AngleFormat">
            <summary>
            Gets or sets angle format to be used to display bearing.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.AnglePrecision">
            <summary>
            Gets or sets the number of decimal degrees to be used to display bearing.
            </summary>
            <remarks>This setting is not used when AngleFormat is set to minutes or seconds.</remarks>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.AreaPrecision">
            <summary>
            Gets or sets the number of decimal degrees to be used to display area.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.LengthPrecision">
            <summary>
            Gets or sets the number of decimal degrees to be used to display length.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.PointsVisible">
            <summary>
            Gets or sets a value indicating whether vertices of the measured path will be visible.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.LineColor">
            <summary>
            Gets or sets line color to display measured path.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.FillColor">
            <summary>
            Gets or sets fill color for polygon display.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.FillTransparency">
            <summary>
            Gets or sets fill transparency for polygon display.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.LineWidth">
            <summary>
            Gets or sets line width to display measured path.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.LineStyle">
            <summary>
            Gets or sets line style to display measured path.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.PointLabelsVisible">
            <summary>
            Gets or sets a value indicating whether labels with indices of points will be visible near the vertices.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.ShowTotalLength">
            <summary>
            Gets or sets a value indicating whether accumulated length will be shown in brackets for each line segment.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.UndoButton">
            <summary>
            Gets or sets the type of user input to be used to undo the last point of the measured path.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.Key">
            <summary>
            A text string associated with object. Any value can be stored by developer in this property.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IMeasuring.LastErrorCode">
            <summary>
            Gets the code of last error which took place inside this object.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IMeasuring.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the specific error code.
            </summary>
            <param name="ErrorCode">The error code returned by LastErrorCode property.</param>
            <returns>String with the description.</returns>
            \new493 Added in version 4.9.3
        </member>
        <member name="T:MapWinGIS.IPoint">
            <summary>
            A point object represents a point with x, y, Z, and M values. Shapes created by adding point objects to the shape. 
            </summary>
            Here is a diagram for the Point class.
            \dot
            digraph point_diagram {
            nodesep = 0.3;
            ranksep = 0.3;
            splines = ortho;
            
            node [shape= "polygon", peripheries = 3, fontname=Helvetica, fontsize=9, color = gray, style = filled, height = 0.2, width = 0.8];
            pnt [ label="Point" URL="\ref Point"];
            
            node [color = tan peripheries = 1 height = 0.3, width = 1.0];
            shp [ label="Shape" URL="\ref Shape"];
            
            edge [ dir = "none", style = solid, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060", labeldistance = 0.6 ]
            shp -> pnt [ URL="\ref Shape.get_Point()", tooltip = "Labels.get_Point()", headlabel = "   n"];
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
        </member>
        <member name="M:MapWinGIS.IPoint.Clone">
            <summary>
            Creates an exact copy of the point.
            </summary>
            <returns>The new point.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IPoint.GlobalCallback">
            <summary>
            The global callback is the interface used by MapWinGIS to pass progress and error events to interested applications.
            </summary>
            \deprecated v 4.9.3 %Point class doesn't define any callback or error messages.
        </member>
        <member name="P:MapWinGIS.IPoint.Key">
            <summary>
            The key may be used by the programmer to store any string data associated with the object.
            </summary>
            \deprecated v 4.9.3 Key string is no longer stored for performance reasons and to spare RAM.
        </member>
        <member name="P:MapWinGIS.IPoint.LastErrorCode">
            <summary>
            Retrieves the last error generated in the object. 
            </summary>
            \deprecated v 4.9.3 %Point class doesn't define any error messages.
        </member>
        <member name="P:MapWinGIS.IPoint.M">
            <summary>
            Gets or sets the measure value of this point. Measures only apply to shapefiles with measure data.
            </summary>
        </member>
        <member name="P:MapWinGIS.IPoint.Z">
            <summary>
            Gets or sets the Z value of this point. 
            </summary>
        </member>
        <member name="M:MapWinGIS.IPoint.get_ErrorMsg(System.Int32)">
            <summary>
            Retrieves the error message associated with the specified error code. 
            </summary>
            <param name="ErrorCode">The error code for which the error message is required.</param>
            <returns>The error message description for the specified error code.</returns>
            \deprecated v 4.9.3 %Point class doesn't define any error messages.
        </member>
        <member name="P:MapWinGIS.IPoint.x">
            <summary>
            Gets or sets the x value of the point. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IPoint.y">
            <summary>
            Gets or sets the y value of the point. 
            </summary>
        </member>
        <member name="M:MapWinGIS.IPoint.Set(System.Double,System.Double,System.Double)">
            <summary>
            Sets the X, Y, and Z values of this point.
            </summary>
            <param name="newX">The new X value.</param>
            <param name="newY">The new Y value.</param>
            <param name="newZ">Optional. The new Z value. Defaults to 0.0 if not specified.</param>
        </member>
        <member name="T:MapWinGIS.IShape">
            <summary>
            A shape object represents a geometric shape which can be added to a shapefile which is displayed in the map. 
            </summary>
            Here is a diagram for the Shape class.
            \dot
            digraph shape_diagram {
            nodesep = 0.3;
            ranksep = 0.3;
            splines = ortho;
            
            node [shape= "polygon", peripheries = 3, fontname=Helvetica, fontsize=9, color = gray, style = filled, height = 0.2, width = 0.8];
            pnt [ label="Point" URL="\ref Point"];
            shp [ label="Shape" URL="\ref Shape"];
            
            node [color = tan peripheries = 1 height = 0.3, width = 1.0];
            sf [ label="Shapefile" URL="\ref Shapefile"];
            
            edge [ dir = none, style = solid, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060", labeldistance = 0.6 ]
            shp -> pnt [ URL="\ref Shape.get_Point()", tooltip = "Table.get_Point()", headlabel = "   n"];
            sf -> shp [ URL="\ref Shapefile.get_Shape()", tooltip = "Shapefile.get_Shape", headlabel = "   n"];
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
        </member>
        <member name="P:MapWinGIS.IShape.Area">
            <summary>
            Calculates the area of the shape. For non-polygon shapes this property will return 0.0.
            </summary>
            <remarks>The area will always be returned in current map units.
            No corrections are made to take into account the curved shape of Earth.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.Boundary">
            <summary>
            Generates a shape which represents a boundary of the current shape. 
            </summary>
            <returns>The reference to the resulting shape or NULL on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.Buffer(System.Double,System.Int32)">
            <summary>
            Builds a buffer of the specified distance around the shape.
            </summary>
            <param name="Distance">The buffer distance in map units.</param>
            <param name="nQuadSegments">The number of segments use to approximate a circle buffer.</param>
            <returns>The reference to the resulting shape which holds the buffer or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShape.Center">
            <summary>
            Calculates a center of the shape's bounding box.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShape.Centroid">
            <summary>
            Calculates a centroid (center of mass) of the shape.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.Clip(MapWinGIS.Shape,MapWinGIS.tkClipOperation)">
            <summary>
            Performs clipping operation with 2 shapes.
            </summary>
            <remarks>The available operation are:
            - difference;
            - intersection;
            - symmetrical difference;
            - union;
            . 
            Note that clClip operation will yield the same result as intersection.
            </remarks>
            <param name="Shape">The second shape for the operation.</param>
            <param name="Operation">The operation to perform.</param>
            <returns>The reference to the resulting shape or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.Clone">
            <summary>
            Creates a deep copy of this object with the same type, parts and points.
            </summary>
            <returns>The copy of the shape.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.Contains(MapWinGIS.Shape)">
            <summary>
            Tests a "contains" relation between 2 shapes.
            </summary>
            <param name="Shape">The second shape.</param>
            <returns>True if this shape contains the second shape and false if it is not.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.ConvexHull">
            <summary>
            Builds a convex hull around the current shape.
            </summary>
            <returns>A new shape with convex hull of the current shape or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.Create(MapWinGIS.ShpfileType)">
            <summary>
            Creates a new shape of the specified type. 
            </summary>
            <param name="ShpType">The type of the shape to be created.</param>
            <returns>A boolean value representing the success or failure of creating the new shape.</returns>
        </member>
        <member name="M:MapWinGIS.IShape.CreateFromString(System.String)">
            <summary>
            Initializes the Shape object and fills it with the geometry defined by the input string. </summary>
            <remarks>The input string should be in the 
            serialized string format as produced by the function Shape.SerializeToString. </remarks>
            <param name="Serialized">The serialized string to load.</param>
            <returns>A boolean value representing the success or failure of loading the shape.</returns>
        </member>
        <member name="M:MapWinGIS.IShape.Crosses(MapWinGIS.Shape)">
            <summary>
            Tests a "crosses" relation between 2 shapes.
            </summary>
            <param name="Shape">The second shape.</param>
            <returns>True if this shape crosses the second shape and false if it is not.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.DeletePart(System.Int32)">
            <summary>
            Deletes a part from a shape. 
            </summary>
            <param name="PartIndex">The index of the part to be deleted.</param>
            <returns>A boolean value representing the success or failure of deleting the part.</returns>
        </member>
        <member name="M:MapWinGIS.IShape.DeletePoint(System.Int32)">
            <summary>
            Deletes a point in the shape.
            </summary>
            <param name="PointIndex">The index of the point in the shape to be deleted.</param>
            <returns>A boolean value representing the success or failure of deleting the point in the shape. </returns>
        </member>
        <member name="M:MapWinGIS.IShape.Disjoint(MapWinGIS.Shape)">
            <summary>
            Tests a "disjoint" relation between 2 shapes.
            </summary>
            <param name="Shape">The second shape.</param>
            <returns>True if this shape is disjoint from the second shape and false if it is not.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.Distance(MapWinGIS.Shape)">
            <summary>
            Calculates the distance between 2 shapes.
            </summary>
            <param name="Shape">The second shape.</param>
            <returns>The calculated distance.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.Equals(MapWinGIS.Shape)">
            <summary>
            Tests an "equals" relation between 2 shapes.
            </summary>
            <param name="Shape">The second shape.</param>
            <returns>True if this shape is equal to the second shape and false if it is not.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.Explode(System.Object@)">
            <summary>
            Splits multipart shape into simple shapes.
            </summary>
            <remarks>Holes of the polygon will not be considered as separate shapes. However
            if a polygon holds several not nested rings they will be passed to output as individual polygons.</remarks>
            <param name="Results">The array of Shape type with the resulting shapes.</param>
            <returns>The on success and false otherwise.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.ExportToBinary(System.Object@)">
            <summary>
            Returns binary representation of the shape data. 
            </summary>
            <remarks>The binary data will have the same format as disk representation of the shapefile.</remarks>
            <param name="bytesArray">The byte array with shape data.</param>
            <returns>True on success and false otherwise.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShape.Extents">
            <summary>
            Gets the extents of the shape.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShape.FixUp(MapWinGIS.Shape@)">
            <summary>
            Fixes the shape in case it is not valid.
            </summary>
            <remarks>Converts the data to GEOS geometry and builds a small buffer. 
            Call Shape.IsValid to find out the invalid shapes.</remarks>
            <param name="retval">The fixed shape.</param>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.FixUp2(MapWinGIS.tkUnitsOfMeasure)">
            <summary>
            Fixes the shape in case it is not valid.
            </summary>
            <param name="units">The units of measure of the coordinate system.</param>
            <returns>The fixed shape.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IShape.GetIntersection(MapWinGIS.Shape,System.Object@)">
            <summary>
            Calculates the intersection of 2 shapes.
            </summary>
            <remarks>In comparison with Shape.Clip this function returns all the results of intersection
            even if they have different shape type. For example the intersection of 2 polygons can hold:
            new polygons, polylines and points simultaneously.</remarks>
            <param name="Shape">The second shape.</param>
            <param name="Results">The array of Shape type with the results of intersection.</param>
            <returns>True in case at least one shape is returned and false otherwise.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShape.GlobalCallback">
            <summary>
            Gets or sets a callback object for reporting about the errors.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="M:MapWinGIS.IShape.ImportFromBinary(System.Object)">
            <summary>
            Restores the state of the shape from binary representation obtained by Shape.ExportToBinary.
            </summary>
            <param name="bytesArray">The byte array with the state of shape.</param>
            <returns>True on success and false otherwise.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.InsertPart(System.Int32,System.Int32@)">
            <summary>
            Inserts a part into the shape. 
            </summary>
            <remarks>
            Parts are used to create polygons with holes. Parts with points ordered in a clockwise direction 
            are filled. Parts with points ordered in a counter-clockwise direction are cut out. Only clockwise parts should be used to 
            define the outer-most regions of a shape.
            </remarks>
            <param name="PointIndex">The index of the first point in the part to be inserted.</param>
            <param name="PartIndex">The part index desired. This value may be modified if it is not possible to use the desired part index.</param>
            <returns>A boolean value representing the success or failure of inserting the part into the shape.</returns>
        </member>
        <member name="M:MapWinGIS.IShape.InsertPoint(MapWinGIS.Point,System.Int32@)">
            <summary>
            Inserts the specified point object into the shape using the desired point index if possible.
            </summary>
            <param name="NewPoint">The point object to be inserted into the shape. </param>
            <param name="PointIndex">Reference parameter. The index where the point will be placed if possible. If the desired index 
            cannot be used, the actual index will be returned.</param>
            <returns>A boolean value representing the success or failure of inserting the point into the shape.</returns>
        </member>
        <member name="P:MapWinGIS.IShape.InteriorPoint">
            <summary>
            Calculates the interior point of the shape. Is applicable for polygon shapes only.
            </summary>
            The algorithm works as following:
            - a line is defined which crosses the bounding box of the polygon horizontally in its center;
            - the intersection of this line and polygon is calculated which can be represented by single segment or by a number of segments;
            - the longest segment is then chosen and the point on it's center is returned.
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.Intersects(MapWinGIS.Shape)">
            <summary>
            Tests an "intersects" relation between 2 shapes.
            </summary>
            <param name="Shape">The second shape.</param>
            <returns>True if this shape intersects the second shape and false if it is not.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShape.IsValid">
            <summary>
            Returns a boolean value which indicates whether a shape is valid. 
            </summary>
            <remarks>
            Shapes is considered to be valid when it meets specific topological rules for particular shape type.
            </remarks>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShape.IsValidReason">
            <summary>
            Returns the string with the description of reason why shape was considered invalid.
            </summary>
            \see Shape.IsValid.
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShape.Key">
            <summary>
            The key may be used by the programmer to store any string data associated with the object. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IShape.LastErrorCode">
            <summary>
            Retrieves the last error generated in the object. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IShape.Length">
            <summary>
            Calculates the length of polyline shape.
            </summary>
            <remarks>The length will always be returned in current map units.
            No corrections are made to take into account the curved shape of the Earth.</remarks>
        </member>
        <member name="P:MapWinGIS.IShape.NumParts">
            <summary>
            Gets the number of parts contained in the shape.
            </summary>
            <remarks>A polygon shape may have several parts. An example of this would be a 
            doughnut shape. The outermost perimeter would be one part, and the hole cut out of the center making up the innermost 
            perimeter would be the second part. The outermost perimeter would be specified by a series of points arranged in clockwise 
            order, meaning that this part will be filled. The innermost perimeter would be specified by a series of points arranged in 
            counter-clockwise order, meaning that this part will not be filled. </remarks>
        </member>
        <member name="M:MapWinGIS.IShape.Overlaps(MapWinGIS.Shape)">
            <summary>
            Tests an "overlaps" relation between 2 shapes.
            </summary>
            <param name="Shape">The second shape.</param>
            <returns>True if this shape overlaps the second shape and false if it is not.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShape.Perimeter">
            <summary>
            Calculates the perimeter of shape. Is applicable for polygon shapes only.
            </summary>
            <remarks>The length will always be returned in current map units.
            No corrections are made to take into account the curved shape of the Earth.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.PointInThisPoly(MapWinGIS.Point)">
            <summary>
            Performs a test to find out whether a given point lies within the polygon.
            </summary>
            <param name="pt">The point to test.</param>
            <returns>True if points lies within polygon and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShape.Relates(MapWinGIS.Shape,MapWinGIS.tkSpatialRelation)">
            <summary>
            Tests the specified relation between 2 shapes. 
            </summary>
            <remarks>This method works the same as individual overloads like Shape.Intersects, Shape.Overlaps, etc.</remarks>
            <param name="Shape">The second shape.</param>
            <param name="Relation">The relation to test.</param>
            <returns>True in case this relation is actually takes place and false if it is not.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.ReversePointsOrder(System.Int32)">
            <summary>
            Changes the order of points within shape part to the opposite.
            </summary>
            <remarks>The property can be useful to to ensure proper topology for polygons.
            The points of outer ring of polygon must have clockwise order, while the points of its holes
            must be specified in counter-clockwise order.</remarks>
            <param name="PartIndex">The index of part to reverse the order of points.</param>
            <returns>True on success and false otherwise.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.SerializeToString">
            <summary>
            Provides a string representing the shape's geometry. 
            </summary>
            <remarks>The string will be in the serialized string format and can be reloaded with Shape.CreateFromString. </remarks>
            <returns>A string representing the shape geometry.</returns>
        </member>
        <member name="P:MapWinGIS.IShape.ShapeType">
            <summary>
            Gets or sets the type of the shape.
            </summary>
            <remarks>The shape's type must match the type of the shapefile the shape is to be added to 
            except for shapes of type SHP_NULLSHAPE. </remarks>
        </member>
        <member name="M:MapWinGIS.IShape.Touches(MapWinGIS.Shape)">
            <summary>
            Tests a "touches" relation between 2 shapes.
            </summary>
            <param name="Shape">The second shape.</param>
            <returns>True if this shape touches the second shape and false if it is not.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.Within(MapWinGIS.Shape)">
            <summary>
            Tests a "within" relation between 2 shapes.
            </summary>
            <param name="Shape">The second shape.</param>
            <returns>True if this shape lies within the second shape and false if it is not.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.get_EndOfPart(System.Int32)">
            <summary>
            Returns the index of the last point in the part.
            </summary>
            <param name="PartIndex">The index of the part.</param>
            <returns>The index of the point.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.get_ErrorMsg(System.Int32)">
            <summary>
            Retrieves the error message associated with the specified error code. 
            </summary>
            <param name="ErrorCode">The error code for which the error message is required.</param>
            <returns>The error message description for the specified error code.</returns>
        </member>
        <member name="M:MapWinGIS.IShape.get_Part(System.Int32)">
            <summary>
            Gets or sets the first point index in the specified part. 
            </summary>
            <param name="PartIndex">The index of the part for which the first point index is required.</param>
            <returns>The index of the first point in the specified part.</returns>
        </member>
        <member name="M:MapWinGIS.IShape.get_PartAsShape(System.Int32)">
            <summary>
            Returns part of the shape as a new shape.
            </summary>
            <remarks>The initial shape and the returned one doesn't shape any common memory.</remarks>
            <param name="PartIndex">The index of part to return.</param>
            <returns>The reference to the new shape and NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.get_PartIsClockWise(System.Int32)">
            <summary>
            Returns a boolean value which indicates whether points of the shape part are placed in the clockwise order.
            </summary>
            <param name="PartIndex">The index of part.</param>
            <returns>True for the clockwise order, and false for counter-clockwise.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.get_Point(System.Int32)">
            <summary>
            Gets or sets the specified point in the shape. 
            </summary>
            <param name="PointIndex">The index of the point which is to be accessed in the shape.</param>
            <returns>The specified point in the shape.</returns>
        </member>
        <member name="M:MapWinGIS.IShape.get_XY(System.Int32,System.Double@,System.Double@)">
            <summary>
            Gets the coordinates of the specified point.
            </summary>
            <remarks>It's highly recommended to use this property rather than Shape.get_Point,
            for considerable performance boost when Shapefile.FastMode is set to true.</remarks>
            <param name="PointIndex">The index of point.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns>True on successful retrieval and false on wrong index of point.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShape.numPoints">
            <summary>
            Gets the number of points contained in the shape. 
            </summary>
            <remarks>There is a confusion with name casing for this property. 
            It's actually spelled 'get_NumPoints' in the source code. 
            However because of the known bug in PIA generation process the property 
            ended up spelled 'get_numPoints' in earlier version of PIAs. After some hesitation we decided to keep it that way. 
            See description of the bug here: http://stackoverflow.com/questions/3179676/c-exposed-property-for-com-in-idl-is-showing-as-lower-case-all-of-a-sudden </remarks>
        </member>
        <member name="M:MapWinGIS.IShape.put_XY(System.Int32,System.Double,System.Double)">
            <summary>
            Sets the coordinates of the specified point.
            </summary>
            <remarks>It's highly recommended to use this property rather than Shape.get_Point,
            for considerable performance boost when Shapefile.FastMode is set to true.</remarks>
            <param name="PointIndex">The index of point.</param>
            <param name="x">The x coordinate.</param>
            <param name="y">The y coordinate.</param>
            <returns>True on success and false on the invalid index.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShape.set_Part(System.Int32,System.Int32)">
            <summary>
            Sets the index of the first point in part.
            </summary>
            <param name="PartIndex">The index of part.</param>
            <param name="pVal">The index of point.</param>
        </member>
        <member name="M:MapWinGIS.IShape.set_Point(System.Int32,MapWinGIS.Point)">
            <summary>
            Replaces the point with the specified index with new one.
            </summary>
            <param name="PointIndex">The index of point to replace.</param>
            <param name="pVal">The new point.</param>
        </member>
        <member name="M:MapWinGIS.IShape.AddPoint(System.Double,System.Double)">
            <summary>
            Adds a point to the shape.
            </summary>
            <param name="x">The x coordinate of the point.</param>
            <param name="y">The y coordinate of the point.</param>
            <returns>The index of the new point.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IShape.ClosestPoints(MapWinGIS.Shape)">
            <summary>
            Calculates closest points of the 2 shapes
            </summary>
            <param name="shape2">Second shape</param>
            <returns>Polyline shape with 2 points, the first one - closest point of this shape, the second one - closest point of parameter shape.</returns>
            <remarks>Uses GEOS implementation, works for all shape types. For any point lying within polygon the closest point between it and polygon will be the point itself.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShape.ImportFromWKT(System.String)">
            <summary>
            Imports shape data from WKT format.
            </summary>
            <param name="Serialized">Shape data in WKT format.</param>
            <returns>True on success and false otherwise.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShape.ExportToWKT">
            <summary>
            Imports shape data from WKT format.
            </summary>
            <returns>String in WKT format with shape data.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IShape.CopyFrom(MapWinGIS.Shape)">
            <summary>
            Creates a deep copy of shape to another instance, including points and parts.
            </summary>
            <param name="sourceShape">Source shape to copy from.</param>
            <returns>True on success.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShape.get_M(System.Int32,System.Double@)">
            <summary>
            Gets M value for specified point.
            </summary>
            <param name="PointIndex">Index of point.</param>
            <param name="M">M value.</param>
            <returns>True in case there are M values for current shape type.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShape.get_Z(System.Int32,System.Double@)">
            <summary>
            Gets M value for specified point.
            </summary>
            <param name="PointIndex">Index of point.</param>
            <param name="Z">Z value.</param>
            <returns>True in case there are Z values for current shape type.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShape.put_M(System.Int32,System.Double)">
            <summary>
            Puts M value for specified point.
            </summary>
            <param name="PointIndex">Index of point.</param>
            <param name="M">M value.</param>
            <returns>True on success.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShape.put_Z(System.Int32,System.Double)">
            <summary>
            Puts Z value for specified point.
            </summary>
            <param name="PointIndex">Index of point.</param>
            <param name="Z">Z value.</param>
            <returns>True on success.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShape.BufferWithParams(System.Double,System.Int32,System.Boolean,MapWinGIS.tkBufferCap,MapWinGIS.tkBufferJoin,System.Double)">
            <summary>
            Returns a new shape which constitutes a buffer around original one.
            </summary>
            <param name="Distance">Buffer width (same units as shape coordinates are set with).</param>
            <param name="numSegments">Number of segments to approximate curves.</param>
            <param name="singleSided">True if buffer if single sided buffer is needed (works for polylines only).</param>
            <param name="capStyle">Type of caps.</param>
            <param name="joinStyle">Type of joins.</param>
            <param name="mitreLimit">Mitre limit.</param>
            <returns>New buffered shape on success or null on failure.</returns>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IShape.Move(System.Double,System.Double)">
            <summary>
            Moves shape at specified offset.
            </summary>
            <param name="xOffset">X component of offset.</param>
            <param name="yOffset">Y component of offset.</param>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IShape.Rotate(System.Double,System.Double,System.Double)">
            <summary>
            Rotates shape around specified point.
            </summary>
            <param name="originX">X coordinate to rotate shape around.</param>
            <param name="originY">Y coordinate to rotate shape around.</param>
            <param name="angle">Angle in degrees.</param>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IShape.SplitByPolyline(MapWinGIS.Shape,System.Object@)">
            <summary>
            Splits shape with a provided polyline.
            </summary>
            <param name="polyline">Polyline shape to split with.</param>
            <param name="Results">An array of Shape type.</param>
            <returns>True on success.</returns>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IShape.Clear">
            <summary>
            Removes all the points and parts.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IShape.ShapeType2D">
            <summary>
            Gets "flattened" shape type, i.e. Z and M components will be ignored.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShape.IsEmpty">
            <summary>
            Returns true if the shape doesn't have any points.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <!-- Badly formed XML comment ignored for member "T:MapWinGIS.IShapeDrawingOptions" -->
        <member name="M:MapWinGIS.IShapeDrawingOptions.Clone">
            <summary>
            Creates a new instance of ShapeDrawingOptions class by copying all the properties.
            </summary>
            <returns>The reference to the new instance of the ShapeDrawingOptions class or NULL reference on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapeDrawingOptions.Deserialize(System.String)">
            <summary>
            Restores the state of object from the string.
            </summary>
            <param name="newVal">A string generated by ShapeDrawingOptions.Serialize() method.</param>
        </member>
        <member name="M:MapWinGIS.IShapeDrawingOptions.DrawLine(System.IntPtr,System.Single,System.Single,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.UInt32,System.Byte)">
            <summary>
            Draws a line using the stored options on specified device context.
            </summary>
            <remarks>The method can be used to draw map legend.</remarks>
            <param name="hdc">The handle of the device context. Can be obtained with .NET Graphics.GetHDC() method.</param>
            <param name="x">The x coordinate of the upper left corner of the drawing.</param>
            <param name="y">The y coordinate of the upper left corner of the drawing. </param>
            <param name="Width">The width of the drawing.</param>
            <param name="Height">The height of the drawing.</param>
            <param name="drawVertices">A value which indicates whether or not vertices of the line will be drawn.</param>
            <param name="clipWidth">The width of the clipping rectangle.</param>
            <param name="clipHeight">The height of the clipping rectangle.</param>
            <param name="BackColor">The back color of the device context the drawing is performed at.
            The value should be specified to ensure correct blending when semi-transparent colors are used.</param>
            <param name="backAlpha">The alpha component of the back color of the device context the drawing is performed at.
            Specify a value of 255 for the background color to be fully opaque, and 0 for the background to be transparent.</param>
            <returns>True on success and false otherwise.</returns>
            \new495 Optional backAlpha parameter added in version 4.9.5
        </member>
        <member name="M:MapWinGIS.IShapeDrawingOptions.DrawLineVB(System.Int32,System.Single,System.Single,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.UInt32,System.Byte)">
            <summary>
            Draws a line using the stored options on the specified device context.
            </summary>
            <remarks>The method can be used to draw map legend.</remarks>
            <param name="hdc">The handle of the device context.</param>
            <param name="x">The x coordinate of the upper left corner of the drawing.</param>
            <param name="y">The y coordinate of the upper left corner of the drawing. </param>
            <param name="Width">The width of the drawing.</param>
            <param name="Height">The height of the drawing.</param>
            <param name="drawVertices">A value which indicates whether or not vertices of the line will be drawn.</param>
            <param name="clipWidth">The width of the clipping rectangle.</param>
            <param name="clipHeight">The height of the clipping rectangle.</param>
            <param name="BackColor">The back color of the device context the drawing is performed at.
            The value should be specified to ensure correct blending when semi-transparent colors are used.</param>
            <param name="backAlpha">The alpha component of the back color of the device context the drawing is performed at.
            Specify a value of 255 for the background color to be fully opaque, and 0 for the background to be transparent.</param>
            <returns>True on success and false otherwise.</returns>
            \new495 Optional backAlpha parameter added in version 4.9.5
        </member>
        <member name="M:MapWinGIS.IShapeDrawingOptions.DrawPoint(System.IntPtr,System.Single,System.Single,System.Int32,System.Int32,System.UInt32,System.Byte)">
            <summary>
            Draws a point symbol using the stored options on the specified device context.
            </summary>
            <remarks>The method can be used to draw map legend.</remarks>
            <param name="hdc">The handle of the device context. Can be obtained with .NET Graphics.GetHDC() method.</param>
            <param name="x">The x coordinate of the upper left corner of the drawing.</param>
            <param name="y">The y coordinate of the upper left corner of the drawing.</param>
            <param name="clipWidth">The width of the clipping rectangle.</param>
            <param name="clipHeight">The height of the clipping rectangle.</param>
            <param name="BackColor">The back color of the device context the drawing is performed at.
            The value should be specified to ensure correct blending when semi-transparent colors are used.</param>
            <param name="backAlpha">The alpha component of the back color of the device context the drawing is performed at.
            Specify a value of 255 for the background color to be fully opaque, and 0 for the background to be transparent.</param>
            <returns>True on success and false otherwise.</returns>
            \new495 Optional backAlpha parameter added in version 4.9.5
        </member>
        <member name="M:MapWinGIS.IShapeDrawingOptions.DrawPointVB(System.Int32,System.Single,System.Single,System.Int32,System.Int32,System.UInt32,System.Byte)">
            <summary>
            Draws a point symbol using the stored options on the specified device context.
            </summary>
            <remarks>The method can be used to draw map legend.</remarks>
            <param name="hdc">The handle of the device context.</param>
            <param name="x">The x coordinate of the upper left corner of the drawing.</param>
            <param name="y">The y coordinate of the upper left corner of the drawing.</param>
            <param name="clipWidth">The width of the clipping rectangle.</param>
            <param name="clipHeight">The height of the clipping rectangle.</param>
            <param name="BackColor">The back color of the device context the drawing is performed at.
            The value should be specified to ensure correct blending when semi-transparent colors are used.</param>
            <param name="backAlpha">The alpha component of the back color of the device context the drawing is performed at.
            Specify a value of 255 for the background color to be fully opaque, and 0 for the background to be transparent.</param>
            <returns>True on success and false otherwise.</returns>
            \new495 Optional backAlpha parameter added in version 4.9.5
        </member>
        <member name="M:MapWinGIS.IShapeDrawingOptions.DrawRectangle(System.IntPtr,System.Single,System.Single,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.UInt32,System.Byte)">
            <summary>
            Draws a rectangle using the stored options on the specified device context.
            </summary>
            <remarks>The method can be used to draw map legend.</remarks>
            <param name="hdc">The handle of the device context. Can be obtained with .NET Graphics.GetHDC() method.</param>
            <param name="x">The x coordinate of the upper left corner of the drawing.</param>
            <param name="y">The y coordinate of the upper left corner of the drawing.</param>
            <param name="Width">The width of the drawing.</param>
            <param name="Height">The height of the drawing.</param>
            <param name="drawVertices">A value which indicates whether or not vertices of the rectangle will be drawn.</param>
            <param name="clipWidth">The width of the clipping rectangle.</param>
            <param name="clipHeight">The height of the clipping rectangle.</param>
            <param name="BackColor">The back color of the device context the drawing is performed at.
            The value should be specified to ensure correct blending when semi-transparent colors are used.</param>
            <param name="backAlpha">The alpha component of the back color of the device context the drawing is performed at.
            Specify a value of 255 for the background color to be fully opaque, and 0 for the background to be transparent.</param>
            <returns>True on success and false otherwise.</returns>
            \new495 Optional backAlpha parameter added in version 4.9.5
        </member>
        <member name="M:MapWinGIS.IShapeDrawingOptions.DrawRectangleVB(System.Int32,System.Single,System.Single,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.UInt32,System.Byte)">
            <summary>
            Draws a rectangle using the stored options on the specified device context.
            </summary>
            <remarks>The method can be used to draw map legend.</remarks>
            <param name="hdc">The handle of the device context. Can be obtained with .NET Graphics.GetHDC() method.</param>
            <param name="x">The x coordinate of the upper left corner of the drawing.</param>
            <param name="y">The y coordinate of the upper left corner of the drawing.</param>
            <param name="Width">The width of the drawing.</param>
            <param name="Height">The height of the drawing.</param>
            <param name="drawVertices">A value which indicates whether or not vertices of the rectangle will be drawn.</param>
            <param name="clipWidth">The width of the clipping rectangle.</param>
            <param name="clipHeight">The height of the clipping rectangle.</param>
            <param name="BackColor">The back color of the device context the drawing is performed at.
            The value should be specified to ensure correct blending when semi-transparent colors are used.</param>
            <param name="backAlpha">The alpha component of the back color of the device context the drawing is performed at.
            Specify a value of 255 for the background color to be fully opaque, and 0 for the background to be transparent.</param>
            <returns>True on success and false otherwise.</returns>
            \new495 Optional backAlpha parameter added in version 4.9.5
        </member>
        <member name="M:MapWinGIS.IShapeDrawingOptions.DrawShape(System.IntPtr,System.Single,System.Single,MapWinGIS.Shape,System.Boolean,System.Int32,System.Int32,System.UInt32,System.Byte)">
            <summary>
            Draws a shape using the stored options on the specified device context.
            </summary>
            <remarks>The method can be used to draw map legend.</remarks>
            <param name="hdc">The handle of the device context. Can be obtained with .NET Graphics.GetHDC() method.</param>
            <param name="x">The x coordinate of the upper left corner of the drawing.</param>
            <param name="y">The y coordinate of the upper left corner of the drawing.</param>
            <param name="Shape">A shape to draw. Point, polyline and polygon shapes are supported.</param>
            <param name="drawVertices">A value which indicates whether or not vertices of the line will be drawn. </param>
            <param name="clipWidth">The width of the clipping rectangle.</param>
            <param name="clipHeight">The height of the clipping rectangle.</param>
            <param name="BackColor">The back color of the device context the drawing is performed at.
            The value should be specified to ensure correct blending when semi-transparent colors are used.</param>
            <param name="backAlpha">The alpha component of the back color of the device context the drawing is performed at.
            Specify a value of 255 for the background color to be fully opaque, and 0 for the background to be transparent.</param>
            <returns>True on success and false otherwise.</returns>
            \new495 Optional backAlpha parameter added in version 4.9.5
        </member>
        <member name="M:MapWinGIS.IShapeDrawingOptions.DrawShapeVB(System.Int32,System.Single,System.Single,MapWinGIS.Shape,System.Boolean,System.Int32,System.Int32,System.UInt32,System.Byte)">
            <summary>
            Draws a shape using the stored options on the specified device context.
            </summary>
            <remarks>The method can be used to draw map legend.</remarks>
            <param name="hdc">The handle of the device context.</param>
            <param name="x">The x coordinate of the upper left corner of the drawing.</param>
            <param name="y">The y coordinate of the upper left corner of the drawing.</param>
            <param name="Shape">A shape to draw. Point, polyline and polygon shapes are supported.</param>
            <param name="drawVertices">A value which indicates whether or not vertices of the line will be drawn. </param>
            <param name="clipWidth">The width of the clipping rectangle.</param>
            <param name="clipHeight">The height of the clipping rectangle.</param>
            <param name="BackColor">The back color of the device context the drawing is performed at.
            The value should be specified to ensure correct blending when semi-transparent colors are used.</param>
            <param name="backAlpha">The alpha component of the back color of the device context the drawing is performed at.
            Specify a value of 255 for the background color to be fully opaque, and 0 for the background to be transparent.</param>
            <returns>True on success and false otherwise.</returns>
            \new495 Optional backAlpha parameter added in version 4.9.5
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.DrawingMode">
            <summary>
            The graphical mode to be used to render symbology.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.FillBgColor">
            <summary>
            Gets or sets the background color of the polygon fill. 
            </summary>
            <remarks>It is used for polygon shapes when hatch fill is chosen.</remarks>
            \see FillType
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.FillBgTransparent">
            <summary>
            Gets or sets the value which indicates whether a background will be drawn when ShapeDrawingOptions.FillType is set to ftHatch.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.FillColor">
            <summary>
            Gets or sets the fill color of the shape.
            </summary>
            <remarks>The color is used for point and polygon shapes when ShapeDrawingOptions.FillType is equal to ftSimple or ftHatch,
            or the gradient starting color is ShapeDrawingOptions.FillType is equal to ftGradient.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.FillColor2">
            <summary>
            Gets or sets the end color of the gradient fill.
            </summary>
            <remarks>It is used when ShapeDrawingOptions.FillType is equal to ftGradient.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.FillGradientBounds">
            <summary>
            Gets or sets the the value which defines the bounds of the gradient fill.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.FillGradientType">
            <summary>
            The type of the gradient to draw polygon fill of the point symbols and polygon shapes.
            </summary>
            \see FillType, FillColor, FillColor2.
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.FillHatchStyle">
            <summary>
            The hatch style of the fill for point symbols and polygon shapes.
            </summary>
            \see FillType, FillBgColor, FillBgTransparent.
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.FillRotation">
            <summary>
            Gets or sets the angle of rotation of the polygon fill in degrees. 
            </summary>
            <remarks>Affects the rotation of gradient and texture fill.</remarks>
            \see FillType
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.FillTransparency">
            <summary>
            Gets or sets the transparency of the fill. Ranges from 0 (transparent) to 255 (opaque).
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.FillType">
            <summary>
            The type of the polygon fill. See the enumeration for details.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.FillVisible">
            <summary>
            Gets or sets the value which indicates whether the fill is visible.
            </summary>
            <remarks>Affects the drawing of point symbols and polygon shapes.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.FontName">
            <summary>
            The name of the font to use for drawing point symbols when ShapeDrawingOptions.PointType is equal to pstCharacter.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.LastErrorCode">
            <summary>
            Retrieves the numeric code of the last error that took place in the instance class.
            </summary>
            <remarks>The usage of this property clears the error code.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.LineColor">
            <summary>
            Gets or sets the line color of the shapes.
            </summary>
            <remarks>Affects the drawing of all shape types.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.LinePattern">
            <summary>
            Gets or sets line pattern for rendering polyline shapefile.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.LineStipple">
            <summary>
            Gets or sets the line style of the shapes.
            </summary>
            <remarks>Affects the drawing of all shape types.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.LineTransparency">
            <summary>
            Gets or sets the transparency of lines. Ranges from 0 (transparent) to 255 (opaque).
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.LineVisible">
            <summary>
            Gets or sets the value which indicates whether lines will be visible while drawing shapes.
            </summary>
            <remarks>This affects drawing of polylines, as well as the drawing of outline of points symbols and polygons.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.LineWidth">
            <summary>
            Gets or sets the width of the lines to draw shapes.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.Picture">
            <summary>
            Gets or sets the picture which will be used as texture brush (ShapeDrawingOptions.FillType = ftPicture) 
            or point symbol (ShapeDrawingOptions.PointType = ptSymbolPicture).
            </summary>
            <remarks>The property affects the drawing of point symbols and polygons.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.PictureScaleX">
            <summary>
            Gets or sets the coefficient for scaling picture horizontally.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.PictureScaleY">
            <summary>
            Gets or sets the coefficient for scaling picture vertically.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.PointCharacter">
            <summary>
            Get or sets the ANSI code of the text character to use as point symbol.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.PointRotation">
            <summary>
            Gets or sets the rotation of the point symbol in degrees.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.PointReflection">
            <summary>
            Gets or sets the type of reflection to apply to the point symbol.
            </summary>
            <remarks>This value is used when ShapeDrawingOptions.PointType is equal to ptSymbolFontCharacter or ptSymbolPicture.</remarks>
            \new495 Added in version 4.9.5
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.PointShape">
            <summary>
            Gets or sets the predefined shape for the point symbol.
            </summary>
            <remarks>It is used when ShapeDrawingOptions.PointType is equal to ptSymbolStandard.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.PointSidesCount">
            <summary>
            Gets or sets the number of sides for some of the predefined symbols such as regular, star or cross.
            </summary>
            <remarks>This value is used when ShapeDrawingOptions.PointType is equal to ptSymbolStandard.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.PointSidesRatio">
            <summary>
            Gets or sets the side ratio for some of the predefined point symbols such as regular, star and cross.
            </summary>
            <remarks>This value is used when ShapeDrawingOptions.PointType is equal to ptSymbolStandard.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.PointSize">
            <summary>
            Gets or sets the size of the point symbol including predefined symbols, characters and pictures.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.PointType">
            <summary>
            Gets or sets the type of the point symbols. 
            </summary>
            <remarks>The possible values include predefined symbols, text characters and pictures.</remarks>
        </member>
        <member name="M:MapWinGIS.IShapeDrawingOptions.Serialize">
            <summary>
            Saves the state of the class to the string
            </summary>
            <returns>A string with the state or an empty string on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapeDrawingOptions.SetDefaultPointSymbol(MapWinGIS.tkDefaultPointSymbol)">
            <summary>
            Sets a predefined combination of properties to set the commonly used symbols. 
            </summary>
            <remarks>This method changes PointType, PointShape, PointSidesCount, PointRotation and PointSidesRatio properties.</remarks>
            <param name="symbol">The predefined symbol to be set.</param>
        </member>
        <member name="M:MapWinGIS.IShapeDrawingOptions.SetGradientFill(System.UInt32,System.Int16)">
            <summary>
            Provides a convenient way to set colors of the gradient fill.
            </summary>
            <param name="Color">The central color of the gradient.</param>
            <param name="range">The range of colors of each channel the gradient covers. 
            The values should be within 0-255.</param>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.Tag">
            <summary>
            Gets or sets a string associated with the instance of class. Can store any information provided by developer.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.UseLinePattern">
            <summary>
            Gets or set the value which indicates whether line pattern will be used to render polyline shapefile.
            </summary>
            <remarks>This property won't be set to true unless line pattern with at least one line exists.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.VerticesColor">
            <summary>
            Gets or sets the color of vertices for the shapes.
            </summary>
            \see VerticesVisible
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.VerticesFillVisible">
            <summary>
            Gets or sets the value which indicates whether the fill for shape vertices will be drawn.
            </summary>
            \see VerticesVisible
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.VerticesSize">
            <summary>
            Gets or sets the size of the shapes's vertices
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.VerticesType">
            <summary>
            Gets or sets the type of shape vertices.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.VerticesVisible">
            <summary>
            Gets or sets the value which indicates whether vertices of the shape will be visible. The default values is false.
            </summary>
            <remarks>The visibility of point symbols for point shapefiles is not affected by this property.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.Visible">
            <summary>
            Gets or sets the values which indicates whether shapes will be visible.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapeDrawingOptions.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the text description of the specified error code.
            </summary>
            <param name="ErrorCode">The numeric error code retrieved by ShapeDrawingOptions.LastErrorCode property.</param>
            <returns>The description of the error.</returns>
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.AlignPictureByBottom">
            <summary>
            Gets or sets a value indicating whether hot spot of icons should be position at the bottom center. 
            When set to false the hotspot will be at the center of icon.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.FrameType">
            <summary>
            Gets or sets type of frame to be displayed around point when ShapeDrawingOptions.PointShape is set to ptSymbolFontCharacter.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.FrameVisible">
            <summary>
            Gets or sets a value indicating whether a frame will be drawn around point when ShapeDrawingOptions.PointShape is set to ptSymbolFontCharacter.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.DynamicVisibility">
            <summary>
            Gets or sets a value indicating whether the category will be displayed only
            for scale range specified by MinVisibleScale and MaxVisibleScale properties
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.MaxVisibleScale">
            <summary>
            Gets or sets maximum map scale at which the category is visible 
            when ShapeDrawingOptions.DynamicVisibility is set to true.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapeDrawingOptions.MinVisibleScale">
            <summary>
            Gets or sets minimum map scale at which the category is visible
            when ShapeDrawingOptions.DynamicVisibility is set to true.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="T:MapWinGIS.IShapefileCategories">
            <summary>
            Represents a list of visualization categories which determine the appearance of the shapefile.
            </summary>
            <remarks>
            Provides methods for:
            - managing categories: ShapefileCategories.Add, ShapefileCategories.Insert(), ShapefileCategories.Remove, ShapefileCategories.Clear();
            - generation of categories based on the specified attribute: ShapefileCategories.Generate();
            - mapping of categories to particular shapes: ShapefileCategories.ApplyExpressions();
            - setting of common color scheme for the range of categories: ShapefileCategories.ApplyColorScheme().
            - accessing particular categories: ShapefileCategories.get_Item().
            </remarks>
            Here is a diagram for the ShapefileCategories class.
            \dot
            digraph shapefilecategories_diagram {
            nodesep = 0.3;
            ranksep = 0.3;
            splines = ortho;
            
            node [shape= "polygon", peripheries = 3, fontname=Helvetica, fontsize=9, color = gray, style = filled, height = 0.2, width = 0.8];
            cat [ label="ShapefileCategory" URL="\ref ShapefileCategory"];
            
            node [color = tan, peripheries = 1, height = 0.3, width = 1.0];
            lst [ label="ShapefileCategories" URL="\ref ShapefileCategories"];
            sdo [ label="ShapeDrawingOptions" URL="\ref ShapeDrawingOptions"];
            
            node [style = dashed, color = gray];
            sf [ label="Shapefile" URL="\ref Shapefile"];
            
            edge [ dir = none, style = solid, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060", labeldistance = 0.6  ]
            cat -> sdo [ URL="\ref ShapefileCategory.DrawingOptions", tooltip = "ShapefileCategory.DrawingOptions", headlabel = "   1"];
            lst -> cat [ URL="\ref ShapefileCategories.get_Item()", tooltip = "ShapefileCategories.get_Item()", headlabel = "   n"];
            sf -> lst [ URL="\ref Shapefile.Categories", tooltip = "Shapefile.Categories", headlabel = "   1"];
            }
            
            \enddot
            <a href = "diagrams.html">Graph description</a>
             \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.Add(System.String)">
            <summary>
            Creates a new visualization category, adds it to the list and returns its reference to the caller.
            </summary>
            It's the responsibility of the developer to map the new category to the 
            particular shape by either:
            - specifying ShapefileCategory.Expression and calling ShapefileCategories.ApplyExpression();
            - by using Shapefile.set_ShapeCategory() property;
            .
            <param name="Name">The name of the new category. It must not be unique.</param>
            <returns>The reference to the newly created category or NULL reference on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.AddRange(System.Int32,MapWinGIS.tkClassificationType,System.Int32,System.Object,System.Object)">
            <summary>
            Creates the specified number of visualization categories and expressions for them.
            </summary>
            <remarks>The method can be useful to override generation routine provided in ShapefileCategories.GenerateCategories()
            which always generate categories covering the full range of values of the specified field. This method can
            define the range of values explicitly, therefore certain values can be excluded from classification or on contrary
            categories can be added for the values which aren't yet present in the table.</remarks>
            <param name="FieldIndex">The index of the field to build classification by.</param>
            <param name="ClassificationType">The type of the classification.</param>
            <param name="numClasses">The number of categories to add. If ClassificationType equals ctUniqueValues this value will be skipped.</param>
            <param name="MinValue">The minimal value of the field to include in the classification.</param>
            <param name="MaxValue">Th maximum value of the field to include in the classification.</param>
            <returns>True on successful adding and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.ApplyColorScheme(MapWinGIS.tkColorSchemeType,MapWinGIS.ColorScheme)">
            <summary>
            Applies color scheme to the visualization categories.
            </summary>
            <param name="Type">The method of interpolation.</param>
            <param name="ColorScheme">Color scheme to take colors from.</param>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.ApplyColorScheme2(MapWinGIS.tkColorSchemeType,MapWinGIS.ColorScheme,MapWinGIS.tkShapeElements)">
            <summary>
            Applies color scheme to the visualization categories.
            </summary>
            <param name="Type">The method of interpolation.</param>
            <param name="ColorScheme">The color scheme to take colors from.</param>
            <param name="ShapeElement">The element of the shape symbology to apply colors to.</param>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.ApplyColorScheme3(MapWinGIS.tkColorSchemeType,MapWinGIS.ColorScheme,MapWinGIS.tkShapeElements,System.Int32,System.Int32)">
            <summary>
            Applies color scheme to the visualization categories.
            </summary>
            <param name="Type">The method of interpolation.</param>
            <param name="ColorScheme">The color scheme to take colors from.</param>
            <param name="ShapeElement">The element of the shape symbology to apply colors to.</param>
            <param name="CategoryStartIndex">The index of the first category to apply colors to.</param>
            <param name="CategoryEndIndex">The index of the last category to apply colors to.</param>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.ApplyExpression(System.Int32)">
            <summary>
            Maps particular shapes to the category based on ShapefileCategory.Expression.
            </summary>
            <remarks>The mapping between the category and shapes can be changed by Shapefile.set_ShapeCategory property.</remarks>
            <param name="CategoryIndex">The index of the category.</param>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.ApplyExpressions">
            <summary>
            Maps shapes to the visualization categories based in ShapefileCategory.Expression.
            </summary>
            <remarks>The mapping between the category and shapes can be changed by Shapefile.set_ShapeCategory property.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapefileCategories.Caption">
            <summary>
            The name of the classification scheme to display in the legend.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.Clear">
            <summary>
            Removes all the categories from the list.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefileCategories.Count">
            <summary>
            Returns the number of the categories in the list.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.Deserialize(System.String)">
            <summary>
            Restores the state of the object from the string.
            </summary>
            <param name="newVal">A string generated by ShapefileCategories.Serialize() method.</param>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.Generate(System.Int32,MapWinGIS.tkClassificationType,System.Int32)">
            <summary>
            Generates visualization categories by certain attribute
            </summary>
            <param name="FieldIndex">The index of the field to generate categories by.</param>
            <param name="ClassificationType">The type of classification.</param>
            <param name="numClasses">Number of classes to generate. The parameter is omitted 
            in case unique values classification is used.</param>
            <returns>True on successful generation and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.IShapefileCategories.GlobalCallback">
            <summary>
            Gets or sets the callback object which is used to return to the client the information about progress and errors.
            </summary>
            <remarks>An instance of the class which implements ICallback interface should be passed.
            The class must be implemented by caller.</remarks>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.Insert(System.Int32,System.String)">
            <summary>
            Creates a new visualization category and inserts it at specified position of the list.
            </summary>
            <param name="Index">The index to insert category at.</param>
            <param name="Name">The name of the new category.</param>
            <returns>Reference to the new category or NULL reference on failure.</returns>
        </member>
        <member name="P:MapWinGIS.IShapefileCategories.Key">
            <summary>
            A text string associated with the instance of the class. Any value can be stored by developer in this property.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.Insert2(System.Int32,MapWinGIS.ShapefileCategory)">
            <summary>
            Inserts a category at the specified index in the collection.
            </summary>
            <param name="Index">The index.</param>
            <param name="Category">The category to be inserted.</param>
            <returns>True on success.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IShapefileCategories.LastErrorCode">
            <summary>
            Retrieves the numeric code of the last error that took place in the class.
            </summary>
            <remarks>The usage of this property clears the error code.</remarks>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.MoveDown(System.Int32)">
            <summary>
            Moves the specified category down the list by swapping it with the succeeding category.
            </summary>
            <param name="Index">The index of the category to move down.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.MoveUp(System.Int32)">
            <summary>
            Moves the specified category up the list by swapping it with the preceding category.
            </summary>
            <param name="Index">The index of the category to move.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.Remove(System.Int32)">
            <summary>
            Removes the specified category.
            </summary>
            <param name="Index">The index of the category to remove.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.Serialize">
            <summary>
            Saves the state of the object to the string.
            </summary>
            <returns>A string with serialized state.</returns>
        </member>
        <member name="P:MapWinGIS.IShapefileCategories.Shapefile">
            <summary>
            A reference to the parent shapefile.
            </summary>
            <remarks>NULL reference will be returned in case the categories aren't associated with a shapefile.</remarks>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the specific error code.
            </summary>
            <param name="ErrorCode">The error code returned by ShapefileCategories.LastErrorCode</param>
            <returns>The string with the description</returns>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.get_Item(System.Int32)">
            <summary>
            Returns the category with the specified index.
            </summary>
            <param name="Index">The index of the category to retrieve.</param>
            <returns>The reference to the category or NULL reference on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.set_Item(System.Int32,MapWinGIS.ShapefileCategory)">
            <summary>
            Replaces the category with the specified index with the new one.
            </summary>
            <param name="Index">The index of the category to replace.</param>
            <param name="pVal">The new category.</param>
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.get_CategoryIndex(MapWinGIS.ShapefileCategory)">
            <summary>
            Gets index of the specified category within a collection.
            </summary>
            <param name="Category">Category to find index for.</param>
            <returns>Index of category.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.get_CategoryIndexByName(System.String)">
            <summary>
            Gets index of category by its name. The comparison is case-sensitive.
            </summary>
            <param name="categoryName">Category name to find index for.</param>
            <returns>Index of category.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.GeneratePolygonColors(MapWinGIS.ColorScheme)">
            <summary>
            Applies specific coloring to polygon layer based on 2 rules:
            - each polygon fill color must be different from the colors of all adjacent polygons;
            - the minimum overall number of colors must be used.
            </summary>
            <param name="Scheme">Color scheme to take colors from. If the number of color breaks 
            is smaller than the number of polygon colors, interpolation with ColorScheme.GetGraduatedColor
            method will be used.</param>
            <remarks>The coloring assumptions used by the method correspond to the formulation of 
            <a href="http://en.wikipedia.org/wiki/Four_color_theorem">Four color theorem</a>. But simple greedy
            algorithm used by the method usually employs somewhat more colors (5-6), 
            although provides much better performance than precise implementations.
            </remarks>
            <returns>True on success.</returns>
            \new492 Added in version 4.9.2
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.Generate2(System.String,MapWinGIS.tkClassificationType,System.Int32)">
            <summary>
            Generates categories based on specified field.
            </summary>
            <param name="FieldName">Name of the field.</param>
            <param name="ClassificationType">Type of the classification.</param>
            <param name="numClasses">The number classes.</param>
            <returns>True on success.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IShapefileCategories.Add2(MapWinGIS.ShapefileCategory)">
            <summary>
            Adds the category to the collection.
            </summary>
            <param name="Category">The category.</param>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IShapefileCategories.ClassificationField">
            <summary>
            Gets or sets the index of classification that was used to generate categories.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="T:MapWinGIS.IShapefileCategory">
            <summary>
            Represents a set of visualization options for shapefile layer.
            </summary>
            <remarks>
            The set of options is represented by instance of ShapeDrawingOptions class which can be accessed by ShapefileCategory.DrawingOptions,
            while ShapefileCategory.Expression is used for mapping this options to particular shapes.
            </remarks>
            Here is a diagram for the ShapefileCategory class.
            \dot
            digraph shapefilecategory_diagram {
            nodesep = 0.3;
            ranksep = 0.3;
            splines = ortho;
            
            node [shape= "polygon", peripheries = 3, fontname=Helvetica, fontsize=9, color = gray, style = filled, height = 0.2, width = 0.8];
            cat [ label="ShapefileCategory" URL="\ref ShapefileCategory"];
            
            node [color = tan, peripheries = 1, height = 0.3, width = 1.0];
            sdo [ label="ShapeDrawingOptions" URL="\ref ShapeDrawingOptions"];
            
            node [style = dashed, color = gray];
            lst [ label="ShapefileCategories" URL="\ref ShapefileCategories"];
            
            edge [ dir = none, style = solid, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060", labeldistance = 0.6 ]
            cat -> sdo [ URL="\ref ShapefileCategory.DrawingOptions", tooltip = "ShapefileCategory.DrawingOptions", headlabel = "   1"];
            lst -> cat [ URL="\ref ShapefileCategories.get_Item()", tooltip = "ShapefileCategories.get_Item()", headlabel = "   n"];
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
             \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefileCategory.DrawingOptions">
            <summary>
            Gets or sets visualization options associated with the category.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefileCategory.Expression">
            <summary>
            Gets or sets expression which defines shapes which belong to the category.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefileCategory.Name">
            <summary>
            Gets or sets the name of the category. The names must not be unique.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefileCategory.MaxValue">
            <summary>
            Gets or sets maximum value of the value range the category covers.
            </summary>
            <remarks>The value is used when cvRange is set as ShapefileCategory.ValueType.</remarks>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapefileCategory.MinValue">
            <summary>
            Gets or sets minimum value of the value range the category covers.
            </summary>
            <remarks>The value is used when either cvSingleValue, cvRange 
            is set for ShapefileCategory.ValueType.</remarks>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapefileCategory.ValueType">
            <summary>
            Gets or sets value type for the category. 
            </summary>
            <remarks>Depending on value type either ShapefileCategory.MinValue/ShapefileCategory.MaxValue properties
            or ShapefileCategory.Expression are used in the calculation process. ShapefileCategories.Generate
            method will set cvSingleValue for unique values classification and ctRange for any 
            interval classification. These values are faster to apply. However manual setting of 
            ShapefileCategory.Expression property will change it to cvExpression.</remarks>
            \new493 Added in version 4.9.3
        </member>
        <member name="T:MapWinGIS.IShapefileColorBreak">
            <summary>
            Defines a part of shapefile color scheme and specifies how a certain region of a shapefile will be colored. 
            </summary>
            \deprecated in v. 4.8. Use ShapefileCategories, ShapefileCategory, ColorScheme classes instead.
            \removed493 Removed in 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapefileColorBreak.Caption">
            <summary>
            Gets or sets the caption of the shapefile color break.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefileColorBreak.EndColor">
            <summary>
            Gets or sets the color which will be used for drawing objects characterized by ShapefileColorBreak.EndValue.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefileColorBreak.EndValue">
            <summary>
            Gets or sets the value which represent the end of shapefile color break.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefileColorBreak.StartColor">
            <summary>
            Gets or sets the color which will be used for drawing objects characterized by ShapefileColorBreak.StartValue.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefileColorBreak.StartValue">
            <summary>
            Gets or sets the value which represent the start of shapefile color break.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefileColorBreak.Visible">
            <summary>
            Gets or sets a boolean value which indicates whether the objects defined by color break will be displayed.
            </summary>
        </member>
        <member name="T:MapWinGIS.IShapefileColorScheme">
            <summary>
            A shapefile color scheme defines how a shapefile will be colored. 
            </summary>
            <remarks>A shapefile color scheme consists of ShapefileColorBreak objects.</remarks>
            \deprecated in v. 4.8. Use ShapefileCategories, ShapefileCategory, ColorScheme instead.
            \removed493 Removed in 4.9.3
        </member>
        <member name="M:MapWinGIS.IShapefileColorScheme.Add(MapWinGIS.IShapefileColorBreak)">
            <summary>
            Adds a color break to the color scheme.
            </summary>
            <param name="Break"></param>
            <returns></returns>
        </member>
        <member name="P:MapWinGIS.IShapefileColorScheme.FieldIndex">
            <summary>
            Gets or sets the index in the attribute table the color scheme is associated with.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefileColorScheme.GlobalCallback">
            <summary>
            Gets or sets callback object to return the information about the errors.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="M:MapWinGIS.IShapefileColorScheme.InsertAt(System.Int32,MapWinGIS.IShapefileColorBreak)">
            <summary>
            Insert a color break in the specified position of the scheme.
            </summary>
            <param name="Position">The position to insert color break at.</param>
            <param name="Break">The color break to insert.</param>
            <returns>The actual position color break was inserted at.</returns>
        </member>
        <member name="P:MapWinGIS.IShapefileColorScheme.Key">
            <summary>
            Gets or sets text string associated with the object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefileColorScheme.LastErrorCode">
            <summary>
            Returns the code of the last error which took place inside this instance of class.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefileColorScheme.LayerHandle">
            <summary>
            Gets or sets the layer handle the color scheme is associated with.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapefileColorScheme.NumBreaks">
            <summary>
            Gets the number of color breaks in the color scheme.
            </summary>
            <returns>The number of breaks.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefileColorScheme.Remove(System.Int32)">
            <summary>
            Removes specific color break from the scheme.
            </summary>
            <param name="Index">The index of the break to remove.</param>
        </member>
        <member name="M:MapWinGIS.IShapefileColorScheme.get_ColorBreak(System.Int32)">
            <summary>
            Gets a color break from the color scheme.
            </summary>
            <param name="Index">The index of the break.</param>
            <returns>The color break object or NULL reference on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefileColorScheme.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the error code returned by ShapefileColorScheme.LastErrorCode.
            </summary>
            <param name="ErrorCode">The code of error.</param>
            <returns>The description of error.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefileColorScheme.set_ColorBreak(System.Int32,MapWinGIS.IShapefileColorBreak)">
            <summary>
            Replaces a color break in the color scheme.
            </summary>
            <param name="Index">The index of color break to replace.</param>
            <param name="pVal">The reference to the new color break.</param>
        </member>
        <member name="T:MapWinGIS.IShapeNetwork">
            <summary>
            Represents a network built from the polyline shapefile.
            </summary>
            <remarks>A shape network is created from the shapes in a polyline shapefile which allows you to traverse the shapefile simulating 
            water flowing in a watershed to a single outlet. To create a shape network from a polyline shapefile, first choose an outlet 
            shape from the shapes in the shapefile. Next, choose an outlet point within the specified outlet shape. Finally, you need to 
            select a tolerance value. The tolerance is used to determine whether to include a shape in the shape network if it is not 
            connected to the network. Using this starting criteria, a shape network can be created from the polyline shapefile.  
            </remarks>
        </member>
        <member name="M:MapWinGIS.IShapeNetwork.Build(MapWinGIS.Shapefile,System.Int32,System.Int32,System.Double,MapWinGIS.AmbiguityResolution,MapWinGIS.ICallback)">
            <summary>
            Builds a shape network from the specified line shapefile using the shape index to determine which shape in the shapefile is 
            to be used as the outlet shape.
            </summary>
            <param name="Shapefile">The shapefile to be used to create the shape network.</param>
            <param name="ShapeIndex">The index of the shape in the specified shapefile to be used as the outlet shape for the shape network</param>
            <param name="FinalPointIndex">The point index of the point in the specified outlet shape to be used as the outlet point for the shape network.</param>
            <param name="Tolerance">The tolerance used to find disconnected segments to merge into the network.</param>
            <param name="ar">The ambiguity resolution method used to resolve any ambiguity while building the shape network.
            Distance to outlet is the only ambiguity resolution method implemented.</param>
            <param name="cBack">Optional. The ICallback object which will receive progress and error messages during the
            creation of the shape network.</param>
            <returns>The success or failure of building the shape network. If a non-zero integer is returned, the 
            shape network build was successful. If a zero is returned, the shape network build was not 
            successful.</returns>
        </member>
        <member name="M:MapWinGIS.IShapeNetwork.Close">
            <summary>
            Closes the shape network.
            </summary>
            <returns>A boolean value representing the success or failure of closing the shape network.</returns>
        </member>
        <member name="P:MapWinGIS.IShapeNetwork.CurrentShape">
            <summary>
            Gets the current shape object in the shape network. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeNetwork.CurrentShapeIndex">
            <summary>
            Gets the index of the current shape in the shape network. 
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapeNetwork.DeleteShape(System.Int32)">
            <summary>
            Deletes a shape from the shape network. 
            </summary>
            <param name="ShapeIndex">The index of the shape to be deleted from the shape network. </param>
            <returns>A boolean value representing the success or failure of deleting the shape from the shape network.</returns>
        </member>
        <member name="P:MapWinGIS.IShapeNetwork.GlobalCallback">
            <summary>
            The global callback is the interface used by MapWinGIS to pass progress and error events to interested applications. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeNetwork.Key">
            <summary>
            The key may be used by the programmer to store any string data associated with the object. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeNetwork.LastErrorCode">
            <summary>
            Retrieves the last error generated in the object. 
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapeNetwork.MoveDown">
            <summary>
            Moves the current shape pointer down the network by one link.
            </summary>
            <returns>A boolean value representing the success or failure of moving the current shape pointer down the 
            shape network by one link.</returns>
        </member>
        <member name="M:MapWinGIS.IShapeNetwork.MoveTo(System.Int32)">
            <summary>
            Moves the current shape pointer to the shape specified by the shape index.
            </summary>
            <param name="ShapeIndex">The shape index of the shape in the network to move the current shape pointer to.</param>
            <returns>A boolean value representing the success or failure of moving the current shape pointer to the 
            specified shape.</returns>
        </member>
        <member name="M:MapWinGIS.IShapeNetwork.MoveToOutlet">
            <summary>
            Moves the current shape pointer to the outlet shape in the shape network. 
            </summary>
            <returns>A boolean value representing the success or failure of moving the current shape pointer to the 
            outlet shape in the shape network.</returns>
        </member>
        <member name="M:MapWinGIS.IShapeNetwork.MoveUp(System.Int32)">
            <summary>
            Moves the current shape pointer up the shape network, taking the specified path. 
            </summary>
            <param name="UpIndex">The index of the shape in the shape network to use as the upstream path. This is necessary 
            because a node may have more than one upstream path. </param>
            <returns>A boolean value representing the success or failure of moving the current shape pointer up in the 
            shape network.</returns>
        </member>
        <member name="P:MapWinGIS.IShapeNetwork.NetworkSize">
            <summary>
            Gets the number of shapes in the shape network. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapeNetwork.NumDirectUps">
            <summary>
            Gets the number of upstream shapes in the network before the next fork. 
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapeNetwork.Open(MapWinGIS.Shapefile,MapWinGIS.ICallback)">
            <summary>
            Opens a shape network.
            </summary>
            <param name="sf">The shapefile object to open as a shape network. </param>
            <param name="cBack">Optional. ICallback object which will receive progress and error messages while the shape network is opened.</param>
            <returns>A boolean value representing the success or failure of opening the shape network</returns>
        </member>
        <member name="P:MapWinGIS.IShapeNetwork.ParentIndex">
            <summary>
            Gets the index of the parent of the current shape. If the current shape is the outlet shape in the shape network, -1 will be returned.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapeNetwork.RasterizeD8(System.Boolean,MapWinGIS.GridHeader,System.Double,MapWinGIS.ICallback)">
            <summary>
            Rasterizes the network into a D8 grid. 
            </summary>
            <param name="UseNetworkBounds">A boolean value representing whether the shape network bounds will be used as the only 
            bounds for the D8 grid or not. </param>
            <param name="Header">Optional. A grid header to use to create the new grid.</param>
            <param name="Cellsize">Optional. The cell size to use in creating the D8 grid.</param>
            <param name="cBack">Optional. The ICallback object which will receive progress and error messages when the grid is being created.</param>
            <returns>Optional. The rasterized Grid representing the shape network.</returns>
        </member>
        <member name="P:MapWinGIS.IShapeNetwork.Shapefile">
            <summary>
            Gets the shapefile used to create the network.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapeNetwork.get_AmbigShapeIndex(System.Int32)">
            <summary>
            Gets the shape index of an ambiguous shape in the shape network.
            </summary>
            <remarks> The first ambiguous shape is at index 0. If there are no ambiguous shapes, 
            AmbigShapeIndex(0) will return -1. If AmbigShapeIndex returns -1 and the index you specified isn't 0, it 
            means there are no more ambiguous shapes in the shape network. 
            </remarks>
            <param name="Index">The index into the ambiguous shapes in the shape network. </param>
            <returns>The shape index of the ambiguous shape. Returns -1 if there isn't an ambiguous shape at the 
            specified ambiguous shape index.</returns>
        </member>
        <member name="M:MapWinGIS.IShapeNetwork.get_DistanceToOutlet(System.Int32)">
            <summary>
            Gets the distance from the specified point in the current shape to the outlet point in the shape network. 
            </summary>
            <param name="PointIndex">The index of a point in the current shape.</param>
            <returns>The distance from the specified point in the current shape to the outlet point in the shape network.</returns>
        </member>
        <member name="M:MapWinGIS.IShapeNetwork.get_ErrorMsg(System.Int32)">
            <summary>
            Retrieves the error message associated with the specified error code.
            </summary>
            <param name="ErrorCode">The error code for which the error message is required.</param>
            <returns>The error message description for the specified error code.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "T:MapWinGIS.ITable" -->
        <member name="M:MapWinGIS.ITable.Calculate(System.String,System.Int32,System.Object@,System.String@)">
            <summary>
            Calculates the the expression taking the values from the specified row of the attribute table.
            </summary>
            <param name="Expression">The expression to analyse.</param>
            <param name="RowIndex">The index of the row.</param>
            <param name="Result">The result of calculation as variant data type, either boolean, double or string.</param>
            <param name="ErrorString">An output string with the description of error in case method failed.</param>
            <returns>True on successful calculation and false otherwise.</returns>
             \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.ITable.CdlgFilter">
            <summary>
            Returns the common dialog filter containing all supported file extensions in string format. 
            </summary>
        </member>
        <member name="M:MapWinGIS.ITable.Close">
            <summary>
            Closes the attribute table.
            </summary>
            <returns>The value can be ignored.</returns>
        </member>
        <member name="M:MapWinGIS.ITable.CreateNew(System.String)">
            <summary>
            Creates a new attribute table. 
            </summary>
            <remarks>A new table is automatically in editing mode after it is created.</remarks>
            <param name="dbfFilename">The filename for the new table.</param>
            <returns>A boolean value representing the success or failure of creating the new table.</returns>
        </member>
        <member name="M:MapWinGIS.ITable.EditCellValue(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the value of the cell. 
            </summary>
            <remarks>The table must be set to allow editing before a cell's value may be edited.</remarks>
            <param name="FieldIndex">The field index of the cell to be edited.</param>
            <param name="RowIndex">The row index of the cell to be edited.</param>
            <param name="newVal">The new value to be used to set the specified cell's value.</param>
            <returns>A boolean value representing the success or failure of setting the value of the specified cell in the table.</returns>
        </member>
        <member name="M:MapWinGIS.ITable.EditClear">
            <summary>
            Deletes all rows and fields from the table. Note: The table must be set to allow editing before the rows and fields can be deleted from the table.
            </summary>
            <returns>A boolean value representing the success or failure of deleting all rows and fields from the table.</returns>
        </member>
        <member name="M:MapWinGIS.ITable.EditDeleteField(System.Int32,MapWinGIS.ICallback)">
            <summary>
            Deletes a field from the table. 
            </summary>
            <remarks>The table must be set to allow editing before a field can be deleted from the table.</remarks>
            <param name="FieldIndex">The index of the field to be deleted from the table.</param>
            <param name="cBack">The ICallback object which will receive progress and error messages while the field is being deleted from the table.</param>
            <returns></returns>
        </member>
        <member name="M:MapWinGIS.ITable.EditDeleteRow(System.Int32)">
            <summary>
            Deletes a row from the table.
            </summary>
            <remarks>The table must be set to allow editing before a row can be deleted from the table.</remarks>
            <param name="RowIndex">The index of the row to be deleted from the table.</param>
            <returns>A boolean value representing the success or failure of deleting the specified row from the table.</returns>
        </member>
        <member name="M:MapWinGIS.ITable.EditInsertField(MapWinGIS.Field,System.Int32@,MapWinGIS.ICallback)">
            <summary>
            Inserts a new field into the table.
            </summary>
            <remarks>The table must be set to allow editing before a field can be inserted into the table. </remarks>
            <param name="Field">The new field to be inserted into the table.</param>
            <param name="FieldIndex">The desired index to be used for the new field being inserted into the table. 
            If the desired index is invalid or unavailable, the actual index used for the new field will be returned.</param>
            <param name="cBack">The ICallback object which will receive progress and error messages while the new field is being inserted into the table.</param>
            <returns>A boolean value representing the success or failure of inserting the new field into the table.</returns>
        </member>
        <member name="M:MapWinGIS.ITable.EditInsertRow(System.Int32@)">
            <summary>
            Inserts a new row into the table. 
            </summary>
            <remarks>The table must be set to allow editing before a row can be inserted into the table.</remarks>
            <param name="RowIndex">The desired index to use when inserting the new row into the table. If the 
            desired index is invalid or unavailable, the actual index used to insert the new row will be returned.</param>
            <returns>A boolean value representing the success or failure of inserting the new row into the table.</returns>
        </member>
        <member name="M:MapWinGIS.ITable.EditReplaceField(System.Int32,MapWinGIS.Field,MapWinGIS.ICallback)">
            <summary>
            Replaces the specified field in the table with the new field. 
            </summary>
            <remarks>The table must be set to allow editing before a field can be replaced in the table.</remarks>
            <param name="FieldIndex">The index of the field to be replaced.</param>
            <param name="NewField">The field to be used to replace the specified field in the table.</param>
            <param name="cBack">The ICallback object which will receive progress and error messages while the specified field 
            is being replced by the new field.</param>
            <returns>A boolean value representing the success or failure of replacing the specified field.</returns>
        </member>
        <member name="P:MapWinGIS.ITable.EditingTable">
            <summary>
            Gets whether or not the table is in editing mode.
            </summary>
        </member>
        <member name="P:MapWinGIS.ITable.GlobalCallback">
            <summary>
            The global callback is the interface used by MapWinGIS to pass progress and error events to interested applications. 
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.ITable.Key">
            <summary>
            The key may be used by the programmer to store any string data associated with the object.
            </summary>
        </member>
        <member name="P:MapWinGIS.ITable.LastErrorCode">
            <summary>
            Retrieves the last error generated in the object. 
            </summary>
        </member>
        <member name="P:MapWinGIS.ITable.NumFields">
            <summary>
            Gets the number of fields in the table.
            </summary>
        </member>
        <member name="P:MapWinGIS.ITable.NumRows">
            <summary>
            Gets the number of rows in the table.
            </summary>
        </member>
        <member name="M:MapWinGIS.ITable.Open(System.String,MapWinGIS.ICallback)">
            <summary>
            Opens a .dbf table from file.
            </summary>
            <param name="dbfFilename">The filename of the table to be opened.</param>
            <param name="cBack">The ICallback object which will receive progress and error messages while the table is being opened.</param>
            <returns>The boolean value representing success or failure of the opening table.</returns>
        </member>
        <member name="M:MapWinGIS.ITable.ParseExpression(System.String,System.String@)">
            <summary>
            Checks if the expression is a valid one.
            </summary>
            <param name="Expression">The expression to analyse.</param>
            <param name="ErrorString">An output string with the description of error in case expression is not valid.</param>
            <returns>True if expression is valid and false otherwise.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.ITable.Query(System.String,System.Object@,System.String@)">
            <summary>
            Selects the rows in the table which agree with the specified expression.
            </summary>
            <param name="Expression">The query expression.</param>
            <param name="Result">An array of integer type with the indices of rows which were selected.</param>
            <param name="ErrorString">An output string with the description of error on failure.</param>
            <returns>True in case at least one row was selected and false otherwise.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.ITable.Save(MapWinGIS.ICallback)">
            <summary>
            Saves in-memory version of the table to the source file.
            </summary>
            <remarks>This method should be called while the table is in editing mode. The editing mode will not be closed.</remarks>
            <param name="cBack">A callback object to report information about progress and errors.</param>
            <returns>True on success and false otherwise.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.ITable.SaveAs(System.String,MapWinGIS.ICallback)">
            <summary>
            Saves the table using the specified filename.
            </summary>
            <param name="dbfFilename">The filename to be used to save the table. </param>
            <param name="cBack">The ICallback object which will receive progress and error messages while the table is being saved.</param>
            <returns>A boolean value representing the success or failure of saving the table.</returns>
        </member>
        <member name="M:MapWinGIS.ITable.StartEditingTable(MapWinGIS.ICallback)">
            <summary>
            Sets the table to allow table editing.
            </summary>
            <param name="cBack">Optional. The ICallback object which will receive progress and error events while the table is being 
            set to allow editing.</param>
            <returns>A boolean value representing the success or failure of setting the table to allow editing.</returns>
        </member>
        <member name="M:MapWinGIS.ITable.StopEditingTable(System.Boolean,MapWinGIS.ICallback)">
            <summary>
            Sets the table to prevent editing.
            </summary>
            <param name="ApplyChanges">Optional. A boolean value representing whether or not to save changes to the table. The default 
            is True, to save the changes. </param>
            <param name="cBack">Optional. The ICallback object which will receive progress and error messages while the table is being set to prevent editing.</param>
            <returns>A boolean value representing the success or failure of setting the table to prevent editing.</returns>
        </member>
        <member name="M:MapWinGIS.ITable.TestExpression(System.String,MapWinGIS.tkValueType,System.String@)">
            <summary>
            Tests the validity of expression and determines its return type.
            </summary>
            <param name="Expression">The expression to test.</param>
            <param name="ReturnType">An output value with the return type, either double, string or boolean.</param>
            <param name="ErrorString">An output string with the description of error.</param>
            <returns>True if the expression is valid and false otherwise.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.ITable.get_CellValue(System.Int32,System.Int32)">
            <summary>
            Gets the value of the specified cell in the table. 
            </summary>
            <param name="FieldIndex">The field index of the cell for which the value is required.</param>
            <param name="RowIndex">The row index of the cell for which the value is required. </param>
            <returns>The value of the specified cell in the table.</returns>
        </member>
        <member name="M:MapWinGIS.ITable.get_ErrorMsg(System.Int32)">
            <summary>
            Retrieves the error message associated with the specified error code. 
            </summary>
            <param name="ErrorCode">The error code for which the error message is required.</param>
            <returns>The error message description for the specified error code.</returns>
        </member>
        <member name="M:MapWinGIS.ITable.get_Field(System.Int32)">
            <summary>
            Gets the field object at the specified field index in the table. 
            </summary>
            <param name="FieldIndex">The index of the field in the table to be returned. </param>
            <returns>The field object specified by the field index.</returns>
        </member>
        <member name="M:MapWinGIS.ITable.get_FieldIndexByName(System.String)">
            <summary>
            Seeks field with specified name. Comparison is case insensitive.
            </summary>
            <param name="Fieldname">The name of field to search.</param>
            <returns>The index of field if it exists and -1 otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ITable.get_MaxValue(System.Int32)">
            <summary>
            Returns the maximum value for the specified field of the table.
            </summary>
            <remarks>NULL will be returned in case of invalid index.</remarks>
            <param name="FieldIndex">The index of the field.</param>
            <returns>The maximum value, either integer, double or string data type.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.ITable.get_MeanValue(System.Int32)">
            <summary>
            Calculates the mean value for the specified field of the table.
            </summary>
            <remarks>NULL will be returned in case of invalid index.</remarks>
            <param name="FieldIndex">The index of the field.</param>
            <returns>The mean value, either integer, double or string data type.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.ITable.get_MinValue(System.Int32)">
            <summary>
            Returns the minimum value for the specified field.
            </summary>
            <remarks>NULL will be returned in case of invalid index.</remarks>
            <param name="FieldIndex">The index of the field.</param>
            <returns>The minimum value, either integer, double or string data type.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.ITable.get_StandardDeviation(System.Int32)">
            <summary>
            Calculates the standard deviation for the set of values in specified field.
            </summary>
            <remarks>NULL will be returned in case of invalid index.</remarks>
            <param name="FieldIndex">The index of the field.</param>
            <returns>The minimum value, either integer, double or string data type.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.ITable.EditAddField(System.String,MapWinGIS.FieldType,System.Int32,System.Int32)">
            <summary>
            Adds a field to the table. The table must be in editing mode.
            </summary>
            <param name="Name">The name of field.</param>
            <param name="Type">The type of field.</param>
            <param name="Precision">The precision of field.</param>
            <param name="Width">The width of field.</param>
            <returns>The index of the new field or -1 on failure.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITable.Deserialize(System.String)">
            <summary>
            Restores state of joins from string.
            </summary>
            <param name="newVal">String generated by Table.Serialize method.</param>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITable.Dump(System.String,MapWinGIS.ICallback)">
            <summary>
            Writes contents of the DBF file to disk without changing the state of in-memory DBF.
            </summary>
            <param name="dbfFilename">Filename to write the data to.</param>
            <param name="cBack">Callback interface.</param>
            <returns>True on success and false otherwise.</returns>
            <remarks>The methods may be used for in-memory, when the content should be saved without switching to disk mode.</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="P:MapWinGIS.ITable.IsJoined">
            <summary>
            Gets a value indicating whether the table has any joined tables.
            </summary>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITable.Join(MapWinGIS.Table,System.String,System.String)">
            <summary>
            Joins external table to the current one.
            </summary>
            <param name="table2">External table.</param>
            <param name="field1">Join field of this table.</param>
            <param name="field2">Join filed of external table.</param>
            <returns>True on success.</returns>
            <remarks>If formats other than DBF are needed, in-memory dbf table should be populated first.</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITable.Join2(MapWinGIS.Table,System.String,System.String,System.String,System.String)">
            <summary>
            Joins external table to the current one.
            </summary>
            <param name="table2">>External table.</param>
            <param name="field1">Join field of this table.</param>
            <param name="field2">Join filed of external table.</param>
            <param name="filenameToReopen">Filename to be opened to restore join on deserialization of table state.</param>
            <param name="joinOptions">Arbitrary join options to help restore join on deserialization.</param>
            <returns>True on success.</returns>
            <remarks>If filename specify formats other than dbf (extension is checked), Table.OnUpdateJoin event will be raised. 
            Client can handle this event by populating joinSource table parameter using filename, fieldList and options parameters.</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITable.Join3(MapWinGIS.Table,System.String,System.String,System.String,System.String,System.Array)">
            <summary>
            Joins external table to the current one.
            </summary>
            <param name="table2">>External table.</param>
            <param name="field1">Join field of this table.</param>
            <param name="field2">Join filed of external table.</param>
            <param name="filenameToReopen">Filename to be opened to restore join on deserialization of table state.</param>
            <param name="joinOptions">Arbitrary join options to help restore join on deserialization.</param>
            <param name="fieldList">Comma separated list of fields to be displayed from external table.</param>
            <returns>True on success.</returns>
            <remarks>If filename specify formats other than dbf (extension is checked), Table.OnUpdateJoin event will be raised. 
            Client can handle this event by populating joinSource table parameter using filename, fieldList and options parameters.</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="P:MapWinGIS.ITable.JoinCount">
            <summary>
            Gets number of joins for the table.
            </summary>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITable.Serialize">
            <summary>
            Serializes the state of joins for table to be restored later with Table.Deserialize method.
            </summary>
            <returns>String with serialized state.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITable.StopAllJoins">
            <summary>
            Stops all joins associated with table.
            </summary>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITable.StopJoin(System.Int32)">
            <summary>
            Stops (removes) specific join created for the table.
            </summary>
            <param name="joinIndex">Index of join to be removed.</param>
            <returns>True on success.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITable.TryJoin(MapWinGIS.Table,System.String,System.String,System.Int32@,System.Int32@)">
            <summary>
            Tries to create a join and reports number of rows to be joined for the specified join fields.
            </summary>
            <param name="table2">External table to join.</param>
            <param name="fieldTo">Join field of this table.</param>
            <param name="fieldFrom">Join field of external table.</param>
            <param name="rowCount">Number of rows in this table for which a join is found in external table.</param>
            <param name="joinRowCount">Number of unique values from external table, joined to this table.</param>
            <returns>True on success.</returns>
            <remarks>The method can be used to determine, if the join fields for table are chosen correctly, i.e. their values match.</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITable.get_FieldIsJoined(System.Int32)">
            <summary>
            Gets the value indicating whether the specified field is joined from external table.
            </summary>
            <param name="FieldIndex">Field index.</param>
            <returns>True if the field is brought from external table.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITable.get_FieldJoinIndex(System.Int32)">
            <summary>
            Returns the index of join operation by which the specified field was brought in.
            </summary>
            <param name="FieldIndex">Field index.</param>
            <returns>The index of join.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITable.get_JoinFilename(System.Int32)">
            <summary>
            Gets filename of the external datasource used in specified join.
            </summary>
            <param name="joinIndex">Index of join operation.</param>
            <returns>Filename of external datasource.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITable.get_JoinFromField(System.Int32)">
            <summary>
            Gets name of FromField in external table for specified join operation.
            </summary>
            <param name="joinIndex">Index of join operation.</param>
            <returns>Name of FromField in external table.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITable.get_JoinToField(System.Int32)">
            <summary>
            Gets name of ToField in this table for specified join operation.
            </summary>
            <param name="joinIndex">Index of join operation.</param>
            <returns>Name of ToField in this table.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITable.ClearCache">
            <summary>
            Clears the cache (cell values already loaded in the memory).
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.ITable.get_JoinFields(System.Int32)">
            <summary>
            Gets string with the names of fields which were used in join operation.
            </summary>
            <param name="joinIndex">Index of the join.</param>
            <returns>The string with names.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.ITable.Filename">
            <summary>
            Gets the filename of the DBF file if the table is bound to one.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.ITable.get_JoinOptions(System.Int32)">
            <summary>
            Gets the options of the join operation.
            </summary>
            <param name="joinIndex">Index of the join.</param>
            <returns>The string with join options.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.ITable.get_RowIsModified(System.Int32)">
            <summary>
            Gets a value indicating whether the row values have been modified.
            </summary>
            <param name="RowIndex">Index of the row.</param>
            <returns>True if the row is modified.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="T:MapWinGIS.ITileProviders">
            <summary>
            Holds the list of tile providers associated with %Tiles class.
            </summary>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.ITileProviders.Add(System.Int32,System.String,System.String,MapWinGIS.tkTileProjection,System.Int32,System.Int32)">
            <summary>
            Adds a custom tile provider.
            </summary>
            <param name="Id">Unique ID to to access this provider later on (including caching).</param>
            <param name="Name">Arbitrary name of provider.</param>
            <param name="urlPattern">Url pattern for provider. The pattern may include the following varying components: 
            {zoom}, {x}, {y}, {switch:n1,n2,n3}. For example, the following can be used to setup OpenStreetMap 
            as custom provider: "https://{switch:a,b,c}.tile.openstreetmap.org/{zoom}/{x}/{y}.png".</param>
            <param name="Projection">Projection used by tile server. Projection must not necessarily match the map projection.
            MapWinGIS will try to do the transformation even if projection don't match, though these may lead to 
            distortions and gaps between tiles.</param>
            <param name="minZoom">Minimum zoom level provided by server.</param>
            <param name="maxZoom">Maximum zoom level provided by server.</param>
            <returns>True on success and false otherwise</returns>
        </member>
        <member name="M:MapWinGIS.ITileProviders.Clear(System.Boolean)">
            <summary>
            Removes custom providers from the list.
            </summary>
            <param name="ClearCache">True in case cached tiles, both from RAM and disk, for custom providers should be removed as well.</param>
        </member>
        <member name="P:MapWinGIS.ITileProviders.Count">
            <summary>
            Gets the number of providers in the list.
            </summary>
        </member>
        <member name="M:MapWinGIS.ITileProviders.Remove(System.Int32,System.Boolean)">
            <summary>
            Removes specified custom provider from the list.
            </summary>
            <param name="ProviderId">Id of provider to be removed.</param>
            <param name="ClearCache">True in case cached tiles should be removed as well.</param>
            <returns>True if specified provider was removed, and false otherwise.</returns>
            <remarks>It's not allowed to remove default providers.</remarks>
        </member>
        <member name="M:MapWinGIS.ITileProviders.get_Id(System.Int32)">
            <summary>
            Gets provider ID by its index in the list.
            </summary>
            <param name="Index">The index of provider in the list.</param>
            <returns>ID of the provider.</returns>
            <remarks>For default providers the index in the list and ID are the same. For custom providers any 
            unique ID can be specified on creation, which may not match the index in the list.</remarks>
        </member>
        <member name="M:MapWinGIS.ITileProviders.get_IndexByProvider(MapWinGIS.tkTileProvider)">
            <summary>
            Gets the index of default provider in the list.
            </summary>
            <param name="Provider">Provider to find index for.</param>
            <returns>The index of provider in the list.</returns>
        </member>
        <member name="M:MapWinGIS.ITileProviders.get_IndexByProviderId(System.Int32)">
            <summary>
            Gets the index of provider in the list by its ID.
            </summary>
            <param name="ProviderId">Id of the provider.</param>
            <returns>The index of provider in the list.</returns>
        </member>
        <member name="M:MapWinGIS.ITileProviders.get_IsCustom(System.Int32)">
            <summary>
            Gets a value indicating whether given provider is a custom one.
            </summary>
            <param name="Index">Index of provider in the list.</param>
            <returns>True if provider is custom, false if it is a default one.</returns>
        </member>
        <member name="M:MapWinGIS.ITileProviders.get_Name(System.Int32)">
            <summary>
            Gets name of the specific provider.
            </summary>
            <param name="Index">Index of the provider in the list.</param>
            <returns>Name of the provider.</returns>
        </member>
        <member name="M:MapWinGIS.ITileProviders.set_Name(System.Int32,System.String)">
            <summary>
            Sets name of the specific providers.
            </summary>
            <param name="Index">Index of the provider in the list.</param>
            <param name="newVal">New name of the provider.</param>
            <remarks>Providers are cached by ID therefore renaming of provider won't affect its cache.</remarks>
        </member>
        <member name="M:MapWinGIS.ITileProviders.get_Projection(System.Int32)">
            <summary>
            Gets server projection for specified provider.
            </summary>
            <param name="Index">Index of the provider in the list.</param>
            <returns>Server projection.</returns>
        </member>
        <member name="M:MapWinGIS.ITileProviders.get_Version(System.Int32)">
            <summary>
            Get a version string for specified provider.
            </summary>
            <param name="Index">Index of the provider in the list.</param>
            <returns>Version string.</returns>
            <remarks>Many tile servers include version as a parameter of HTTP request. 
            Tiles may not load if the obsolete version is passed.</remarks>
        </member>
        <member name="M:MapWinGIS.ITileProviders.set_Version(System.Int32,System.String)">
            <summary>
            Sets a version string for specified provider.
            </summary>
            <param name="Index">Index of the provider in the list.</param>
            <param name="retVal">Version string.</param>
        </member>
        <member name="M:MapWinGIS.ITileProviders.get_MaxZoom(System.Int32)">
            <summary>
            Gets maximum zoom level provided by tile server.
            </summary>
            <param name="Index">Index of the provider in the list.</param>
            <returns>Maximum zoom.</returns>
            <remarks>Zoom level is hardcoded for default providers and passed as a parameter 
            on creation for custom providers. Server isn't queried to check whether the values are correct.</remarks>
        </member>
        <member name="M:MapWinGIS.ITileProviders.get_MinZoom(System.Int32)">
            <summary>
            Gets minimum zoom level provided by tile server.
            </summary>
            <param name="Index">Index of the provider in the list.</param>
            <returns>Minimum zoom.</returns>
        </member>
        <member name="M:MapWinGIS.ITileProviders.get_UrlPattern(System.Int32)">
            <summary>
            Gets URL pattern for custom provider.
            </summary>
            <param name="Index">Index of the provider in the list.</param>
            <returns>URL pattern for custom providers and empty string for default ones.</returns>
        </member>
        <member name="P:MapWinGIS.ITileProviders.GlobalCallback">
            <summary>
            Gets or sets a Callback object which handles progress and error messages.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.ITileProviders.LastErrorCode">
            <summary>
            Gets the code of last error which took place inside this object.
            </summary>
        </member>
        <member name="M:MapWinGIS.ITileProviders.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the specific error code.
            </summary>
            <param name="ErrorCode">The error code returned by LastErrorCode property.</param>
            <returns>String with the description.</returns>
        </member>
        <member name="M:MapWinGIS.ITileProviders.get_Language(System.Int32)">
            <summary>
            Gets language settings for a given provider.
            </summary>
            <param name="Index">Index of provider in list.</param>
            <remarks>The setting will be included in http request and if supported by tile provider 
            it may actually change language information is displayed on map with.</remarks>
            <returns>Language settings, e.g. "en", "fr", "ru", etc. "en" is used by default.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.ITileProviders.set_Language(System.Int32,System.String)">
            <summary>
            Sets language settings for a given provider.
            </summary>
            <param name="Index">Index of provider in list.</param>
            <param name="newVal">Language settings, e.g. "en", "fr", "ru", etc.</param>
            <remarks>The setting will be included in http request and if supported by tile provider 
            it may actually change language information is displayed on map with.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.ITileProviders.get_GeographicBounds(System.Int32)">
            <summary>
            Gets the geographic bounds of the specified provider.
            </summary>
            <param name="Index">The index of the provider.</param>
            <returns>Geographic bounds in decimal degrees.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.ITileProviders.set_GeographicBounds(System.Int32,MapWinGIS.Extents)">
            <summary>
            Sets the geographic bounds of the specified provider.
            </summary>
            <param name="Index">The index.</param>
            <param name="pVal">The p value.</param>
            \new494 Added in version 4.9.4
        </member>
        <!-- Badly formed XML comment ignored for member "T:MapWinGIS.ITiles" -->
        <member name="M:MapWinGIS.ITiles.AutodetectProxy">
            <summary>
            Retrieves and applies proxy server settings (address and port) from IE settings
            </summary>
            <returns>True on success and false otherwise</returns>
        </member>
        <member name="M:MapWinGIS.ITiles.CheckConnection(System.String)">
            <summary>
            Sends HTTP request to the specified address and reports back whether there is a response.
            </summary>
            <param name="url">The URL to send request to.</param>
            <returns>True if there is a connection (even if there is and error code like 404 in response) and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.ITiles.ClearCache(MapWinGIS.tkCacheType)">
            <summary>
            Clears cache of the specified type.
            </summary>
            <param name="cacheType">Type of cache to be cleared.</param>
        </member>
        <member name="M:MapWinGIS.ITiles.ClearCache2(MapWinGIS.tkCacheType,MapWinGIS.tkTileProvider,System.Int32,System.Int32)">
            <summary>
            Clears cache of the specified to type for a given provider and scales.
            </summary>
            <param name="cacheType">Type of cache to be cleared.</param>
            <param name="Provider">Tile provider to be cleared. ProviderNone will clear tiles for all providers.</param>
            <param name="fromScale">Minimal scale (zoom) to clear tiles for.</param>
            <param name="toScale">Maximum scale (zoom) to clear tiles for.</param>
        </member>
        <member name="P:MapWinGIS.ITiles.CurrentZoom">
            <summary>
            Gets zoom (scale) of tiles currently displayed on the map.
            </summary>
            <remarks>Tile zooms are discrete, but the scale for Map control is continuous. 
            Therefore in most cases tiles of particular zoom will be somewhat additionally scaled to fit the map, 
            i.e. their display size on map won't be equal to the original 256 pixels.</remarks>
        </member>
        <member name="M:MapWinGIS.ITiles.Deserialize(System.String)">
            <summary>
            Restores the state of Tiles class from string.
            </summary>
            <param name="newVal">Serialized string generated by Tiles.Serialize method.</param>
        </member>
        <member name="P:MapWinGIS.ITiles.DiskCacheFilename">
            <summary>
            Gets or sets the filename of SQLite database to cache tiles into.
            </summary>
        </member>
        <member name="M:MapWinGIS.ITiles.GetTileBounds(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets the bounds of specific tile in decimal degrees (for inner use/debug purposes).
            </summary>
            <param name="ProviderId">Id of the provider.</param>
            <param name="zoom">Zoom level for a tile.</param>
            <param name="tileX">X coordinate of the tile within zoom level.</param>
            <param name="tileY">Y coordinate of the tile within zoom level.</param>
            <returns>Bounds in decimal degrees or null on failure.</returns>
        </member>
        <member name="M:MapWinGIS.ITiles.GetTilesIndices(MapWinGIS.Extents,System.Int32,System.Int32)">
            <summary>
            Gets indices of tiles within specified bounds in coordinates of the given zoom level.
            </summary>
            <param name="boundsDegrees">Bounds in decimal degrees.</param>
            <param name="zoom">Zoom level.</param>
            <param name="Provider">Id of the provider.</param>
            <returns>Extents object with tile bounds or null on failure.</returns>
            <remarks>Can be used at the first step of prefetching operation.</remarks>
        </member>
        <member name="P:MapWinGIS.ITiles.GridLinesVisible">
            <summary>
            Gets or sets a value indicating whether a grid should be drawn to displayes borders of tiles (for debug purposes).
            </summary>
        </member>
        <member name="P:MapWinGIS.ITiles.MaxScaleToCache">
            <summary>
            Gets or sets the maximum zoom (scale) to be cached if the automatic caching is chosen.
            </summary>
            <remarks>The setting won't affect tile prefetching.</remarks>
        </member>
        <member name="P:MapWinGIS.ITiles.MinScaleToCache">
            <summary>
            Gets or sets the minimum zoom (scale) to be cached if the automatic caching is chosen.
            </summary>
            <remarks>The setting won't affect tile prefetching.</remarks>
        </member>
        <member name="M:MapWinGIS.ITiles.Prefetch(System.Double,System.Double,System.Double,System.Double,System.Int32,System.Int32,MapWinGIS.IStopExecution)">
            <summary>
            Caches tiles of the specified provider within specified geographic bounds 
            to SQLite database for further offline use.
            </summary>
            <param name="minLat">Minimal latitude to cache within.</param>
            <param name="maxLat">Maximum latitude to cache within.</param>
            <param name="minLng">Minimal longitude to cache within.</param>
            <param name="maxLng">Maximum longitude to cache within.</param>
            <param name="zoom">Zoom level.</param>
            <param name="ProviderId">Id of the provider.</param>
            <param name="stop">StopExecution interface implementation to stop the operation prematurely.</param>
            <returns>The number of tiles scheduled for caching.</returns>
            <remarks>The operation is executed asynchronously. To get the progress information use Tiles.GlobalCallback property.
            The callback will returned the number of tiles already downloaded. When operation is completed, -1 will be returned.</remarks>
        </member>
        <member name="M:MapWinGIS.ITiles.Prefetch2(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,MapWinGIS.IStopExecution)">
            <summary>
             Caches tiles of the specified provider to SQLite database for further offline use.
            </summary>
            <param name="minX">Minimum X index of tile to be cached (in coordinates of tile zoom level).</param>
            <param name="maxX">Maximum X index of tile to be cached (in coordinates of tile zoom level).</param>
            <param name="minY">Minimum Y index of tile to be cached (in coordinates of tile zoom level).</param>
            <param name="maxY">Maximum Y index of tile to be cached (in coordinates of tile zoom level).</param>
            <param name="zoom">Zoom level to be cached.</param>
            <param name="ProviderId">Id of the provider.</param>
            <param name="stop">StopExecution interface implementation to stop the operation prematurely.</param>
            <returns>Number of tiles scheduled for caching.</returns>
            <remarks>The operation is executed asynchronously. See details in Tiles.Prefetch.</remarks>
        </member>
        <member name="M:MapWinGIS.ITiles.PrefetchToFolder(MapWinGIS.Extents,System.Int32,System.Int32,System.String,System.String,MapWinGIS.IStopExecution)">
            <summary>
            Caches tiles to the specified file system folder for further offline use.
            </summary>
            <param name="ext">Extents to cache within in decimal degrees.</param>
            <param name="zoom">Zoom level.</param>
            <param name="ProviderId">Id of the provider.</param>
            <param name="savePath">Directory to save files into. Nested folders for zoom levels, 
            X/Y coordinates will be created automatically.</param>
            <param name="fileExt">File extension to store tiles with.</param>
            <param name="stop">StopExecution interface implementation to stop the operation prematurely.</param>
            <returns>Number of tiles scheduled for caching.</returns>
            <remarks>Often tiles are saved with fictitious extension, like png.tile, 
            to avoid their listing in the gallery of smartphones for example. Tile consuming application often may be configured
            to handle such extensions.</remarks>
            <remarks>The operation is executed asynchronously. See details in Tiles.Prefetch.</remarks>
        </member>
        <member name="P:MapWinGIS.ITiles.Provider">
            <summary>
            Gets or sets active provider to serve the tiles.
            </summary>
            <remarks>The property will return ProviderCustom for custom provider and 
            won't be able to set a custom provider (use Tiles.ProviderId to do it).</remarks>
        </member>
        <member name="P:MapWinGIS.ITiles.ProviderId">
            <summary>
            Gets or sets active provider to server the tiles. Ids of both default and custom providers can be specified.
            </summary>
        </member>
        <member name="P:MapWinGIS.ITiles.ProviderName">
            <summary>
            Gets the name of the active provider.
            </summary>
        </member>
        <member name="P:MapWinGIS.ITiles.Providers">
            <summary>
            Gets list of the available default and custom tile providers.
            </summary>
        </member>
        <member name="P:MapWinGIS.ITiles.Proxy">
            <summary>
            Gets proxy server settings for tiles class including IP and port, e.g. 192.168.0.1:80.
            </summary>
        </member>
        <member name="M:MapWinGIS.ITiles.Serialize">
            <summary>
            Serializes the state of the Tiles class to be restored later with Tiles.Deserialize method.
            </summary>
            <returns>Serialized string.</returns>
        </member>
        <member name="M:MapWinGIS.ITiles.SetProxy(System.String,System.Int32)">
            <summary>
            Set proxy server for tiles class.
            </summary>
            <param name="address">IP address of proxy.</param>
            <param name="port">Port to be used.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.ITiles.SleepBeforeRequestTimeout">
            <summary>
            Gets or sets the amount of time in milliseconds a worker thread will sleep before the next HTTP request.
            </summary>
            <remarks>In some cases rapid caching of tiles can enact certain blocking logic for the IP address by server or one of the proxies.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.ITiles.UseServer">
            <summary>
            Gets or sets a value indicating whether server requests will be made to get the tiles.
            </summary>
            <remarks>When set to false tiles will only be loaded from cache.</remarks>
        </member>
        <member name="P:MapWinGIS.ITiles.Visible">
            <summary>
            Gets or sets a value indicating whether the tiles will be displayed on the map.
            </summary>
            <remarks>When set to false tiles won't be requested either from server or cache.</remarks>
        </member>
        <member name="M:MapWinGIS.ITiles.get_CacheSize(MapWinGIS.tkCacheType)">
            <summary>
            Gets the current size of cache.
            </summary>
            <param name="cacheType">The type of cache to return size for.</param>
            <returns>The size of cache in MB.</returns>
        </member>
        <member name="M:MapWinGIS.ITiles.get_CacheSize2(MapWinGIS.tkCacheType,MapWinGIS.tkTileProvider,System.Int32)">
            <summary>
            Gets the current size of cache used for specific provider and zoom level.
            </summary>
            <param name="cacheType">The type of cache to return size for.</param>
            <param name="Provider">Provider. ProviderNone will return size for all providers.</param>
            <param name="scale">Scale (zoom) level. -1 will return size for all zoom levels.</param>
            <returns>The size of cache in MB.</returns>
        </member>
        <member name="M:MapWinGIS.ITiles.get_DoCaching(MapWinGIS.tkCacheType)">
            <summary>
            Gets the value indicating whether tiles requested from server will be automatically cached.
            </summary>
            <param name="cacheType">The type of cache to be used.</param>
            <returns>True if automatic caching is on.</returns>
        </member>
        <member name="M:MapWinGIS.ITiles.set_DoCaching(MapWinGIS.tkCacheType,System.Boolean)">
            <summary>
            Sets the value indicating whether tiles requested from server will be automatically cached.
            </summary>
            <param name="cacheType">The type of cache to be used.</param>
            <param name="pVal">True to turn automatic caching on.</param>
        </member>
        <member name="M:MapWinGIS.ITiles.get_MaxCacheSize(MapWinGIS.tkCacheType)">
            <summary>
            Gets the maximum allowable size of cache.
            </summary>
            <param name="cacheType">The type of cache.</param>
            <returns>Maximum size in MB.</returns>
        </member>
        <member name="M:MapWinGIS.ITiles.set_MaxCacheSize(MapWinGIS.tkCacheType,System.Double)">
            <summary>
            Sets the maximum allowable size of cache.
            </summary>
            <param name="cacheType">The type of cache.</param>
            <param name="pVal">Maximum size in MB.</param>
        </member>
        <member name="M:MapWinGIS.ITiles.get_UseCache(MapWinGIS.tkCacheType)">
            <summary>
            Gets a value indicating whether specific type of cache should be used to display tiles.
            </summary>
            <param name="cacheType">The type of cache.</param>
            <returns>True if the specific type of cache can be used.</returns>
        </member>
        <member name="M:MapWinGIS.ITiles.set_UseCache(MapWinGIS.tkCacheType,System.Boolean)">
            <summary>
            Sets a value indicating whether specific type of cache should be used to display tiles.
            </summary>
            <param name="cacheType">The type of cache.</param>
            <param name="pVal">True if the specific type of cache can be used.</param>
        </member>
        <member name="P:MapWinGIS.ITiles.LogErrorsOnly">
            <summary>
            Gets or sets a value indicating whether log will include all HTTP requests or only unsuccessful ones.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.ITiles.LogFilename">
            <summary>
            Gets filename to write log into.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.ITiles.LogIsOpened">
            <summary>
            Gets a value indicating whether logging of HTTP requests will be performed.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.ITiles.StartLogRequests(System.String,System.Boolean)">
            <summary>
            Starts logging HTTP requests for tile server.
            </summary>
            <param name="Filename">Filename to write log into. New file will be created any existing file - overwritten.</param>
            <param name="errorsOnly">Indicate whether only unsuccessful requests should logged.</param>
            <returns>True if log was opened, and false on failure.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.ITiles.StopLogRequests">
            <summary>
            Stops logging of HTTP requests to a file.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.ITiles.PrefetchErrorCount">
            <summary>
            Gets the number of unsuccessful HTTP requests during prefetching operation (Tiles.Prefetch and overloads).
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.ITiles.PrefetchTotalCount">
            <summary>
            Gets the total number of requests carried out during prefetching operation.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.ITiles.ClearPrefetchErrors">
            <summary>
            Clears information about prefetching errors.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.ITiles.get_DiskCacheCount(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Gets number of tiles stored in disk cache for a given provider, zoom and region.
            </summary>
            <param name="Provider">Id of provider.</param>
            <param name="zoom">Zoom level.</param>
            <param name="xMin">Min X index of tile.</param>
            <param name="xMax">Max X index of tile.</param>
            <param name="yMin">Min Y index of tile.</param>
            <param name="yMax">Max Y index of tile.</param>
            <returns>Number of tiles.</returns>
        </member>
        <member name="P:MapWinGIS.ITiles.GlobalCallback">
            <summary>
            Gets or sets a Callback object which handles progress and error messages.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.ITiles.Key">
            <summary>
            A text string associated with object. Any value can be stored by developer in this property.
            </summary>
        </member>
        <member name="P:MapWinGIS.ITiles.LastErrorCode">
            <summary>
            Gets the code of last error which took place inside this object.
            </summary>
        </member>
        <member name="M:MapWinGIS.ITiles.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the specific error code.
            </summary>
            <param name="ErrorCode">The error code returned by LastErrorCode property.</param>
            <returns>String with the description.</returns>
        </member>
        <member name="P:MapWinGIS.ITiles.MaxZoom">
            <summary>
            Gets maximum available zoom level for the current provider.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.ITiles.MinZoom">
            <summary>
            Gets minimum available zoom level for the current provider.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.ITiles.ProjectionStatus">
            <summary>
            Get information about whether map projection and tile projection match.
            </summary>
            <remarks>This diagnostic value indicates whether tiles will be rendered without scaling and distortions and if they will be rendered at all.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.ITiles.ServerProjection">
            <summary>
            Gets projection used by specific tile service.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.ITiles.ClearProxyAuthorization">
            <summary>
            Clears user name and password set by Tiles.SetProxyAuthorization method.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.ITiles.SetProxyAuthorization(System.String,System.String,System.String)">
            <summary>
            Sets credentials for proxy authorization. 
            </summary>
            <remarks>HTTP client will use this credentials when 401 or 407 response is received for original request:
            http://msdn.microsoft.com/en-us/library/7shxzbwb%28v=vs.80%29.aspx</remarks>
            <param name="username">Username.</param>
            <param name="password">Password.</param>
            <param name="domain">Domain name.</param>
            <returns>True on success.</returns>
            \new493 Added in version 4.9.3
        </member>
        <member name="T:MapWinGIS.ITin">
            <summary>
            Represents a triangulated irregular network which may be displayed in the map.
            </summary>
            <remarks> A tin may be created from a grid, or opened from file.</remarks>
        </member>
        <member name="P:MapWinGIS.ITin.CdlgFilter">
            <summary>
            The string for common open dialog for filtering files which may be used as a source for TIN (*.tin).
            </summary>
        </member>
        <member name="M:MapWinGIS.ITin.Close">
            <summary>
            Closes the TIN.
            </summary>
            <returns>A boolean value representing the success or failure of closing the TIN.</returns>
        </member>
        <member name="M:MapWinGIS.ITin.CreateNew(MapWinGIS.Grid,System.Double,MapWinGIS.SplitMethod,System.Double,System.Int32,System.Int32,MapWinGIS.ICallback)">
            <summary>
            Creates a new TIN object from the specified grid. 
            </summary>
            <param name="Grid">The grid to be used to create the new TIN.</param>
            <param name="Deviation">If the distance between the grid elevation and the triangle surface elevation at any given 
            point is greater than this value, the triangle will be split at this location. This value is in projected map coordinates.</param>
            <param name="SplitTest">The method to use when splitting triangles.</param>
            <param name="STParam">Split Test Parameter. This value depends on the SplitMethod specified. It will either be the 
            smallest inscribed radius allowed measured in projected map coordinates, or it will be the         /// smallest angle allowed measured in degrees.</param>
            <param name="MeshDivisions">This is the number of dividers used to create an initial mesh for the algorithm. Each cell in 
            the initial mesh is subdivided into smaller triangles depending on the deviation within the cell.  </param>
            <param name="MaximumTriangles">Optional. The maximum number of triangles allowed in the TIN. The default value is 1073741824. </param>
            <param name="cBack">Optional. The ICallback object which will receive progress and error messages while the TIN is being created.</param>
            <returns>A boolean value representing the success or failure of creating the new TIN.</returns>
        </member>
        <member name="M:MapWinGIS.ITin.CreateTinFromPoints(System.Array)">
            <summary>
            Creates a TIN from the array of points.
            </summary>
            <param name="Points">An array of Point type.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.ITin.Filename">
            <summary>
            The filename associated with the object.
            </summary>
        </member>
        <member name="P:MapWinGIS.ITin.GlobalCallback">
            <summary>
            The global callback is the interface used by MapWinGIS to pass progress and error events to interested applications.
            </summary>
        </member>
        <member name="P:MapWinGIS.ITin.Key">
            <summary>
            The key may be used by the programmer to store any string data associated with the object.
            </summary>
        </member>
        <member name="M:MapWinGIS.ITin.Max(System.Double@,System.Double@,System.Double@)">
            <summary>
            Gets the maximum x, y, and z values of the TIN's extents. 
            </summary>
            <param name="x">Returns the maximum x value of the TIN's extents.</param>
            <param name="y">Returns the maximum y value of the TIN's extents.</param>
            <param name="Z">Returns the maximum Z value of the TIN's extents.</param>
        </member>
        <member name="M:MapWinGIS.ITin.Min(System.Double@,System.Double@,System.Double@)">
            <summary>
            Gets the minimum x, y, and z values of the TIN's extents.
            </summary>
            <param name="x">Returns the minimum x value of the TIN's extents.  </param>
            <param name="y">Returns the minimum y value of the TIN's extents</param>
            <param name="Z">Returns the minimum Z value of the TIN's extents.</param>
        </member>
        <member name="P:MapWinGIS.ITin.NumTriangles">
            <summary>
            Returns the number of the triangles in the TIN.
            </summary>
        </member>
        <member name="P:MapWinGIS.ITin.NumVertices">
            <summary>
            Returns the number of the vertices in the TIN.
            </summary>
        </member>
        <member name="M:MapWinGIS.ITin.Open(System.String,MapWinGIS.ICallback)">
            <summary>
            Opens a TIN from the specified file.
            </summary>
            <param name="TinFile">The filename of the TIN to be opened.</param>
            <param name="cBack">.Optional. The ICallback object which will receive progress and error messages while the TIN is being opened.</param>
            <returns>A boolean value representing the success or failure of opening the TIN.</returns>
        </member>
        <member name="M:MapWinGIS.ITin.Save(System.String,MapWinGIS.ICallback)">
            <summary>
            Saves the TIN object under the specified filename.
            </summary>
            <param name="TinFilename">The filename to be used to save the TIN.</param>
            <param name="cBack">Optional. The ICallback object which will receive progress and error messages while the TIN is being saved.</param>
            <returns>A boolean value representing the success or failure of saving the TIN. </returns>
        </member>
        <member name="M:MapWinGIS.ITin.Select(System.Int32@,System.Double,System.Double,System.Double@)">
            <summary>
            Checks if there is a triangle in the TIN at the specified x and y coordinate.
            </summary>
            <remarks>The index of any triangle at that location is returned through TriangleHint, 
            and the z coordinate for the triangle surface at the specified location is returned through Z. 
            </remarks>
            <param name="TriangleHint">The index of the triangle to start the search with. If the triangle hint is a 
            good guess, the search can be much faster.</param>
            <param name="x">The x projected map coordinate of the point that is being used to test if it lies within a TIN triangle.</param>
            <param name="y">The y projected map coordinate of the point that is being used to test if it lies within a TIN triangle.</param>
            <param name="Z">The z projected map coordinate of the selected triangle's surface will be returned by this parameter.</param>
            <returns></returns>
        </member>
        <member name="M:MapWinGIS.ITin.Triangle(System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets the vertex indices of the specified triangle in the TIN.
            </summary>
            <param name="TriIndex">The index of the triangle in the TIN for which the vertex indices are required.</param>
            <param name="vtx1Index">The index of the first vertex in the specified triangle in the TIN.</param>
            <param name="vtx2Index">The index of the second vertex in the specified triangle in the TIN.</param>
            <param name="vtx3Index">The index of the third vertex in the specified triangle in the TIN.</param>
        </member>
        <member name="M:MapWinGIS.ITin.TriangleNeighbors(System.Int32,System.Int32@,System.Int32@,System.Int32@)">
            <summary>
            Gets the indices of the specified triangle's neighboring triangles in the TIN.
            </summary>
            <param name="TriIndex">The index of the triangle to get the neighbors of in the TIN.</param>
            <param name="triIndex1">The index of the first neighbor the specified triangle.</param>
            <param name="triIndex2">The index of the second neighbor the specified triangle.</param>
            <param name="triIndex3">The index of the third neighbor the specified triangle.</param>
        </member>
        <member name="M:MapWinGIS.ITin.Vertex(System.Int32,System.Double@,System.Double@,System.Double@)">
            <summary>
            Gets the x, y, and Z projected map coordinates of the specified vertex in the TIN. 
            </summary>
            <param name="VtxIndex">The index of the vertex for which the x, y, and Z coordinates are required.</param>
            <param name="x">Returns the x projected map coordinate of the specified vertex in the TIN.</param>
            <param name="y">Returns the x projected map coordinate of the specified vertex in the TIN.</param>
            <param name="Z">Returns the x projected map coordinate of the specified vertex in the TIN. </param>
        </member>
        <member name="M:MapWinGIS.ITin.get_ErrorMsg(System.Int32)">
            <summary>
            Retrieves the error message associated with the specified error code.
            </summary>
            <param name="ErrorCode"></param>
            <returns></returns>
        </member>
        <member name="M:MapWinGIS.ITin.get_IsNDTriangle(System.Int32)">
            <summary>
            Gets whether or not a triangle is a no-data triangle.
            </summary>
            <param name="TriIndex">The index of the triangle to be tested whether or not it is a no-data triangle.</param>
            <returns>A boolean value representing whether or not the triangle is a no-data triangle.</returns>
        </member>
        <member name="T:MapWinGIS.IUndoList">
            <summary>
            Holds list of actions performed by user with interactive editing tools to enable undo functionality.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IUndoList.Add(MapWinGIS.tkUndoOperation,System.Int32,System.Int32)">
            <summary>
            Registers editing operation in undo list.
            </summary>
            <param name="operationType">Type of undo operation (uoMoveShapes and uoRotateShapes aren't accepted here).</param>
            <param name="LayerHandle">Layer handle the subject shape belongs to.</param>
            <param name="ShapeIndex">Index if subject shape.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IUndoList.BeginBatch">
            <summary>
            Starts batch which can hold one or more operation. UndoList.Undo and UndoList.Redo
            process all operations within batch as a single entity.
            </summary>
            <returns>True on success, and false if there is a batch was already started.</returns>
        </member>
        <member name="M:MapWinGIS.IUndoList.Clear">
            <summary>
            Remove all operations from undo list.
            </summary>
        </member>
        <member name="M:MapWinGIS.IUndoList.ClearForLayer(System.Int32)">
            <summary>
            Clears all operations for particular layer from undo list.
            </summary>
            <param name="LayerHandle">Layer handle.</param>
            <remarks>Should be called when certain layer is remove from map or editing session for it is finished.</remarks>
        </member>
        <member name="M:MapWinGIS.IUndoList.EndBatch">
            <summary>
            Ends batch started by UndoList.BeginBatch command.
            </summary>
            <returns>Returns number of operation in the batch.</returns>
        </member>
        <member name="P:MapWinGIS.IUndoList.Key">
            <summary>
            A text string associated with object. Any value can be stored by developer in this property.
            </summary>
        </member>
        <member name="P:MapWinGIS.IUndoList.LastErrorCode">
            <summary>
            Gets the code of last error which took place inside this object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IUndoList.RedoCount">
            <summary>
            Number operations performed by users that were undone but can be applied once again.
            </summary>
        </member>
        <member name="P:MapWinGIS.IUndoList.TotalLength">
            <summary>
            Returns total number of entries in undo list.
            </summary>
            <remarks>All opeations within batch are considered a single entries.</remarks>
        </member>
        <member name="P:MapWinGIS.IUndoList.UndoCount">
            <summary>
            Number of operations performed by user that can be reverted with UndoList.Undo method.
            </summary>
        </member>
        <member name="M:MapWinGIS.IUndoList.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the specific error code.
            </summary>
            <param name="ErrorCode">The error code returned by LastErrorCode property.</param>
            <returns>String with the description.</returns>
        </member>
        <member name="M:MapWinGIS.IUndoList.Redo(System.Boolean)">
            <summary>
            Reapplies a single operation in the list that was previously undone.
            </summary>
            <param name="ZoomToShape">If true, zooms to the subject shape in case it's outside the current map view.</param>
            <returns>True on success, i.e. there was at least one operation to redo.</returns>
        </member>
        <member name="M:MapWinGIS.IUndoList.Undo(System.Boolean)">
            <summary>
            Reverts a single operation performed by user.
            </summary>
            <param name="ZoomToShape">If true, zooms to the subject shape in case it's outside the current map view.</param>
            <returns>True on success, i.e. there was at least one operation to undo</returns>
        </member>
        <member name="T:MapWinGIS.IUtils">
            <summary>
            A utils object provides access to a set of utility functions to perform a variety of tasks on other objects such as grids, images, points, shapes, shapefiles, tins, etc.  
            </summary>
        </member>
        <member name="M:MapWinGIS.IUtils.ClipPolygon(MapWinGIS.PolygonOperation,MapWinGIS.Shape,MapWinGIS.Shape)">
            <summary>
            Modifies a polygon using the specified method. 
            </summary>
            <param name="op">The operation to use on the subject polygon.</param>
            <param name="SubjectPolygon">The first polygon to perform the specified polygon operation on.</param>
            <param name="ClipPolygon">The second polygon to perform the specified polygon operation with.</param>
            <returns>The polygon shape created using the specified polygon operation.</returns>
        </member>
        <member name="M:MapWinGIS.IUtils.ColorByName(MapWinGIS.tkMapColor)">
            <summary>
            Returns the numeric representation for the specified color.
            </summary>
            <remarks>The return value can be used for all properties which require color specification as unsigned integer.</remarks>
            <param name="Name">The name of the color.</param>
            <returns>The numeric code of the color.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IUtils.GenerateHillShade(System.String,System.String,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            Generates a hillshade image for a raster data source. 
            </summary>
            <remarks>This code was written by Matt Perry, perrygeo@gmail.com, published in Gdal-dev Digest, Vol 19, Issue 20 
            Note: Scale for Feet/Latlong use scale=370400, for Meters/LatLong use scale=111120 (based on the GRASS GIS algorithm 
            from r.shaded.relief) </remarks>
            <param name="bstrGridFilename">The input raster data. This can be in virtually any raster data format.</param>
            <param name="bstrShadeFilename">The output image filename. This can be virtually any image format, the extension will determine the format. </param>
            <param name="Z">Z Factor. Defaults to 1.</param>
            <param name="scale">Scale Factor. Defaults to 1.</param>
            <param name="az">Azimuth. Defaults to 315.</param>
            <param name="alt">Altitude. Defaults to 45.</param>
            <returns></returns>
        </member>
        <member name="P:MapWinGIS.IUtils.GlobalCallback">
            <summary>
            The global callback is the interface used by MapWinGIS to pass progress and error events to interested applications.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="M:MapWinGIS.IUtils.GridInterpolateNoData(MapWinGIS.Grid,MapWinGIS.ICallback)">
            <summary>
            Uses valid data in a grid to replace grid cells containing no-data values with an interpolated value. 
            </summary>
            <param name="Grd">The grid for which no-data cells will be replaced with interpolated values. </param>
            <param name="cBack">The ICallback object which will receive progress and error messages. </param>
            <returns>A boolean value representing the success or failure of replacing no-data cells in the grid with interpolated values.</returns>
        </member>
        <member name="M:MapWinGIS.IUtils.GridMerge(System.Object,System.String,System.Boolean,MapWinGIS.GridFileType,MapWinGIS.ICallback)">
            <summary>
            Merges multiple grids into a single output grid. 
            </summary>
            <param name="Grids">An array of grid objects to be merged into one grid.</param>
            <param name="MergeFilename">The filename to use for the new merged grid. </param>
            <param name="InRam">Optional. A boolean value representing whether to create the merged grid in RAM or on disk</param>
            <param name="GrdFileType">Optional. The file type of the new merged grid. </param>
            <param name="cBack">Optional. The ICallback object which will receive progress and error messages while the grids are being merged.</param>
            <returns>The new merged grid.</returns>
        </member>
        <member name="M:MapWinGIS.IUtils.GridReplace(MapWinGIS.Grid,System.Object,System.Object,MapWinGIS.ICallback)">
            <summary>
            Replaces all occurrences of a value in the grid with a new value. 
            </summary>
            <param name="Grd">The grid to replace the specified value in.</param>
            <param name="OldValue">The value in the grid to be replaced with the new value.</param>
            <param name="newValue">The value to replace the old values with.</param>
            <param name="cBack">The ICallback object which will receive progress and error mesages while 
            the old value is being replaced with the new values in the grid.</param>
            <returns>A boolean value representing the success or failure of replacing the old value with the new value 
            in the grid.</returns>
        </member>
        <member name="M:MapWinGIS.IUtils.GridToGrid(MapWinGIS.Grid,MapWinGIS.GridDataType,MapWinGIS.ICallback)">
            <summary>
            Creates a new grid of the same size as the original grid, converting the values of the original grid into a different data type in 
            the new grid.
            </summary>
            <param name="Grid">The original grid.</param>
            <param name="OutDataType">The data type to convert the original grid values to for the new grid values.</param>
            <param name="cBack">The ICallback object which will receive progress and error messages while 
            the original grid values are converted and copied into the new grid.</param>
            <returns>The new grid filled with the converted values of the original grid.</returns>
        </member>
        <member name="M:MapWinGIS.IUtils.GridToShapefile(MapWinGIS.Grid,MapWinGIS.Grid,MapWinGIS.ICallback)">
            <summary>
            Creates a new shapefile from the grid. Note: It is important that the flow grid is used when there are any ambiguous parts of 
            the grid.
            </summary>
            <param name="Grid">The grid to be converted to a shapefile.</param>
            <param name="ConnectionGrid">Optional. The flow grid that is used to resolve any ambiguity. Without this flow grid the output 
            results are somewhat unpredictable.</param>
            <param name="cBack">The ICallback object which will receive progress and error messages while 
            the grid is being converted to the shapefile.</param>
            <returns></returns>
        </member>
        <member name="P:MapWinGIS.IUtils.Key">
            <summary>
            The key may be used by the programmer to store any string data associated with the object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IUtils.LastErrorCode">
            <summary>
            Retrieves the last error generated in the object. 
            </summary>
        </member>
        <member name="M:MapWinGIS.IUtils.MergeImages(System.Array,System.String)">
            <summary>
            Merges several images in a single image.
            </summary>
            <remarks>All the input images must be of the same size. 
            The color marked in the input image as transparent won't be passed to the output.</remarks>
            <param name="InputNames">An array of string type with the filenames of the images.</param>
            <param name="OutputName">The name if te output file.</param>
            <returns></returns>
            \include MergeImages.cs
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IUtils.OGRLayerToShapefile(System.String,MapWinGIS.ShpfileType,MapWinGIS.ICallback)">
            <summary>
            Partially implemented. Creates a shapefile from any vector format supported by OGR library.
            </summary>
            <remarks>The method needs testing and elaboration to handle the peculiarities of various data formats.</remarks>
            <param name="Filename">The name of the vector data source.</param>
            <param name="ShpType">The type of the output shapefile.</param>
            <param name="cBack">The callback object to return information about progress and errors.</param>
            <returns>The reference to the resulting shapefile or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IUtils.PointInPolygon(MapWinGIS.Shape,MapWinGIS.Point)">
            <summary>
            Gets whether or not a point lies within the specified polygon shape.
            </summary>
            <remarks>There is a faster option available when working with shapefiles: PointInShape.</remarks>
            <param name="Shp">The polygon shape to perform the test on.</param>
            <param name="TestPoint">The point to test whether or not it lies within the specified polygon shape.</param>
            <returns>A boolean value representing whether or not the point lies within the shape.</returns>
        </member>
        <member name="M:MapWinGIS.IUtils.RemoveColinearPoints(MapWinGIS.Shapefile,System.Double,MapWinGIS.ICallback)">
            <summary>
            Removes colinear points from a shapefile. 
            </summary>
            <remarks>A shapefile containing colinear points leads to the shapefile taking up 
            unnecessary space since some points in the shapefile add detail to the display of the shapes. </remarks>
            <param name="Shapes">The shapefile to remove colinear points from.</param>
            <param name="LinearTolerance">Points will be considered colinear if the distance in between them is with in this tolerance. This 
            distance is measured in projected map coordinates. </param>
            <param name="cBack">The ICallback object which will receive progress and error messages while
            colinear points are being removed.</param>
            <returns>A boolean value representing the success or failure of removing colinear points from the shapefile.</returns>
        </member>
        <member name="M:MapWinGIS.IUtils.ReprojectShapefile(MapWinGIS.Shapefile,MapWinGIS.GeoProjection,MapWinGIS.GeoProjection)">
            <summary>
            Reprojects a shapefile.
            </summary>
            <param name="sf">The input shapefile.</param>
            <param name="source">The source projection.</param>
            <param name="target">The target projection.</param>
            <returns>The copy of shapefile with new projection or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IUtils.ShapeMerge(MapWinGIS.Shapefile,System.Int32,System.Int32,MapWinGIS.ICallback)">
            <summary>
            Merges two shapes in a shapefile to create a new shape.
            </summary>
            <param name="Shapes">The shapefile containing the two shapes to be merged to create the new shape. </param>
            <param name="IndexOne">The index of the first shape to be merged. </param>
            <param name="IndexTwo">The index of the second shape to be merged.</param>
            <param name="cBack">The ICallback object which will receive progress and error messages while
            the shapes are being merged.</param>
            <returns>The resulting shape.</returns>
        </member>
        <member name="M:MapWinGIS.IUtils.ShapeToShapeZ(MapWinGIS.Shapefile,MapWinGIS.Grid,MapWinGIS.ICallback)">
            <summary>
            Creates a new shapefile with z values added from an elevation grid.
            </summary>
            <param name="Shapefile">The shapefile to be converted to a new shapefile with z values. </param>
            <param name="Grid">The elevation grid to get the z values from. </param>
            <param name="cBack">The ICallback object which will receive progress and error messages while
            z values are being added to the shapefile.</param>
            <returns>The new shapefile containing z values obtained from the elevation grid.</returns>
        </member>
        <member name="M:MapWinGIS.IUtils.ShapefileToGrid(MapWinGIS.Shapefile,System.Boolean,MapWinGIS.GridHeader,System.Double,System.Boolean,System.Int16)">
            <summary>
            This function is not implemented. Converts a shapefile to a grid.
            </summary>
            <param name="Shpfile">The shapefile to be converted into a grid.  </param>
            <param name="UseShapefileBounds">Optional. A boolean value representing whether or not the grid will have the same extents 
            as the shapefile. The default is True</param>
            <param name="GrdHeader">Optional. The grid header to use to create the new grid.
            If UseShapefileBounds is set to true, the extents supplied in the grid header will be ignored
            when the grid is created.</param>
            <param name="Cellsize">Optional. The cell size of the new grid. The default cell size is 30. </param>
            <param name="UseShapeNumber">Optional. Specifies that the value of each cell in the grid should be the shape index. The default value is true.</param>
            <param name="SingleValue">Optional. The value to use when creating the grid. This only applies when
            UseShapeNumber is set to false. The default value is 1.</param>
            <returns>The grid created from the shapefile. </returns>
        </member>
        <member name="M:MapWinGIS.IUtils.TinToShapefile(MapWinGIS.Tin,MapWinGIS.ShpfileType,MapWinGIS.ICallback)">
            <summary>
            Creates a shapefile from a TIN object. 
            </summary>
            <param name="Tin">The TIN object to be used to create a new shapefile.</param>
            <param name="Type">The type of the shapefile to be created.</param>
            <param name="cBack">The ICallback object which will receive progress and error messages while
            shapefile is being created from the TIN.</param>
            <returns>The new shapefile created from the TIN.</returns>
        </member>
        <member name="M:MapWinGIS.IUtils.get_Area(MapWinGIS.Shape)">
            <summary>
            Returns the area of the polygon shape. For multi-part polygons which may contain counter-clockwise holes, the area of the 
            holes will be subtracted from that of the surrounding clockwise portions. 
            </summary>
            <param name="Shape">The polygon shape for which the area is required.</param>
            <returns>The area of the polygon shape.</returns>
        </member>
        <member name="M:MapWinGIS.IUtils.get_ErrorMsg(System.Int32)">
            <summary>
            Retrieves the error message associated with the specified error code. 
            </summary>
            <param name="ErrorCode">The error code for which the error message is required.</param>
            <returns>The error message description for the specified error code. </returns>
        </member>
        <member name="M:MapWinGIS.IUtils.get_Length(MapWinGIS.Shape)">
            <summary>
            Gets the length of the line shape.
            </summary>
            <param name="Shape"></param>
            <returns></returns>
        </member>
        <member name="M:MapWinGIS.IUtils.get_Perimeter(MapWinGIS.Shape)">
            <summary>
            Gets the perimeter of the polygon shape. 
            </summary>
            <param name="Shape">The polygon shape for which the perimeter is required. </param>
            <returns>The perimeter of the polygon shape. </returns>
        </member>
        <member name="M:MapWinGIS.IUtils.hBitmapToPicture(System.Int32)">
            <summary>
            Converts an hBitmap to an IPictureDisp object.
            </summary>
            <param name="hBitmap">A device context handle to a bitmap. </param>
            <returns>An IPictureDisp object created from the bitmap.</returns>
        </member>
        <member name="M:MapWinGIS.IUtils.TranslateRaster(System.String,System.String,System.String,MapWinGIS.ICallback)">
            <summary>
            Converts raster data between different formats, potentially performing some operations like subsettings, resampling, and rescaling pixels in the process.
            </summary>
            <remarks>See the description of appropriate routine in GDAL Tools.</remarks>
            <param name="bstrSrcFilename">The name of the source file.</param>
            <param name="bstrDstFilename">The name of the destination file.</param>
            <param name="bstrOptions">Options of the routine.</param>
            <param name="cBack">The callback object.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IUtils.GenerateContour(System.String,System.String,System.Double,System.Double,System.Boolean,System.Object,MapWinGIS.ICallback)">
            <summary>
            This program generates a vector contour file from the input raster elevation model (DEM). 
            </summary>
            <remarks>See documentation here: http://www.gdal.org/gdal_contour.html</remarks>
        </member>
        <member name="M:MapWinGIS.IUtils.ClipGridWithPolygon(System.String,MapWinGIS.Shape,System.String,System.Boolean)">
            <summary>
            Creates a new grid from the input one in which all values outside the specified polygon are set to no data value.
            </summary>
            <param name="inputGridfile">Filename of input grid.</param>
            <param name="poly">Clipping polygon.</param>
            <param name="resultGridfile">Filename of the results grid.</param>
            <param name="keepExtents">True in case grid must not be clipped using polygon extents.</param>
            <returns>True on success.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IUtils.ClipGridWithPolygon2(MapWinGIS.Grid,MapWinGIS.Shape,System.String,System.Boolean)">
            <summary>
            Creates a new grid from the input one in which all values outside the specified polygon are set to no data value.
            </summary>
            <param name="inputGrid">INput grid.</param>
            <param name="poly">Clipping polygon.</param>
            <param name="resultGridfile">Filename of the results grid.</param>
            <param name="keepExtents">True in case grid must not be clipped using polygon extents.</param>
            <returns>True on success.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IUtils.ConvertDistance(MapWinGIS.tkUnitsOfMeasure,MapWinGIS.tkUnitsOfMeasure,System.Double@)">
            <summary>
            Converts distance from one units of measuring to another.
            </summary>
            <param name="sourceUnit">Source units of measuring.</param>
            <param name="targetUnit">Target units of measuring.</param>
            <param name="Value">The value in source units to be converted.</param>
            <returns>The value in target units.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IUtils.CopyNodataValues(System.String,System.String)">
            <summary>
            Copies no data values from one grid datasource to another.
            </summary>
            <param name="sourceFilename">Filename of the source.</param>
            <param name="destFilename">Filename of the target.</param>
            <returns>True on success.</returns>
            <remarks>Datasources must have the same size, number of bands, byte data type and must both be supported by GDAL.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <!-- Badly formed XML comment ignored for member "M:MapWinGIS.IUtils.CreateInstance(MapWinGIS.tkInterface)" -->
        <member name="M:MapWinGIS.IUtils.GDALAddOverviews(System.String,System.String,System.String,MapWinGIS.ICallback)">
            <summary>
            The same as GDAL's gdaladdo.exe utility. 
            </summary>
            <remarks>See documentation here: http://www.gdal.org/gdaladdo.html</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IUtils.GDALBuildVrt(System.String,System.String,MapWinGIS.ICallback)">
            <summary>
            The same as GDAL's gdalbuildvert.exe utility.
            </summary>
            <remarks>See documentation here: http://www.gdal.org/gdalbuildvert.html</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IUtils.GDALInfo(System.String,System.String,MapWinGIS.ICallback)">
            <summary>
            The same as GDAL's gdalinfo.exe utility.
            </summary>
            <remarks>See documentation here: http://www.gdal.org/gdalinfo.html</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IUtils.GDALRasterize(System.String,System.String,System.String,MapWinGIS.ICallback)">
            <summary>
            The same as GDAL's gdal_rasterize.exe utility.
            </summary>
            <remarks>See documentation here: http://www.gdal.org/gdal_rasterize.html</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IUtils.GDALWarp(System.String,System.String,System.String,MapWinGIS.ICallback)">
            <summary>
            The same as GDAL's gdalwarp.exe utility
            </summary>
            <remarks>See documentation here: http://www.gdal.org/gdalwarp.html</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IUtils.GeodesicDistance(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Calculates geodesic distance between 2 points on Earth.
            </summary>
            <param name="lat1">Latitude of the first point in decimal degrees.</param>
            <param name="lng1">Longitude of the first point in decimal degrees.</param>
            <param name="lat2">Latitude of the second point in decimal degrees.</param>
            <param name="lng2">Longitude of the second point in decimal degrees.</param>
            <returns>Geodesic distance between 2 points in meters.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IUtils.GridStatisticsForPolygon(MapWinGIS.Grid,MapWinGIS.GridHeader,MapWinGIS.Extents,MapWinGIS.Shape,System.Double,System.Double@,System.Double@,System.Double@)">
            <summary>
             Calculates statistics for portion of grid that is overlapped by specified polygon.
            </summary>
            <param name="Grid">Input grid</param>
            <param name="Header">Grid header. Can be retrieved with Grid.Header property.</param>
            <param name="gridExtents">Grid extents. Can be retrieved with Grid.Extents property.</param>
            <param name="Shape">Polygon shape within borders of which the statistics will be calculated.</param>
            <param name="NodataValue">No data value for grid. Can be retrieved from header.</param>
            <param name="MeanValue">Calculated mean value.</param>
            <param name="MinValue">Calculated min value.</param>
            <param name="MaxValue">Calculated max value</param>
            <returns>True on success.</returns>
            <remarks>Header, gridExtents, NodataValue parameters are added, so that these properties can be retrieved
            only ones in case the function is called multiple times for each polygon in shapefile.</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IUtils.GridStatisticsToShapefile(MapWinGIS.Grid,MapWinGIS.Shapefile,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Calculates statistics for grid cells within each polygon of the specified shapefile. Writes results to attribute table of shapefile.
            </summary>
            <param name="Grid">Input grid.</param>
            <param name="sf">Polygon shapefile.</param>
            <param name="SelectedOnly">A value indicating whether calculation will be made for selected polygons only. 
            When set to false, calculation will be made for all polygons in shapefile.</param>
            <param name="overwriteFields">If true output fields will be overwritten (if the fields with such names already exist). 
            Otherwise new set of output fields will be created with numerical indices added to their names.</param>
            <param name="useCenterWithinMethod">If true (default) the center of the pixel needs to be inside the polygon. 
            If set to false Intersection method is used meaning each pixel boundary that intersects with the polygon is used. Added in v4.9.4.3.</param>
            <returns>True on success.</returns>
            <remarks>The default names for output fields: "Mean", "Median", "Majority", "Minority", "Minimum", "Maximum", 
            "Range", "StD", "Sum", "MinX", "MinY", "Variety", "Count"</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IUtils.GridToImage(MapWinGIS.Grid,MapWinGIS.GridColorScheme,MapWinGIS.ICallback)">
            <summary>
            Creates an image from the grid using the given grid color scheme.
            </summary>
            <param name="Grid">The grid to use to create the image. </param>
            <param name="cScheme">The grid color scheme to use to create an image from the grid.</param>
            <param name="cBack">The ICallback object which will receive progress and error messages while 
            the image is being created from the grid.</param>
            <returns>The image created from the grid.</returns>
        </member>
        <member name="M:MapWinGIS.IUtils.GridToImage2(MapWinGIS.Grid,MapWinGIS.GridColorScheme,MapWinGIS.tkGridProxyFormat,System.Boolean,MapWinGIS.ICallback)">
            <summary>
            Creates an image proxy for grid visualization.
            </summary>
            <param name="Grid">Grid to create proxy for.</param>
            <param name="ci">Color scheme which defines the mapping of values to colors.</param>
            <param name="imageFormat">The format of output image.</param>
            <param name="InRam">True in case in-memory image should be created, otherwise it will saved to the drive.</param>
            <param name="cBack">Callback interface.</param>
            <returns>Resulting image.</returns>
            <remarks>The filename of the resulting image (inRam = false) is set automatically: for example, grid.asc -> grid_proxy.bmp.
            In case of multi-band grids an image will be created for the active band, determined from Grid.ActiveBandIndex property.
            For bmp output format a world file will be written along with resulting file. For GTiff format the same values
            will be embedded in the file itself.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IUtils.MaskRaster(System.String,System.Byte)">
            <summary>
            Sets all the values inside datasource, which aren't equal to no data value, to a new value.
            </summary>
            <param name="Filename">Filename of the input datasource.</param>
            <param name="newPerBandValue">The new value set for all cells of each band which aren't equal to no data value.</param>
            <returns>True on success.</returns>
            <remarks>Datasource format must be supported by GDAL. Byte data type for values is expected.</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IUtils.OGR2OGR(System.String,System.String,System.String,MapWinGIS.ICallback)">
            <summary>
            The same as GDAL's ogr2ogr utility.
            </summary>
            <remarks>See documentation here: http://www.gdal.org/ogr2ogr.html</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IUtils.OGRInfo(System.String,System.String,System.String,MapWinGIS.ICallback)">
            <summary>
            The same as GDAL's OGRInfo utility.
            </summary>
            <remarks>See documentation here: http://www.gdal.org/ogrinfo.html</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IUtils.Polygonize(System.String,System.String,System.Int32,System.Boolean,System.String,System.String,System.String,System.String,MapWinGIS.ICallback)">
            <summary>
            The same as GDAL's gdal_polygonize utility.
            </summary>
            <remarks>See documentation here: http://www.gdal.org/gdal_polygonize.html</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IUtils.ErrorMsgFromObject(System.Object)">
            <summary>
            Displays error message for the last error that took place within object passed as parameter.
            </summary>
            <param name="comClass">Any MapWinGIS COM class which has LastErrorCode and get_ErrorMsg properties.</param>
            <remarks>The methods is alternative syntax of calling: 
            \code
            shapefile.get_ErrorMsg(shapefile.LastErrorCode);
            \endcode
            Now it also can be done like:
            \code
            utils.ErrorMsgFromObject(shapefile);
            \endcode
            </remarks>
            <returns>Error description.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IUtils.TileProjectionToGeoProjection(MapWinGIS.tkTileProjection)">
            <summary>
            Initializes GeoProjection object with projection used by specific tile service.
            </summary>
            <param name="Projection">Projection used by tile service.</param>
            <returns>GeoProjection object or null if operation failed.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IUtils.get_ComUsageReport(System.Boolean)">
            <summary>
            Gets report about COM objects that were created and released.
            </summary>
            <param name="unreleasedOnly">Indicates whether report must include information about already released objects.</param>
            <returns>String with report.</returns>
            <remarks>
            This method can be used to find memory leaking in MapWinGIS native code 
            (forgotten object->Release call). The most vulnerable spots are geoprocessing functions,
            where thousands of Shape or Point objects may be created in a single API call.
            Before calling this make sure that:
            - objects are no longer referenced anywhere in your code;
            - in case of .NET, that garbage collection was performed.
            \note AxMap control uses several instances of COM objects (GeoProjection, Shape) as a part of normal functioning.
            This doesn't amount to memory leakage.
            </remarks>
            \new492 Added in version 4.9.2
        </member>
        <member name="M:MapWinGIS.IUtils.CalculateRaster(System.Array,System.String,System.String,System.String,System.Single,MapWinGIS.ICallback,System.String@)">
            <summary>
            Creates a new raster dataset based on the array of input datasets and an arbitrary formula 
            to calculate values of output dataset.
            </summary>
            <param name="filenames">Array of filenames.</param>
            <param name="Expression">Formula to calculate.</param>
            <param name="outputFilename">Name of output dataset.</param>
            <param name="gdalOutputFormat">GDAL format. See list here: http://www.gdal.org/formats_list.html. Not
            all of them are necessarily support creation and writing operations.</param>
            <param name="NodataValue">No data value for output datasource.</param>
            <param name="cBack">Callback to report progress and errors.</param>
            <param name="ErrorMsg">Error description to be returned when method fails.</param>
            <returns>True on success.</returns>
            <remarks>
            Input datasets must have the same size in pixels (projection and transformation parameters 
            will be copied to output from first datasource, but won't be used during calculation process).
            Names of datasources in formula must match their filenames without path. Additionally @@X postfix
            must be added to mark index of band to be used (1-based). The following operation are supported in formula:
            arithmetic (+, -, *, /, ^); comparisons
            (&gt;, &lt;, &lt;=, &gt;=, &lt;&gt;, =) both for raster values and scalar constants.
            \code
            string[] names = { @"d:\Clip_L7_20000423_B2.tif", @"d:\Clip_L7_20000423_B5.tif" };
            string formula = "[Clip_L7_20000423_B5.tif@1] + [Clip_L7_20000423_B2.tif@1] + 5";   // @1 = first band is used in both cases
            string errorMsg;
            var ut = new Utils();
            bool result = ut.CalculateRaster(names, formula, @"d:\output.tif", "GTiff",
            0f /* no data value */, this /*callback */, out errorMsg);
            \endcode
            </remarks>
            \new492 Added in version 4.9.2
        </member>
        <member name="M:MapWinGIS.IUtils.ReclassifyRaster(System.String,System.Int32,System.String,System.Array,System.Array,System.Array,System.String,MapWinGIS.ICallback)">
            <summary>
            Creates a new datasource by mapping data ranges of the specified band of input datasource 
            to new values. 
            </summary>
            <param name="Filename">Filename of input GDAL raster datasource.</param>
            <param name="bandIndex">Band index of input datasource to be processed.</param>
            <param name="OutputName">Filename of output datasource.</param>
            <param name="LowerBounds">Array of double type with lower bounds of mapping ranges. These values
            will be compared with values of input datasource. Must be sorted in ascending order.</param>
            <param name="UpperBounds">Array of double type with upper bounds of mapping ranges. These values
            will be compared with values of input datasource.</param>
            <param name="NewValues">Array of double type with values to be set for output datasource
            for each mapping range.</param>
            <param name="gdalOutputFormat">GDAL format. See list here: http://www.gdal.org/formats_list.html. Not
            all of them are necessarily support creation and writing operations.</param>
            <param name="cBack">Callback to report progress and errors.</param>
            <returns>True on success.</returns>
            <remarks>
            All 3 input arrays must be of the same size. In case of overlapping ranges the one located first
            will be used. Here is code sample with 5 data ranges using anonymous data type:
            \code
            var ut = new Utils();
            var arr = new[]
            {
               new {Low = 0.0, High = 20.0, NewValue = 40.0},
               new {Low = 20.0, High = 40.0, NewValue = 150.0},
               new {Low = 40.0, High = 60.0, NewValue = 100.0},
               new {Low = 60.0, High = 80.0, NewValue = 20.0},
               new {Low = 80.0, High = 100.0, NewValue = 80.0},
            };
            if (!ut.ReclassifyRaster(@"d:\source.tiff", 1 /* band index */, 
               @"d:\output.tif", 
               arr.Select(i => i.Low).ToArray(),
               arr.Select(i => i.High).ToArray(),
               arr.Select(i => i.NewValue).ToArray(),
               "GTiff", this /* callback */))
            {
               MessageBox.Show("Failed to reclassify: " + ut.get_ErrorMsg(ut.LastErrorCode));
            }
            else
            {
               MessageBox.Show("Reclassified successfully");
            }
            \endcode
            </remarks>
            \new492 Added in version 4.9.2
        </member>
        <member name="M:MapWinGIS.IUtils.IsTiffGrid(System.String)">
            <summary>
            Returns a boolean value which indicates whether the specified file holds tiff grid.
            </summary>
            <param name="Filename">The name of the file.</param>
            <returns>True on success and false otherwise.</returns>
            \new493 Added in version 4.9.3 (is moved from AxMap.IsTiffGrid)
        </member>
        <member name="M:MapWinGIS.IUtils.EPSGUnitConversion(System.Int32)">
            <summary>
            Gets the tkUnitsOfMeasure enumeration associated with the specified EPSG Unit Code
            </summary>
            <param name="EPSGUnitCode">EPSG-defined Unit of Measure constant</param>
            <returns>The internal enumeration associated with the specified EPSG code</returns>
            <remarks>
            Supports the more common EPSG-defined Unit constants; specifically those that can be mapped to 
            the currently defined tkUnitsOfMeasure enumeration values. If the EPSG code cannot be mapped, 
            an Error will be submitted to the global callback with error code tkINVALID_PARAMETER_VALUE, 
            and return the default value of umDecimalDegrees.
            </remarks>
            \new495 Added in version 4.9.5
        </member>
        <member name="M:MapWinGIS.IUtils.GetNAD83ProjectionName(MapWinGIS.tkNad83Projection)">
            <summary>
            Gets the name of the projection associated with the specified NAD83 enumeration
            </summary>
            <param name="projectionID">
            Value from the the NAD83 projection enumeration tkNad83Projection
            </param>
            <returns>GDAL-provided projection name, or an empty string on error</returns>
            <remarks>
            If an error occurs, either because an invalid ID is specified, or the projection string
            could not be loaded, a descriptive error will be raised to the Callback function (if one is specified).
            </remarks>
            \new495 Added in version 4.9.5
        </member>
        <member name="M:MapWinGIS.IUtils.GetWGS84ProjectionName(MapWinGIS.tkWgs84Projection)">
            <summary>
            Gets the name of the projection associated with the specified WGS84 enumeration
            </summary>
            <param name="projectionID">
            Value from the the NAD83 projection enumeration tkNad83Projection
            </param>
            <returns>GDAL-provided projection name, or an empty string on error</returns>
            <remarks>
            If an error occurs, either because an invalid ID is specified, or the projection string
            could not be loaded, a descriptive error will be raised to the Callback function (if one is specified).
            </remarks>
            \new495 Added in version 4.9.5
        </member>
        <member name="M:MapWinGIS.IUtils.GetProjectionNameByID(System.Int32)">
            <summary>
            Gets the name of the projected coordinate system associated with the specified SRID,
            which include the NAD83 and WGS84 codes, as well as those not specified by the enumerations, 
            such as NAD27, NAD83 Harn, Beijing, Pulkova, etc.
            </summary>
            <param name="SRID">
            Spatial Reference identifier, could refer to any valid Projected or Geographic coordinate system
            </param>
            <returns>GDAL-provided name of a projected or geographic coordinate system, or an empty string on error</returns>
            <remarks>
            If an error occurs, either because an invalid ID is specified, or the projection string
            could not be loaded, a descriptive error will be raised to the Callback function (if one is specified).
            </remarks>
            \new495 Added in version 4.9.5
        </member>
        <member name="M:MapWinGIS.IUtils.GetProjectionList(MapWinGIS.tkProjectionSet,System.Object@)">
            <summary>
            Gets a list of ID,Name pairs of Projected and/or Geographic coordinate systems
            </summary>
            <param name="projectionSets">One or a combination of values from the tkProjectionSet enumeration</param>
            <param name="list">Reference to an Object that will be filled with an array of strings</param>
            <returns>True if successful (list will contain an array of strings containing the ID/Name pairs associated with the specified Projection Sets), or False on failure (list will be empty)</returns>
            <remarks>
            Each string will contain one pair of values, an ID and a Name, separated by a comma (e.g. "32611,WGS 84 / UTM zone 11N").
            These can be parsed and used, for example, to populate a ComboBox control for user selection of a Projection.
            If an error occurs, or if the projection strings could not be loaded, a descriptive error will be raised to the Callback function (if one is specified).
            </remarks>
            \new495 Added in version 4.9.5
        </member>
        <member name="T:MapWinGIS.IVector">
            <summary>
            A vector object is used to represent the light source for a grid color scheme. 
            </summary>
        </member>
        <member name="M:MapWinGIS.IVector.CrossProduct(MapWinGIS.Vector)">
            <summary>
            Calculates the vector cross product between the current vector object and the specified vector. 
            </summary>
            <param name="V">The vector to calculate the cross product with the current vector object.</param>
            <returns>The cross product of the current vector object and the specified vector.</returns>
        </member>
        <member name="M:MapWinGIS.IVector.Dot(MapWinGIS.Vector)">
            <summary>
            Calculates the dot product of the current vector object with the specified vector. 
            </summary>
            <param name="V">The vector to use to calculate the dot product with the current vector object.</param>
            <returns>The dot product of the current vector object and the specified vector.</returns>
        </member>
        <member name="P:MapWinGIS.IVector.GlobalCallback">
            <summary>
            The global callback is the interface used by MapWinGIS to pass progress and error events to interested applications. 
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.IVector.Key">
            <summary>
            The key may be used by the programmer to store any string data associated with the object. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IVector.LastErrorCode">
            <summary>
            Retrieves the last error generated in the object. 
            </summary>
        </member>
        <member name="M:MapWinGIS.IVector.Normalize">
            <summary>
            Normalizes the vector.
            </summary>
        </member>
        <member name="M:MapWinGIS.IVector.get_ErrorMsg(System.Int32)">
            <summary>
            Retrieves the error message associated with the specified error code. 
            </summary>
            <param name="ErrorCode"></param>
            <returns></returns>
        </member>
        <member name="P:MapWinGIS.IVector.i">
            <summary>
            Gets or sets the i component of the vector. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IVector.j">
            <summary>
            Gets or sets the j component of the vector. 
            </summary>
        </member>
        <member name="P:MapWinGIS.IVector.k">
            <summary>
            Gets or sets the k component of the vector. 
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "T:MapWinGIS.IOgrDatasource" -->
        <member name="M:MapWinGIS.IOgrDatasource.Close">
            <summary>
            Closes datasource and underlying connection.
            </summary>
            <remarks>This method should be called as soon as datasource is no longer needed.</remarks>
        </member>
        <member name="M:MapWinGIS.IOgrDatasource.Open(System.String)">
            <summary>
            Opens particular type of datasource supported by GDAL/OGR.
            </summary>
            <remarks>See details about connection strings here: http://www.gdal.org/ogr_formats.html</remarks>
            <param name="connectionString">Connection string for RDMSs or filename for file-based formats.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IOgrDatasource.Open2(System.String,System.Boolean)">
            <summary>
            Opens particular type of datasource supported by GDAL/OGR.
            </summary>
            <remarks>See details about connection strings here: http://www.gdal.org/ogr_formats.html</remarks>
            <param name="connectionString">Connection string for RDMSs or filename for file-based formats.</param>
            <param name="forUpdate">Indicates whether datasource will be opened with update flag.</param>
            <returns>True on success.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MapWinGIS.IOgrDatasource.GetLayer(System.Int32,System.Boolean)" -->
        <member name="M:MapWinGIS.IOgrDatasource.GetLayerName(System.Int32)">
            <summary>
            Gets a name of the layer with particular index.
            </summary>
            <param name="layerIndex">Index of layer.</param>
            <returns>Name of layer or empty string for invalid layer index.</returns>
        </member>
        <member name="M:MapWinGIS.IOgrDatasource.GetLayerByName(System.String,System.Boolean)">
            <summary>
            Gets a layer with specified name from the datasource.
            </summary>
            <remarks>In case of spatial databases layerName corresponds to name of the underlying table. 
            However there can be some format specifics. For example name may include schema prefix and name of geometry column 
            (in case there is more than one geometry column in the table).
            For example, <i>"public.buildings(geom2)"</i> may correspond to <i>"geom2"</i> column of table named 
            <i>"buildings"</i> in <i>"public"</i> schema.\n
            
            Resulting layer has no reference to %OgrDatasource object, which can safely closed if it is no longer needed.</remarks>
            <param name="layerName">Layer name (case insensitive).</param>
            <param name="forUpdate">Indicates whether the returned layer will support saving of changes back to source
            (the functionality should be supported by particular driver).</param>
            <returns>Instance of OgrLayer or null on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IOgrDatasource.RunQuery(System.String)">
            <summary>
            Runs a query against datasource and returns the result as a temporary layer. 
            </summary>
            <remarks>Usually some sort of SELECT query returning a set of rows with one 
            or several geometry columns is expected here. Other types of SQL instructions will also be processed, 
            however OgrDatasource.ExecuteSQL is recommended way to do it.\n\n
            Resulting layer has no reference to %OgrDatasource object, which can safely closed if it is no longer needed.\n
            </remarks>
            <param name="sql">SQL query.</param>
            <returns>Temporary layer or null on failure.</returns>
            The following code builds 0.01 degree buffer zones around waterways layer extracted from database
            and displays both waterways and buffer layers on the map. st_buffer function is supported by PostGIS.
            See documentation of particular spatial database for list of supported functions and their arguments.
            \code
            private static string CONNECTION_STRING = "PG:host=localhost dbname=london user=postgres password=1234";
            
            private static bool TestSpatialQuery()
            {
                var ds = new OgrDatasource();
                
                if (!ds.Open(CONNECTION_STRING))
                {
                    Debug.WriteLine("Failed to establish connection: " + ds.GdalLastErrorMsg);
                }
                else
                {
                    map.RemoveAllLayers();
                    map.Projection = tkMapProjection.PROJECTION_WGS84;
            
                    // build a buffer in a first query
                    string sql = "SELECT st_buffer(wkb_geometry, 0.01) AS buffer, * FROM waterways;";
                    var buffer = ds.RunQuery(sql);
                    if (buffer == null)
                    {
                        Debug.WriteLine("Failed to build buffer: " + gs.GdalLastErrorMsg);
                    }
                    else
                    {
                        Debug.WriteLine("Number of features in a buffer: " + buffer.FeatureCount);
                        map.AddLayer(buffer, true);
                        buffer.GetBuffer().DefaultDrawingOptions.FillColor = 255;     // red
                    }
            
                    // simply extract unaltered source features in the second query and display them above the buffer
                    string sql2 = "SELECT * FROM waterways;";
                    var layer = ds.RunQuery(sql2);
                    if (layer == null)
                    {
                        Debug.WriteLine("Failed to open layer: " + gs.GdalLastErrorMsg);
                    }
                    else
                    {
                        Debug.WriteLine("Number of features in layer: " + layer.FeatureCount);
                        map.AddLayer(layer, true);
                    }
                    ds.Close();
                }
                return true;
            }
            \endcode
        </member>
        <member name="M:MapWinGIS.IOgrDatasource.DeleteLayer(System.Int32)">
            <summary>
            Deletes a layer with specified index from datasource.
            </summary>
            <remarks>Use OgrDatasource.TestCapability(tkOgrDSCapability.odcDeleteLayer) to check 
            whether functionality is supported by particular driver.</remarks>
            <param name="layerIndex">Layer index within datasource.</param>
            <returns>True on success.</returns>
        </member>
        <member name="M:MapWinGIS.IOgrDatasource.TestCapability(MapWinGIS.tkOgrDSCapability)">
            <summary>
            Test whether driver of the currently opened datasource supports particular capability.
            </summary>
            <param name="capability">A capability to test.</param>
            <returns>True in case the capability is supported by the driver.</returns>
        </member>
        <member name="M:MapWinGIS.IOgrDatasource.LayerIndexByName(System.String)">
            <summary>
            Returns index of layer with the specified name.
            </summary>
            <param name="layerName">Layer name (case insensitive).</param>
            <returns>Index of layer or -1 in case it wasn't found.</returns>
        </member>
        <member name="M:MapWinGIS.IOgrDatasource.ExecuteSQL(System.String,System.String@)">
            <summary>
            Executes SQL statement against datasource.
            </summary>
            <remarks>Should be used for non-SELECT instructions which don't return resulting set of rows.
            To select data use OgrDatasource.RunQuery instead.
            </remarks>        
            <param name="sql">SQL instruction.</param>
            <param name="errorMessage">Error message provided in case of failure.</param>
            <returns>True on success and false otherwise.</returns>
            The following code deletes records from underlying database table with gid > 100.
            \code
            var ds = new OgrDatasource();
            
            if (!ds.Open(CONNECTION_STRING))
            {
                Debug.Pring("Failed to establish connection: " + ds.GdalLastErrorMsg);
            }
            else
            {
                string errorMsg;
                bool result = ds.ExecuteSQL("DELETE FROM tableName WHERE gid > 100", out errorMsg);
                if (!result)
                {
                    Debug.Pring("Error on running SQL: " + errorMsg);    
                }
                else
                {
                    Debug.Pring("SQL was executed successfully.");    
                }
                ds.Close();
            }
            \endcode
        </member>
        <member name="M:MapWinGIS.IOgrDatasource.GetSchemas">
            <summary>
            Gets the array with schema names in the datasources.
            </summary>
            <returns>Boxed string array.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IOgrDatasource.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the specific error code.
            </summary>
            <param name="ErrorCode">The error code returned by LastErrorCode property.</param>
            <returns>String with the description.</returns>
        </member>
        <member name="P:MapWinGIS.IOgrDatasource.LastErrorCode">
            <summary>
            Gets code of the last error which took place inside this object.
            </summary>
        </member>
        <member name="P:MapWinGIS.IOgrDatasource.GlobalCallback">
            <summary>
            Gets or sets a Callback object which handles progress and error messages.
            </summary>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.IOgrDatasource.Key">
            <summary>
            Gets or sets a text string associated with object. Any value can be stored by developer in this property.
            </summary>
        </member>
        <member name="P:MapWinGIS.IOgrDatasource.LayerCount">
            <summary>
            Gets number of layers in the datasource.
            </summary>
        </member>
        <member name="P:MapWinGIS.IOgrDatasource.DriverName">
            <summary>
            Gets name driver (name of format) for this datasource.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MapWinGIS.IOgrDatasource.get_DriverMetadata(MapWinGIS.tkGdalDriverMetadata)" -->
        <member name="P:MapWinGIS.IOgrDatasource.DriverMetadataCount">
            <summary>
            Gets the number of metadata items associated with current driver.
            </summary>
        </member>
        <member name="M:MapWinGIS.IOgrDatasource.get_DriverMetadataItem(System.Int32)">
            <summary>
            Gets metadata item with specified index associated with current driver.
            </summary>
            <param name="metadataIndex">Index of metadata item to be returned.</param>
            <returns>String with metadata.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MapWinGIS.IOgrDatasource.ImportShapefile(MapWinGIS.Shapefile,System.String,System.String,MapWinGIS.tkShapeValidationMode)" -->
        <!-- Badly formed XML comment ignored for member "M:MapWinGIS.IOgrDatasource.CreateLayer(System.String,MapWinGIS.ShpfileType,MapWinGIS.GeoProjection,System.String)" -->
        <member name="P:MapWinGIS.IOgrDatasource.GdalLastErrorMsg">
            <summary>
            Extracts the last error message reported by GDAL library.
            </summary>
        </member>
        <member name="T:MapWinGIS.AmbiguityResolution">
            <summary>
            Defines the way to resolve ambiguity resolution for shape networks.
            </summary>
        </member>
        <member name="T:MapWinGIS.ColoringType">
            <summary>
            Defines the type of coloring for grids.
            </summary>
        </member>
        <member name="T:MapWinGIS.FieldType">
            <summary>
            The available types of fields of dbf table.
            </summary>
        </member>
        <member name="T:MapWinGIS.GradientModel">
            <summary>
            Gradient model for grid visualization
            </summary>
        </member>
        <member name="T:MapWinGIS.GridDataType">
            <summary>
            The data type which represents a single cell of a grid.
            </summary>
        </member>
        <member name="T:MapWinGIS.GridFileType">
            <summary>
            The type of grid supported by MapWinGIS.
            </summary>
        </member>
        <member name="T:MapWinGIS.ImageType">
            <summary>
            The type of images supported by MapWinGIS.
            </summary>
        </member>
        <member name="T:MapWinGIS.PolygonOperation">
            <summary>
            Available polygon operations.
            </summary>
        </member>
        <member name="T:MapWinGIS.PredefinedColorScheme">
            <summary>
            Predefined color schemes which can be used for grid visualization of for initialization of instance of ColorScheme class.
            </summary>
        </member>
        <member name="T:MapWinGIS.SelectMode">
            <summary>
            The selection mode, which determines which shapes will be considered as included in the rectangular selection.
            </summary>
        </member>
        <member name="F:MapWinGIS.SelectMode.INTERSECTION">
            <summary>
            All the shapes that lie within the rectangle or do intersect it will be included.
            </summary>
        </member>
        <member name="F:MapWinGIS.SelectMode.INCLUSION">
            <summary>
            Only the shapes that lie within the rectangle and doesn't intersect it will be included.
            </summary>
        </member>
        <member name="T:MapWinGIS.ShpfileType">
            <summary>
            The type of the shapefile.
            </summary>
            <remarks>The main types are SHP_NULLSHAPE, SHP_POINT, SHP_POLYLINE, SHP_POLYGON.
            SHP_MULTIPOINT is much harder to encounter. SHP_MULTIPATCH isn't supported by MapWinGIS\n
            For each of the flat (2D) type there is a 2.5D representation, with either Z (holds z value) or M (holds z and m values) postfix.
            See shapefile specification for details: http://www.esri.com/library/whitepapers/pdfs/shapefile.pdf</remarks>
        </member>
        <member name="T:MapWinGIS.SplitMethod">
            <summary>
            Split methods used for creation of TIN from grid.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkChartType">
            <summary>
            The available types of chart.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkChartType.chtBarChart">
            <summary>
            Each chart field is represented by bar.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkChartType.chtPieChart">
            <summary>
            Each chart field is represented by sector.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkChartValuesStyle">
            <summary>
            The style of labels with numeric measures of the data for each field.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkClassificationType">
            <summary>
            The type of the classification available for ShapefileCategories.Generate and Labels.GenerateCategories methods.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkClassificationType.ctNaturalBreaks">
            <summary>
            The position of breaks are chosen to minimize the sum of square deviations within categories.
            The algorithm is heuristic, therefore gives only approximation of the real position of natural breaks.
            Nevertheless it's recommended as a default classification suitable in most cases.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkClassificationType.ctUniqueValues">
            <summary>
            A category will be created for each unique value of the field.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkClassificationType.ctEqualIntervals">
            <summary>
            To define the upper bound of a category the expression will be used: (IndexOfCategory + 1) * (MaxValue - MinValue) / NumberOfClasses.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkClassificationType.ctEqualCount">
            <summary>
            The bounds of categories will be chosen in such a manner that each of them will have equal number of objects which belongs to it.
            In practice this condition is rarely achieved because of the rounding problems, objects with the same values, etc.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkClassificationType.ctStandardDeviation">
            <summary>
            Six categories will be created, the range of each of them will be equal to the standard deviation of the field data. 
            Three categories will hold values greater then mean and three - lower than it.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkClassificationType.ctEqualSumOfValues">
            <summary>
            The sum values of the classification field will be roughly the same for all categories.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkClipOperation">
            <summary>
            The available clipping operation for Shape.Clip method.
            </summary>
            <remarks>The clClip value will be yield the same result as clIntersection.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkCollisionMode">
            <summary>
            Sets drawing behaviour when overlapping labels and charts are present on map.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkCollisionMode.AllowCollisions">
            <summary>
            Overlaps of labels (charts) are allowed. The subsequent labels (charts) will be drawn atop of the prior ones, thus hiding them.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCollisionMode.LocalList">
            <summary>
            The overlapping labels (charts) on the same layer are not allowed.
            The overlapping labels (charts) on different layers are allowed.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCollisionMode.GlobalList">
            <summary>
            No overlapping labels (charts) are allowed for both inside the layer and across the layers.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkColorSchemeType">
            <summary>
            The type of color scheme. Determines how colors will be extracted from the color scheme (see ShapefileCategories.ApplyColorScheme for example).
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkColorSchemeType.ctSchemeRandom">
            <summary>
            The color will be chosen randomly from the available range between two color breaks.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkColorSchemeType.ctSchemeGraduated">
            <summary>
            The color will be chosen by linear interpolation from the available range between two color breaks.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkCursor">
            <summary>
            The available mouse cursors provided by the system.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkCursorMode">
            <summary>
            Available cursor modes. Determines the default respond of map to the action of user.
            </summary>
            <remarks>To define the new behaviour set the value to cmNone and handle the events provided by map controls.</remarks>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmZoomIn">
            <summary>
            The map will be zoomed in on mouse click. 
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmZoomOut">
            <summary>
            The map will be zoomed out on mouse click. 
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmPan">
            <summary>
            The panning of the map will be performed after the dragging operation by the mouse.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmSelection">
            <summary>
            Rubber band rectangular will be displayed on the dragging operation by the mouse. SelectBoxFinal event will be generated on he release of button.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmNone">
            <summary>
            The map will not respond to the user action.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmMeasure">
            <summary>
            Measuring of area or distance will take place. See Measuring class for details.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmAddShape">
            <summary>
            Allows to add shapes to vector layers (Shapefile or OgrLayer) in interactive mode. 
            See description of ShapeEditor class.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmEditShape">
            <summary>
            Allows to edit shapes of vector layers (Shapefile or OgrLayer) in interactive mode. 
            See description of ShapeEditor class.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmSplitByPolyline">
            <summary>
            Splits polylines or polygons of a single layers with interactive drawn polyline.
            AxMap.ChooseLayer event must be handled to select the layer.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmIdentify">
            <summary>
            Fires AxMap.ShapeHighlighted and AxMap.ShapeIdentified events. Optionally visually 
            highlights shapes under cursor. See Identifier class for available options. 
            The functioning can be tested in the Demo app.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmMoveShapes">
            <summary>
            Allows to moves selected shapes of a single vector layers. AxMap.ChooseLayer event must be handled to 
            select the layer.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmRotateShapes">
            <summary>
            Allows to rotates selected shapes of a single vector layers. AxMap.ChooseLayer event must be handled to 
            select the layer.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmSelectByPolygon">
            <summary>
            Selects shapes of a single vector layer with interactively drawn polygon. 
            AxMap.ChooseLayer event must be handled to select the layer.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmEraseByPolygon">
            <summary>
            Erases parts of shapes shapes of a single vector that intersects with interactive drawn polygon.
            AxMap.ChooseLayer event must be handled to select the layer.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmSplitByPolygon">
            <summary>
            Splits polygons or polylines of a single layer with interactively drawn polygon.
            AxMap.ChooseLayer event must be handled to select the layer.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCursorMode.cmClipByPolygon">
            <summary>
            Removes all shapes of a selected layers which don't intersect with interactively drawn polygon.
            AxMap.ChooseLayer event must be handled to select the layer.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkDashStyle">
            <summary>
            The available style of lines. Can be used for drawing polylines and outlines of the polygons.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkDashStyle.dsCustom">
            <summary>
            The value will be ignored. The default dsSolid will be used instead.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkDefaultPointSymbol">
            <summary>
            The set of available point symbols. They represent macros for modification of several properties of the ShapeDrawingOptions class at once.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkDrawReferenceList">
            <summary>
            The type of spatial reference for the drawing layer.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkDrawReferenceList.dlScreenReferencedList">
            <summary>
            The objects of the drawing layer are specified in screen coordinates and are not moved after the changes of the extents.
            </summary>
            <remarks>To update such layers the full redraw is not needed. Therefore use AxMap.Refresh rather than AxMap.Redraw.</remarks>
        </member>
        <member name="F:MapWinGIS.tkDrawReferenceList.dlSpatiallyReferencedList">
            <summary>
            The objects of the drawing layer are specified in map coordinates. Their position changes after zooming operations.
            </summary>
            <remarks>To update such layers the full redraw is needed (AxMap.Redraw()).</remarks>
        </member>
        <member name="T:MapWinGIS.tkFillStipple">
            <summary>
            Deprecated. The available types of fill stipple. 
            </summary>
            \deprecated v.4.8. Use properties which take tkGDIPlusHatchStyle enumeration as input instead.
        </member>
        <member name="T:MapWinGIS.tkFillType">
            <summary>
            The type of shape fill.
            </summary>
            \see ShapeDrawingOptions.FillType
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkFillType.ftStandard">
            <summary>
            Solid fill.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFillType.ftHatch">
            <summary>
            Hatched fill. See ShapeDrawingOptions.FillHatchStyle.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFillType.ftGradient">
            <summary>
            Gradient fill. See ShapeDrawingOptions.FillGradientType.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFillType.ftPicture">
            <summary>
            A texture fill. See ShapeDrawingOptions.Picture.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkGDALResamplingMethod">
            <summary>
            The resampling mode which is used for building GDAL overlays.
            </summary>
            \see Image.BuildOverlays.
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkGDIPlusHatchStyle">
            <summary>
            The hatch style available for drawing of fill for polygons and point symbols.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkGeogCSParameter">
            <summary>
            The list of parameters of the geographical coordinate system.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkGeogCSParameter.SemiMajor">
            <summary>
            The half of the length of the major axis of reference ellipsoid.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGeogCSParameter.SemiMinor">
            <summary>
            The half of the length of the minor axis of reference ellipsoid.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGeogCSParameter.InverseFlattening">
            <summary>
            The inverse flattening for the reference ellipsoid
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGeogCSParameter.PrimeMeridian">
            <summary>
            The prime meridian for geographic coordinate system.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGeogCSParameter.AngularUnit">
            <summary>
            The angular units for geographic coordinate system.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkGeometryEngine">
            <summary>
            The possible engines (libraries) to carry out geoprocessing tasks.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkGeometryEngine.engineGeos">
            <summary>
            GEOS library. From version 4.8. linked statically (included in MapWinGIS).
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGeometryEngine.engineClipper">
            <summary>
            Clipper library. Linked statically (included in MapWinGIS).
            </summary>
        </member>
        <member name="T:MapWinGIS.tkGradientBounds">
            <summary>
            Possible size of gradient for the shapefile layer.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkGradientBounds.gbWholeLayer">
            <summary>
            A single gradient will be applied for all shapes of the shapefile.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGradientBounds.gbPerShape">
            <summary>
            Gradient will be applied to each shape individually.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkGradientType">
            <summary>
            The type of gradient for point and polygon fill.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkGradientType.gtLinear">
            <summary>
            Linear gradient.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGradientType.gtRectangular">
            <summary>
            Rectangular gradient.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGradientType.gtCircle">
            <summary>
            Circle gradient.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkHJustification">
            <summary>
            Deprecated. The available justification types for labels.
            </summary>
            \deprecated v. 4.8. Use properties which take tkLabelAlignment enumeration as an input instead.
        </member>
        <member name="T:MapWinGIS.tkImageSourceType">
            <summary>
            The source type for the image. 
            </summary>
            <remarks>
            The image can uninitialized, to be opened by MapWinGIS native code (bmp images) or GDAL library (all other formats).
            It's important to check this value as various types of images can have different behaviour and applicable methods.
            </remarks>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkImageSourceType.istUninitialized">
            <summary>
            The image is not bound to particular source. 
            </summary>
            <remarks>The image object will have this state before Image.Open or Image.CreateNew
            commands or after Image.Close command.</remarks>
        </member>
        <member name="F:MapWinGIS.tkImageSourceType.istDiskBased">
            <summary>The image is bound to bmp file on disk.</summary>
            <remarks>No third-party libraries are used for it's processing. The editing of values is saved to the disk immediately.
            The necessary part of image is read from the disk before each redraw, but this data isn't preserved in RAM after the drawing is finished.</remarks>
        </member>
        <member name="F:MapWinGIS.tkImageSourceType.istInMemory">
            <summary>
            The source of the image is the array of pixels stored in the RAM. 
            </summary>
            <remarks>It's possible to edit these values and save them to a file afterwards.</remarks>
        </member>
        <member name="F:MapWinGIS.tkImageSourceType.istGDALBased">
            <summary>
            The image is opened through GDAL library. 
            </summary>
            <remarks>Only a part of the image (a "buffer") is loaded into memory before each redraw and remains there till 
            the next redraw. The editing of the pixels of he buffer is allowed but the changes will be discarded on the next redraw of the map.
            </remarks>
        </member>
        <member name="F:MapWinGIS.tkImageSourceType.istGDIPlus">
            <summary>
            This value is set for the point icons stored in the ShapeDrawingOptions.Picture property after the deserialization of the 
            object state from string.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkInterpolationMode">
            <summary>
            The interpolation mode which can be use when image is drawn with the resolution higher or lower than original.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkLabelAlignment">
            <summary>
            The available alignments for the labels. Defines both horizontal and vertical alignment.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkLabelElements">
            <summary>
            Lists the parts of the label. Can be used to specify particular parts to apply color scheme to.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkLabelElements.leDefault">
            <summary>
            If the frame is visible the color scheme will be applied to it. Otherwise it will interpreted as font color.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkLabelFrameType">
            <summary>
            The the available shapes of the frames for labels, i.e. rectangles drawn around the labels to ensure better contrast.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkLabelPositioning">
            <summary>
            The available positioning of the label relative to the parent shape.
            </summary>
            <remarks>Each constant is applicable to the specific shape type only, otherwise the operation will generate an error.
            This constants doesn't affect the positioning of label for point and multipoint shapefile. So any value can be passed in that case.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkLabelPositioning.lpCenter">
            <summary>
            The label will be placed in the center of bounding box. Applicable to polygons only.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLabelPositioning.lpCentroid">
            <summary>
            The label will be placed in the centroid of the shape. Applicable to polygons only.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLabelPositioning.lpInteriorPoint">
            <summary>
            The label will be placed in the interior point (see Shape.InteriorPoint for details). Applicable for polygons only.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLabelPositioning.lpFirstSegment">
            <summary>
            The label will be placed in the beginning of the first segment of the polyline. Applicable to polylines only.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLabelPositioning.lpLastSegment">
            <summary>
            The label will be placed in the end of the last segment of the polyline. Applicable to polylines only.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLabelPositioning.lpMiddleSegment">
            <summary>
            The label will be placed in the center of the middle segment of the polyline. Applicable to polylines only.
            </summary>
            <remarks>The middle segment is the one which contains a point which splits the polyline into 2 parts of equal length.</remarks>
        </member>
        <member name="F:MapWinGIS.tkLabelPositioning.lpLongestSegment">
            <summary>
            The label will be placed in the center of the longest segment of the polyline. Applicable to polylines only.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLabelPositioning.lpNone">
            <summary>
            Is used internally.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkLinearGradientMode">
            <summary>
            The available gradient mode for drawing background of label and for its font.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkLineLabelOrientation">
            <summary>
            Defines the orientation of label relative to the line it marks.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkLineStipple">
            <summary>
            Deprecated. The available line styles. 
            </summary>
            \deprecated v.4.8 Use properties which take tkDashStyle enumeration as input instead. For drawing complex lines use LinePattern class.
        </member>
        <member name="T:MapWinGIS.tkLineType">
            <summary>
            The available type of segments in the LinePattern.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkLineType.lltSimple">
            <summary>
            The segment is represented by common line with styles defined by tkDashStyle enumeration.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLineType.lltMarker">
            <summary>
            The segment is represented by the markers placed in organized order through specific interval.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkLockMode">
            <summary>
            The lock mode of the map, either locked or not.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkMapColor">
            <summary>
            A list of named constants for some of the well-known colors.
            </summary>
            <remarks>Use Utils.ColorByName to pass this values to particular properties.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkPointShapeType">
            <summary>
            The available types of shapes for points when ShapeDrawingOptions.PointType is set to ptSymbolStandard.
            </summary>
            <remarks>The appearance of regular, cross and star shapes can be modified by 
            ShapeDrawingOptions.PointSidesCount, and ShapeDrawingOptions.PointSidesRatio properties.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkPointShapeType.ptShapeRegular">
            <summary>
            Regular shapes. 
            </summary>
            <remarks>Consist of a number of segments of equal length, equally distanced from the center and forming a closed contour. 
            For example, equilateral triangle, square, pentagon, etc.</remarks>
        </member>
        <member name="F:MapWinGIS.tkPointShapeType.ptShapeCross">
            <summary>
            Cross-like shapes.
            </summary>
            <remarks>Consists of the number of segments with varying direction which start in the center of shape. 
            The direction is changed by a constant step chosen in such way as to cover the whole circle.</remarks>
        </member>
        <member name="F:MapWinGIS.tkPointShapeType.ptShapeStar">
            <summary>
            Star like shape.
            </summary>
            <remarks>Represents stars with different number of rays.</remarks>
        </member>
        <member name="F:MapWinGIS.tkPointShapeType.ptShapeCircle">
            <summary>
            Circle shape.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkPointShapeType.ptShapeArrow">
            <summary>
            Arrow shape.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkPointShapeType.ptShapeFlag">
            <summary>
            Flag shape.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkPointSymbolType">
            <summary>
            The available types of point symbols.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkPointSymbolType.ptSymbolStandard">
            <summary>
            The shape described by tkPointShapeType enumeration can be drawn.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkPointSymbolType.ptSymbolFontCharacter">
            <summary>
            The ANSI font characters can be drawn. 
            </summary>
            \see ShapeDrawingOptions.PointCharacter.
        </member>
        <member name="F:MapWinGIS.tkPointSymbolType.ptSymbolPicture">
            <summary>
            Icons represented by instance of the image class can be drawn. 
            </summary>
            \see ShapeDrawingOptions.Picture property.
        </member>
        <member name="T:MapWinGIS.tkPointType">
            <summary>
            Deprecated. The available point types.
            </summary>
            \deprecated v4.8. Use properties which take tkDefaultPointSymbol enumeration as input instead.
        </member>
        <member name="T:MapWinGIS.tkPointReflectionType">
            <summary>
            Available options applicable to point reflection
            </summary>
            \new495 Added in version 4.9.5
        </member>
        <member name="F:MapWinGIS.tkPointReflectionType.prtNone">
            <summary>
            No reflection is applied
            </summary>
        </member>
        <member name="F:MapWinGIS.tkPointReflectionType.prtLeftToRight">
            <summary>
            Symbol is flipped left-to-right
            </summary>
        </member>
        <member name="F:MapWinGIS.tkPointReflectionType.prtTopToBottom">
            <summary>
            Symbol is flipped top-to-bottom
            </summary>
        </member>
        <member name="T:MapWinGIS.tkProjectionParameter">
            <summary>
            The available parameters for the projections.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkResizeBehavior">
            <summary>
            List the behaviours the control will use to adjust its contents after the resizing operation.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkResizeBehavior.rbWarp">
            <summary>
            The extents of the map will be kept untouched. 
            </summary>
            <remarks>This may cause distortions if the scaling factors by x and y axis aren't the same.</remarks>
        </member>
        <member name="F:MapWinGIS.tkResizeBehavior.rbKeepScale">
            <summary>
            The scale of he map will be preserved.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkSavingMode">
            <summary>
            The possible behaviours that affect the serialization and deserialization of labels (charts).
            </summary>
            See \ref labels_serialization "Serialization of labels" for additional information.
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkSavingMode.modeNone">
            <summary>
            Only the visualization settings of the labels (charts) will be serialized. The existing labels and charts won't be cleared on deserialization.  
            </summary>
        </member>
        <member name="F:MapWinGIS.tkSavingMode.modeStandard">
            <summary>
            The settings as well as positions of the labels (charts) will be serialized. 
            The existing labels and charts will be cleared on deserialization.  
            </summary>
        </member>
        <member name="F:MapWinGIS.tkSavingMode.modeXML">
            <summary>
            The settings of labels (charts) will be serialized in the large XML body, while positions will be serialized to the stand-alone .lbl file.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkSavingMode.modeDBF">
            <summary>
            The settings of labels (charts) will serialized in the large XML body, while positions will be serialized to the standard fields of dbf table.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkSavingMode.modeXMLOverwrite">
            <summary>
            The same as modeXML but .lbl file will be overwritten (in case it exists).
            </summary>
        </member>
        <member name="T:MapWinGIS.tkSelectionAppearance">
            <summary>
            Defines the possible ways to display the selected shapes of the shapefile.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkSelectionAppearance.saSelectionColor">
            <summary>
            The shapes will be highlighted by Shapefile.SelectionColor with Shapefile.SelectionTransparency setting.
            </summary>
            <remarks>This value is a default one.</remarks>
        </member>
        <member name="F:MapWinGIS.tkSelectionAppearance.saDrawingOptions">
            <summary>
            The drawing options defined by Shapefile.SelectionDrawingOptions property will be used.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkShapeDrawingMethod">
            <summary>
            Possible values that were used to setup certain aspects of drawing routines.
            </summary>
            \new48 Added in version 4.8
            \deprecated v4.8. The default value dmNewSymbology must be used in all cases.
        </member>
        <member name="F:MapWinGIS.tkShapeDrawingMethod.dmStandard">
            <summary>
            The drawing routine for 4.7 and prior versions, without shapefile categories, polygon gradients, built-in selection, etc.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapeDrawingMethod.dmNewWithSelection">
            <summary>
            The intermediate implementation between 4.7 and 4.8.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapeDrawingMethod.dmNewWithLabels">
            <summary>
            The intermediate implementation between 4.7 and 4.8.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapeDrawingMethod.dmNewSymbology">
            <summary>
            The default drawing routine for version 4.8. Uses all the latest functionality of the control.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkShapeElements">
            <summary>
            The elements of the symbology for a single shape with individual colors.
            </summary>
            <remarks>The values can be used to setup the color scheme for shapefile categories.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkShapeElements.shElementFill">
            <summary>
            The fill of polygon shapes or point symbols.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapeElements.shElementFill2">
            <summary>
            The second color of fill for polygon shapes or point symbols.
            </summary>
            <remarks>It is used when ShapeDrawingOptions.FillType = ftGradient.</remarks>
        </member>
        <member name="F:MapWinGIS.tkShapeElements.shElementLines">
            <summary>
            The outlines of polygons and point symbols or the lines of polylines.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapeElements.shElementFillBackground">
            <summary>
            The back color of fill for polygons and point symbols.
            </summary>
            <remarks>It is used when ShapeDrawingOptions.FillType = ftHatch.</remarks>
        </member>
        <member name="T:MapWinGIS.tkShapefileSourceType">
            <summary>
            Defines possible states of the Shapefile class.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkShapefileSourceType.sstUninitialized">
            <summary>
            The shapefile isn't initialized.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapefileSourceType.sstDiskBased">
            <summary>
            The instance of class is bound to particular file on disk.
            </summary>
            <remarks>See Shapefile.Filename to find out the file.</remarks>
        </member>
        <member name="F:MapWinGIS.tkShapefileSourceType.sstInMemory">
            <summary>
            The instance of class holds in-memory shapefile, which isn't bound to the file on disk.
            </summary>
            <remarks>Such shapefiles can be created by Shapefile.CreateNew method with empty string as filename argument.</remarks>
        </member>
        <member name="T:MapWinGIS.tkSpatialRelation">
            <summary>
            Defines possible spatial relations between 2 shapes.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkUnitsOfMeasure">
            <summary>
            The possible units of measure for the data being displaying on map.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkValueType">
            <summary>
            The list of data types which can be returned as a result of expression evaluation.
            </summary>
            <remarks>See Table.TestExpression for the details.</remarks> 
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkVectorDrawingMode">
            <summary>
            The drawing modes for vector data.
            </summary>
            <remarks>The enumeration is meant to setup a trade-off between performance (GDI) and the set of 
            available options (GDI+).</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkVectorDrawingMode.vdmGDI">
            <summary>
            All the elements of vector data will be drawn by GDI library.
            </summary>
            <remarks>Options like gradients or alpha blending are not supported in this mode. </remarks>
        </member>
        <member name="F:MapWinGIS.tkVectorDrawingMode.vdmGDIMixed">
            <summary>
            The lines will be drawn using GDI library, while all the rest elements - GDI+.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkVectorDrawingMode.vdmGDIPlus">
            <summary>
            All the elements of vector data will be drawn using GDI+. 
            </summary>
            <remarks>The line smoothing will be carried out in this mode only.</remarks>
        </member>
        <member name="T:MapWinGIS.tkVertexType">
            <summary>
            The types of symbols for vertices of shapes when ShapeDrawingOptions.VerticesVisible = true.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkVerticalPosition">
            <summary>
            The position of labels (charts) relative to the data layers.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="F:MapWinGIS.tkVerticalPosition.vpAboveParentLayer">
            <summary>
            Labels (charts) will be drawn immediately after the data layer.
            </summary>
            <remarks>As a result they can be covered by other data layers.</remarks>
        </member>
        <member name="F:MapWinGIS.tkVerticalPosition.vpAboveAllLayers">
            <summary>
            Labels (charts) will be drawn atop of all the data layers.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkGridSourceType">
            <summary>
            Possible datasource types for grids.
            </summary>
            \new490 Added in version 4.9.0
        </member>
        <member name="F:MapWinGIS.tkGridSourceType.gstUninitialized">
            <summary>
            No datasource was opened.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGridSourceType.gstGDALBased">
            <summary>
            GDAL-based datasource is opened.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGridSourceType.gstNative">
            <summary>
            Non-GDAL in-memory datasource is opened.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkGridProxyFormat">
            <summary>
            Possible formats for images acting as visualization proxies for grid
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkGridProxyFormat.gpfBmpProxy">
            <summary>
            BMP format
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGridProxyFormat.gpfTiffProxy">
            <summary>
            GeoTiff format
            </summary>
        </member>
        <member name="T:MapWinGIS.tkGridProxyMode">
            <summary>
            Possible behaviours for displaying grid datasource. The behaviours will be used in AxMap.AddLayer and Grid.OpenAsImage methods.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkGridProxyMode.gpmAuto">
            <summary>
            The following priorities are used:\n
            1) direct rendering if GDAL overviews are available;
            2) use of proxy image if a valid proxy already exists;\n
            3) direct rendering + overview creation if datasource is supported by GDAL;\n
            4) otherwise - proxy image will be created.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGridProxyMode.gpmUseProxy">
            <summary>
            Disk-based proxy image will be created to display a grid.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGridProxyMode.gpmNoProxy">
            <summary>
            Direct rendering will be used. If it's not possible (see Grid.CanDisplayWithoutProxy), than rendering operation will fail.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkMeasuringAction">
            <summary>
            Possible events during the measuring process.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkMeasuringAction.PointAdded">
            <summary>
            Point was add with measuring tool.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkMeasuringAction.PointRemoved">
            <summary>
            Point was removed with measuring tool.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkMeasuringAction.MesuringStopped">
            <summary>
            Measuring was stopped.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkCanDisplayGridWoProxy">
            <summary>
            Possible reasons for grids no being able to be rendered directly by Image class without creating a proxy image.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkCanDisplayGridWoProxy.cdwYes">
            <summary>
            Grid can be rendered without image proxy.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCanDisplayGridWoProxy.cdwUnsupportedFormat">
            <summary>
            Grid can not be rendered directly because the format isn't supported by GDAL.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCanDisplayGridWoProxy.cdwSizeLimitation">
            <summary>
            Grid can not be rendered directly because of the large size. This limitation is artificial to ensure
            acceptable performance. The maximum allowable size can be changed through GlobalSettings.MaxNoProxyGridSizeMb property.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkMeasuringType">
            <summary>
            Possible measuring types.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkMeasuringType.MeasureDistance">
            <summary>
            Distance is measured. Area can be measured as well in this mode by closing the path 
            on one of the previous vertices and holding Ctrl.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkMeasuringType.MeasureArea">
            <summary>
            Area is measured.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkGridSchemeRetrieval">
            <summary>
            Methods for retrieval of existing color schemes from grid.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkGridSchemeRetrieval.gsrAuto">
            <summary>
            All available retrieval methods will be executed until a first successful one is found. 
            The methods will be tried in the following order: gsrDiskBased, gsrDiskBasedForProxy, gsrGdalColorTable.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGridSchemeRetrieval.gsrDiskBased">
            <summary>
            Color scheme from accompanying .mwleg file will be read if there is any (for example, grid.mwleg).
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGridSchemeRetrieval.gsrDiskBasedForProxy">
            <summary>
            Color scheme from .mwleg file accompanying proxy image for the grid will be read if there is any (for example, grid_proxy.bmp.mwleg).
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGridSchemeRetrieval.gsrGdalColorTable">
            <summary>
            Built-in color scheme (stored in GeoTiff images, for examples) will retrieved if there is any.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkGridSchemeGeneration">
            <summary>
            Methods of generation of a new color scheme for grid.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkGridSchemeGeneration.gsgGradient">
            <summary>
            Gradient color scheme will be built.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGridSchemeGeneration.gsgUniqueValues">
            <summary>
            Unique values color scheme will be built.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkGridSchemeGeneration.gsgUniqueValuesOrGradient">
            <summary>
            Unique values color scheme will be built if there is small number of unique values (GlobalSettings.MaxUniqueValuesCountForGridScheme),
            if there are too may unique values, gradient color scheme will be built.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkTileProjection">
            <summary>
            Possible tile server projection. 
            </summary>
            <remarks>If additional projections are needed, they should be implemented in MapWinGIS code, there is 
            no way to do it in client code.</remarks>
            \new490 Added in version 4.9.0
        </member>
        <member name="F:MapWinGIS.tkTileProjection.SphericalMercator">
            <summary>
            Google Mercator, the most popular nowadays (GoogleMaps, BingMaps, OSM, etc.)
            </summary>
        </member>
        <member name="F:MapWinGIS.tkTileProjection.Amersfoort">
            <summary>
            Amersfoort projection for Netherlands.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkRedrawType">
            <summary>
            Types of map redraw. 
            </summary>
            <remarks>Types of redraws other than RedrawAll maybe useful when large datasources are loaded of when frequent updates of only specific map content is necessary.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkRedrawType.RedrawAll">
            <summary>
            All the map will be redrawn anew. Information cached in screen buffer won't be used.
            </summary>
            <remarks>Corresponds to AxMap.Redraw.</remarks>
        </member>
        <member name="F:MapWinGIS.tkRedrawType.RedrawSkipDataLayers">
            <summary>
            Data layers will be rendered from screen buffer. Everything else will be redrawn a new.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkRedrawType.RedrawSkipAllLayers">
            <summary>
            Updates shape editor and measuring tool. Data layers, drawing layers and layers in interactive editing mode will be rendered from screen buffer.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkRedrawType.RedrawMinimal">
            <summary>
            Map will be rendered from the main buffer. Only measurements and coordinate display will be rendered anew.
            </summary>
            <remarks>Corresponds to AxMap.Refresh/AxMap.Invalidate.</remarks>
        </member>
        <member name="T:MapWinGIS.tkCoordinatesDisplay">
            <summary>
            Possible coordinate formats to display current mouse cursor position on the map.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkCoordinatesDisplay.cdmNone">
            <summary>
            No coordinates will be displayed.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCoordinatesDisplay.cdmAuto">
            <summary>
            If projection is set for map - degrees, otherwise - map units.
            </summary>
            <remarks>Together with AxMap.GrabProjectionFromData this mode can be used to quickly check whether certain 
            datasource has a valid projection.</remarks>
        </member>
        <member name="F:MapWinGIS.tkCoordinatesDisplay.cdmDegrees">
            <summary>
            Current position in decimal degrees will be displayed or no coordinates at all if no projection is set for map. 
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCoordinatesDisplay.cdmMapUnits">
            <summary>
            Position in current map units will be displayed, whatever that may be: meters, miles, decimal degrees, etc.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkMapProjection">
            <summary>
            Commonly used map projections to be set in Form Designer (see AxMap.Projection property).
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkMapProjection.PROJECTION_CUSTOM">
            <summary>
            Some projection not covered by this enumeration was specified manually or taken from the data.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkMapProjection.PROJECTION_NONE">
            <summary>
            Empty projection, the initial state of map.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkMapProjection.PROJECTION_WGS84">
            <summary>
            WGS84 coordinate system (EPSG:4326, equirectangular projection will used implicitly during rendering).
            </summary>
        </member>
        <member name="F:MapWinGIS.tkMapProjection.PROJECTION_GOOGLE_MERCATOR">
            <summary>
            So called Google Mercator projection (EPSG:3857; aka Spherical Mercator) commonly used by tile servers.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkZoomBehavior">
            <summary>
            Possible zoom behaviours.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkZoomBehavior.zbDefault">
            <summary>
            Zooming is performed without binding to tile levels, which may result in scaling of tiles and certain distortions.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkZoomBehavior.zbUseTileLevels">
            <summary>
            Each zoom operation will displayed the next zoom level for tiles. This will ensure that tiles aren't scaled,
            which increases their readability and improve their general look. If no projection is set for map or tiles aren't 
            visible, default zooming will be used.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkSupportType">
            <summary>
            Type of MapWinGIS subsystems to check support for.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkSupportType.stGdal">
            <summary>
            GDAL library
            </summary>
        </member>
        <member name="T:MapWinGIS.tkFileOpenStrategy">
            <summary>
            Possible open strategies for datasources.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkFileOpenStrategy.fosNotSupported">
            <summary>
            Datasource format isn't supported and can't be opened by MapWinGIS .
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFileOpenStrategy.fosAutoDetect">
            <summary>
            Open strategy will be detected automatically. See FileManager.get_OpenStrategy for the details.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFileOpenStrategy.fosRgbImage">
            <summary>
            Datasource is opened by Image class as RGB image. 
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFileOpenStrategy.fosDirectGrid">
            <summary>
            Grid is directly rendered by Image class using so called grid rendering. Datasource must be supported by GDAL in order for this strategy to work.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFileOpenStrategy.fosProxyForGrid">
            <summary>
            Grid is displayed using a proxy image file, specifically created for visualization. This requires significant time on proxy creation but faster rendering afterwards.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFileOpenStrategy.fosVectorLayer">
            <summary>
            A single layer from vector datasource will be opened 
            (for shapefiles Shapefile class will be used; for other vector formats - OgrLayer; for multilayer datasources a first layer 
            will be returned).
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFileOpenStrategy.fosVectorDatasource">
            <summary>
            Opens vector datasource using OgrDatasource class. Should be used with multi-layer vector formats, like KML to add all layers 
            to the map with a single call.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkFieldOperationValidity">
            <summary>
            Possible state of validity flag for a field group operation.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkFieldOperationValidity.fovValid">
            <summary>
            Operation is valid.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFieldOperationValidity.fovFieldNotFound">
            <summary>
            Operation can't be performed because no such field was found in the input shapefile.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFieldOperationValidity.fovNotSupported">
            <summary>
            Operation can't performed because it's not supported for the current field type (e.g. average on string type or mode on numeric types).
            </summary>
        </member>
        <member name="T:MapWinGIS.tkFieldStatOperation">
            <summary>
            Possible statistic operations for a field during grouping of shapes.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkFieldStatOperation.fsoSum">
            <summary>
            Sum of values within group.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFieldStatOperation.fsoMin">
            <summary>
            Minimum value within group.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFieldStatOperation.fsoMax">
            <summary>
            Maximum value within group.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFieldStatOperation.fsoAvg">
            <summary>
            Average value within group (for numeric fields only).
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFieldStatOperation.fsoWeightedAvg">
            <summary>
            Weighted average value within group (for numeric fields only). 
            For polygons weighting by area is used for polylines - weighting by length, for other types - none.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkFieldStatOperation.fsoMode">
            <summary>
            Mode value (the value with the largest frequency) within group (for string fields only).
            </summary>
        </member>
        <member name="T:MapWinGIS.tkShapeValidationType">
            <summary>
            Type of shapefile validation.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkShapeValidationType.svtInput">
            <summary>
            Validation of input of certain operation.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapeValidationType.svtOutput">
            <summary>
            Validation of output of certain operation.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkShapeValidationMode">
            <summary>
            Possible validation modes for shapefiles.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkShapeValidationMode.NoValidation">
            <summary>
            No validation is performed, invalid input shapes will be processed and invalid shapes will be passed to output.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapeValidationMode.TryFixProceedOnFailure">
            <summary>
            An attempt will be made to fix invalid shapes. If fixing fails invalid shapes will be processed the same way as others.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapeValidationMode.TryFixSkipOnFailure">
            <summary>
            An attempt will be made to fix invalid shapes. If fixing fails invalid shapes will be skipped, i.e. not processed and not passed to output.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapeValidationMode.TryFixAbortOnFailure">
            <summary>
            An attempt will be made to fix invalid shapes. If fixing of at least one shape fails the whole operation will be aborted.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapeValidationMode.AbortOnErrors">
            <summary>
            The whole operation will be aborted on finding at least one invalid shape, without trying to fix it.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkShapeValidationStatus">
            <summary>
            Possible shape validation status. See also GlobalSettings.ShapeInputValidationMode, GlobalSettings.ShapeOutputValidationMode.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkShapeValidationStatus.WasntValidated">
            <summary>
            Validation wasn't performed.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapeValidationStatus.Valid">
            <summary>
            No invalid shapes were found.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapeValidationStatus.InvalidFixed">
            <summary>
            Invalid shapes were found but all of the were fixed.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapeValidationStatus.InvalidSkipped">
            <summary>
            Some invalid shapes were skipped, after their fixing failed.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapeValidationStatus.InvalidReturned">
            <summary>
            Some invalid shapes were accepted as input or passed to output after their fixing failed.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkShapeValidationStatus.OperationAborted">
            <summary>
            Operation was aborted because of invalid shapes.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkScalebarUnits">
            <summary>
            Types of units to be used by scalebar.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkScalebarUnits.Metric">
            <summary>
            Metric units (centimetres, meters, kilometres).
            </summary>
        </member>
        <member name="F:MapWinGIS.tkScalebarUnits.American">
            <summary>
            Units of American system of measurements (miles, feet).
            </summary>
        </member>
        <member name="F:MapWinGIS.tkScalebarUnits.GoogleStyle">
            <summary>
            Mixed mode, when units of both metric and American system are displayed.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkInterface">
            <summary>
            COM interfaces provided by MapWinGIS (Utils.CreateInstance can be used for creation of actual objects).
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="T:MapWinGIS.tkLocalizedStrings">
            <summary>
            GUI strings that may be localized.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkLocalizedStrings.lsHectars">
            <summary>
            Hectares for area measurement. Default = "ha".
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLocalizedStrings.lsMeters">
            <summary>
            Meters for distance measurement. Default = "m".
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLocalizedStrings.lsKilometers">
            <summary>
            Kilometres for distance measurement. Default = "km".
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLocalizedStrings.lsSquareKilometers">
            <summary>
            Square kilometres for area measurement. Default = "sq.km".
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLocalizedStrings.lsSquareMeters">
            <summary>
            Square meters for area measurement. Default = "sq.m".
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLocalizedStrings.lsMapUnits">
            <summary>
            Undefined map units. Default = "mu".
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLocalizedStrings.lsSquareMapUnits">
            <summary>
            Undefined area map units. Default value is "sq.mu".
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLocalizedStrings.lsMiles">
            <summary>
            Miles for distance measurement. Default value is "miles".
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLocalizedStrings.lsFeet">
            <summary>
            Feet for distance measurement. Default value is "feet".
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLocalizedStrings.lsLatitude">
            <summary>
            Latitude for coordinates display. Default value is "Lat".
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLocalizedStrings.lsLongitude">
            <summary>
            Longitude for coordinates display. Default value is "Lng".
            </summary>
        </member>
        <member name="T:MapWinGIS.tkTilesProjectionStatus">
            <summary>
            Lists types of relation between tiles service projection and map projection.
            </summary>
            \new491 Added in version 4.9.1
        </member>
        <member name="F:MapWinGIS.tkTilesProjectionStatus.tpsNative">
            <summary>
            Projections match. tiles can be rendered without distortions.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkTilesProjectionStatus.tpsCompatible">
            <summary>
            Projections don't match, but transformation is possible. Tiles can be rendered with certain distortions.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkTilesProjectionStatus.tpsEmptyOrInvalid">
            <summary>
            No projection is set or it is not compatible with tile service projection. Tiles can't be displayed.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkCustomState">
            <summary>
            Defines possible state of a boolean property with some default behaviour.
            </summary>
            \new492 Added in version 4.9.2
        </member>
        <member name="F:MapWinGIS.tkCustomState.csAuto">
            <summary>
            The behaviour will be selected automatically. It may differ from just true/false options.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkZoomBarVerbosity">
            <summary>
            Defines amount of information displayed via zoom bar tool tip.
            </summary>
            \new492 Added in version 4.9.2
        </member>
        <member name="F:MapWinGIS.tkZoomBarVerbosity.zbvZoomOnly">
            <summary>
            Only zoom level is displayed.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkZoomBarVerbosity.zbvFull">
            <summary>
            Zoom level, resolution and scale are displayed.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkZoomBarVerbosity.zbvNone">
            <summary>
            No tool tip is displayed.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkZoomBoxStyle">
            <summary>
            Defined possible styles of zoom box.
            </summary>
            \new492 Added in version 4.9.2
        </member>
        <member name="T:MapWinGIS.tkRasterOverviewCreation">
            <summary>
            Possible raster overview creation modes.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkRasterOverviewCreation.rocAuto">
            <summary>
            Automatic choice of overview creation. Currently the same as rocYes.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkRasterOverviewCreation.rocYes">
            <summary>
            GDAL overviews will be created.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkRasterOverviewCreation.rocNo">
            <summary>
            GDAL overviews won't be created.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkTiffCompression">
            <summary>
            Available compression modes for TIFF files provided by GDAL driver.
            </summary>
            <remarks>See more information<a href="http://www.gdal.org/frmt_gtiff.html">here</a></remarks>
            \new492 Added in version 4.9.2
        </member>
        <member name="T:MapWinGIS.tkOgrSaveType">
            <summary>
            Defines possible subjects of OgrLayer.SaveChanges method.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="F:MapWinGIS.tkOgrSaveType.ostGeometryOnly">
            <summary>
            Only shapes from associated in-memory shapefile will be saved.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkOgrSaveType.ostAttributesOnly">
            <summary>
            Only values from attribute table of associated in-memory shapefile will be saved.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkOgrSaveType.ostSaveAll">
            <summary>
            Both shapes and attributes of associated in-memory shapefile will be saved.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkOgrLayerCapability">
            <summary>
            List of capabilities that might or might not be supported by particular OGR driver.
            </summary>
            <remarks>See description <a href="http://www.gdal.org/classOGRLayer.html#aeedbda1a62f9b89b8e5f24332cf22286">here</a></remarks>.
            \new493 Added in version 4.9.3
        </member>
        <member name="T:MapWinGIS.tkOgrSaveResult">
            <summary>
            Possible results for OgrLayer.SaveChanges operation.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="F:MapWinGIS.tkOgrSaveResult.osrNoChanges">
            <summary>
            No changes were found, i.e. there is no shape records with Shapefile.get_ShapeModified property set to true
            in the underlying shapefile.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkOgrSaveResult.osrAllSaved">
            <summary>
            All shapes marked as modified were successfully saved.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkOgrSaveResult.osrSomeSaved">
            <summary>
            Some of the shapes marked as modified were successfully saved, but for some the operation has failed.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkOgrSaveResult.osrNoneSaved">
            <summary>
            None of the shapes marked as modified were saved.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkGdalDriverMetadata">
            <summary>
            Possible metadata items which can be associated with particular GDAL driver.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="T:MapWinGIS.tkOgrDSCapability">
            <summary>
            List of capabilities that might or might not be supported by particular OGR datasource.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="T:MapWinGIS.tkOgrSourceType">
            <summary>
            Possible source types for instance of OgrLayer class.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="F:MapWinGIS.tkOgrSourceType.ogrUninitialized">
            <summary>
            The instance isn't bound to any datasource, i.e. it's empty. The default state for any newly created instance.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkOgrSourceType.ogrFile">
            <summary>
            The instance is bound to particular file-based format.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkOgrSourceType.ogrDbTable">
            <summary>
            The instance is bound to a table of a spatial database.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkOgrSourceType.ogrQuery">
            <summary>
            The instance holds results of SQL query.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkOgrEncoding">
            <summary>
            Possible string encodings for OgrDatasource, OgrLayer classes.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkOgrEncoding.oseUtf8">
            <summary>
            UTF-8 encoding.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkOgrEncoding.oseAnsi">
            <summary>
            Current ANSI codepage set in the OS for non-Unicode applications.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkIdentifierMode">
            <summary>
            Possible modes for built-in cmIdentify tool.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkIdentifierMode.imAllLayers">
            <summary>
            All shapefile layers with Shapefile.Identifiable property set to true will be analyzed. 
            </summary>
        </member>
        <member name="F:MapWinGIS.tkIdentifierMode.imSingleLayer">
            <summary>
            Only shapefile defined by Identifier.ActiveLayer will be identified.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkEditorBehavior">
            <summary>
            Possible behaviors for Shape Editor.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkEditorBehavior.ebVertexEditor">
            <summary>
            User is allowed to move, add and delete vertices and move or delete the shape itself.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkEditorBehavior.ebPartEditor">
            <summary>
            User is allowed to move or delete parts of multi-part shape.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkEditorOverlay">
            <summary>
            Possible overlay operations for Shape Editor.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkEditorOverlay.eoAddPart">
            <summary>
            Adds part to the shape being edited.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkEditorOverlay.eoRemovePart">
            <summary>
            Removes parts of edited shape by arbitrary polygon.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkBufferCap">
            <summary>
            Possible types of caps for GEOS buffering.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkBufferJoin">
            <summary>
            Possible types of joins for GEOS buffering.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkCategoryValue">
            <summary>
            Possible ways to define values of shapefile category.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCategoryValue.cvSingleValue">
            <summary>
            A shape falls into category if a given field exactly matches ShapefileCategory.MinValue.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCategoryValue.cvRange">
            <summary>
            A shapes falls into category if value of a given field is in interval between
            ShapefileCategory.MinValue and ShapefileCategory.MaxValue. 
            </summary>
        </member>
        <member name="F:MapWinGIS.tkCategoryValue.cvExpression">
            <summary>
            A shape falls into category if its attribute values satisfy ShapefileCategory.Expression.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkEditorValidation">
            <summary>
            Possible validation modes for Shape Editor.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkEditorValidation.evBasic">
            <summary>
            Some basic checks will be made: shape has enough points and parts for its type, ring direction for
            polygon is correct, the first point of polygon matches the last one.
            </summary>
            <remarks>Invalid ring direction for polygon will be fixed automatically.</remarks>
        </member>
        <member name="F:MapWinGIS.tkEditorValidation.evCheckWithGeos">
            <summary>
            GEOS validation will be used in addition to basic validation but no attempt to fix errors
            will made on this stage.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkEditorValidation.evFixWithGeos">
            <summary>
            Same as evCheckWithGeos, only Shape.FixUp method will be called if GEOS validation failed.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkDeleteTarget">
            <summary>
            Elements of shapes that can be deleted during interactive editing.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkLengthDisplayMode">
            <summary>
            Possible ways to display length of segments for measuring tool and shape editor.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLengthDisplayMode.ldmMetric">
            <summary>
            Depending on length either meters or kilometers will be used.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLengthDisplayMode.ldmAmerican">
            <summary>
            Depending on length either feet or miles will be used. These units are defined according to International yard and pound agreement (1959).
            </summary>
        </member>
        <member name="T:MapWinGIS.tkEditorState">
            <summary>
            Possible editor states.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkEditorState.esNone">
            <summary>
            Editor isn't initialized.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkEditorState.esDigitize">
            <summary>
            Editor is in the process of creating a new shape which is bound to a certain shapefile.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkEditorState.esEdit">
            <summary>
            Editor is in the process of editing an exiting shape of a certain shapefile.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkEditorState.esDigitizeUnbound">
            <summary>
            Editor is in the process of creating of shape which isn't bound to particular shapefile. 
            </summary>
            <remarks> This mode is used by built-in interactive tools, cmSelectByPolygon or cmSplitByPolyline.</remarks>
        </member>
        <member name="F:MapWinGIS.tkEditorState.esOverlay">
            <summary>
            Editor is in the process of adding of an overlay for current shape (eoAddPart, eoRemovePart).
            </summary>
        </member>
        <member name="T:MapWinGIS.tkLayerSelection">
            <summary>
            Defines a set of layers to be analyzed by certain tool.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLayerSelection.lsAllLayers">
            <summary>
            All layers will be used.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLayerSelection.lsNoLayer">
            <summary>
            No layers will be used, i.e, the functionality is off.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkLayerSelection.lsActiveLayer">
            <summary>
            Only active layer will be used.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkUndoOperation">
            <summary>
            Possible types of operations in undo list of Shape Editor.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkUndoOperation.uoAddShape">
            <summary>
            Shape was added.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkUndoOperation.uoRemoveShape">
            <summary>
            Shape was removed.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkUndoOperation.uoEditShape">
            <summary>
            Shape was edited (i.e. vertices moved or deleted, parts added, etc).
            </summary>
        </member>
        <member name="F:MapWinGIS.tkUndoOperation.uoMoveShapes">
            <summary>
            A number of selected shapes were moved.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkUndoOperation.uoRotateShapes">
            <summary>
            A number of selected shapes were rotated.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkMwBoolean">
            <summary>
            Defines either true and false value.
            </summary>
            <remarks>Some erratic behavior was observed when passing VARIANT_BOOL values through dispatch interface by reference. 
            Hence this enumeration is used.</remarks>
        </member>
        <member name="T:MapWinGIS.tkBearingType">
            <summary>
            Possible ways to display bearing of lines.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkBearingType.btAbsolute">
            <summary>
            Absolute bearing (aka full circle bearing or azimuth). Calculated clockwise from the north direction. Range of values [0, 360] degrees.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkBearingType.btReducedNDE">
            <summary>
            Reduced bearing (US army definition of bearing). Absolute bearing split into 4 quadrants (NE, SE, SW, NW). 
            Calculated either from north (NE, NW quadrants) or south (SE, SW quadrants) direction. Range of values within quadrant is [0, 90] degrees.
            Displayed like "N 45.0° E".
            </summary>
        </member>
        <member name="F:MapWinGIS.tkBearingType.btReducedNED">
            <summary>
            Same as btReducedNDE, apart from a bit different format: "NE: 45.0°".
            </summary>
        </member>
        <member name="F:MapWinGIS.tkBearingType.btRelative">
            <summary>
            Relative bearing, represents clockwise angle between direction of the previous line and the next line. Range of values [-180, 180] degrees. 
            If the next line turns to the left the value is negative, to the right - positive.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkBearingType.btLeftAngle">
            <summary>
            Left inner angle formed by the previous line and next line. Range of values [0, 360] degrees. If the next line has the same direction
            as the previous one, the value is 180°.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkBearingType.btRightAngle">
            <summary>
            Right inner angle formed by the previous line and the next line. Range of values [0, 360] degrees. If the next line has the same direction
            as the previous one, the value is 180°.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkAreaDisplayMode">
            <summary>
            Possible ways to display area.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkAreaDisplayMode.admMetric">
            <summary>
            Depending on area either square meters, hectares or square kilometers will be used.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkAreaDisplayMode.admHectars">
            <summary>
            Hectares only will be used.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkAreaDisplayMode.admAmerican">
            <summary>
            Depending on area either square feet, acres or square miles will be used. 
            These units are defined according to International yard and pound agreement (1959).
            </summary>
        </member>
        <member name="T:MapWinGIS.tkAngleFormat">
            <summary>
            Possible formats to display angles.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkWmsVersion">
            <summary>
            Possible values of the version parameter for WMS requests.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkCallbackVerbosity">
            <summary>
            Possible levels of the callback verbosity.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkFunctionGroup">
            <summary>
            The function groups.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkLayerType">
            <summary>
            The layer types.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkRasterRendering">
            <summary>
            Types of rendering for GDAL raster datasource.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkRasterRendering.rrUnknown">
            <summary>
            Unknown (when no datasource is opened).
            </summary>
        </member>
        <member name="F:MapWinGIS.tkRasterRendering.rrSingleBand">
            <summary>
            Gray scale rendering based on a single band.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkRasterRendering.rrRGB">
            <summary>
            RGB rendering based on at least 3 bands with possible addition of alpha band.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkRasterRendering.rrColorScheme">
            <summary>
            Rendering based on a single band and custom color scheme.
            </summary>
        </member>
        <member name="F:MapWinGIS.tkRasterRendering.rrBuiltInColorTable">
            <summary>
            Rendering based on a single band and built-in color scheme.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkCustomDrawingFlags">
            <summary>
            A bit mask which defines custom events that will be fired during the rendering process.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkGdalDataType">
            <summary>
            GDAL data types.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkPaletteInterpretation">
            <summary>
            Possible palette interpretations for a raster datasource.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkColorInterpretation">
            <summary>
            Possible color interpretations for a raster band.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkProxyAuthentication">
            <summary>
            Types of proxy authentication.
            </summary>
        </member>
        <member name="T:MapWinGIS.tkPixelOffsetMode">
            <summary>
            Possible values of pixel offset mode (GDI+ rendering).
            </summary>
        </member>
        <member name="T:MapWinGIS.tkProjectionSet">
            <summary>
            Supports the load of subsets of Projection Strings from Utils.GetProjectionStrings.
            Can be combined to get NAD83 and/or WGS84, or the entire set.
            </summary>
        </member>
        <member name="T:MapWinGIS.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:MapWinGIS.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:MapWinGIS.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="T:MapWinGIS.IShapefile">
            <summary>
            Provides a functionality for accessing and editing ESRI shapefiles.
            </summary>
            <remarks>A class which encapsulates all the operation with ESRI shapefiles, for both file-based and in-memory mode.
            Facilitates creation, editing, querying and geoprocessing of shapefiles. Shapefile holds geometry of objects 
            (.shp and .shx part) and their attribute values (.dbf part)</remarks>
            
            Here is a diagram for the Shapefile class.
            \dot
            digraph shapefile_diagram {
            nodesep = 0.3;
            ranksep = 0.3;
            splines = ortho;
            
            node [shape= "polygon", peripheries = 3, fontname=Helvetica, fontsize=9, color = gray, style = filled, height = 0.3, width = 0.8];
            mcat [ label="ShapefileCategory" URL="\ref ShapefileCategory"];
            pnt [ label="Point" URL="\ref Point"];
            lb [ label="Label" URL="\ref Label"];
            chart [ label="Chart" URL="\ref Chart"];
            fld [ label="Field" URL="\ref Field"];
            sf [ label="Shapefile" URL="\ref Shapefile"];
            node [width = 0.6, height = 0.2]
            shp [ label="Shape" URL="\ref Shape"];
            
            node [color = tan, peripheries = 1, height = 0.3, width = 1.0];
            lst [ label="ShapefileCategories" URL="\ref ShapefileCategories"];
            tbl [ label="Table" URL="\ref Table"];
            lbs [ label="Labels" URL="\ref Labels"];
            cht [ label="Charts" URL="\ref Charts"];
            
            node [style = dashed, color = gray];
            map [ label="AxMap" URL="\ref AxMap"];
            
            edge [ dir = "none", style = solid, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060", labeldistance = 0.6 ]
            sf -> lst [ URL="\ref Shapefile.Categories", tooltip = "Shapefile.Categories", headlabel = "   1"];
            sf -> tbl [ URL="\ref Shapefile.Table", tooltip = "Shapefile.Table", headlabel = "   1"];
            sf -> lbs [ URL="\ref Shapefile.Labels", tooltip = "Shapefile.Labels", headlabel = "   1"];
            sf -> cht [ URL="\ref Shapefile.Charts", tooltip = "Shapefile.Charts", headlabel = "   1"];
            sf -> shp [ URL="\ref Shapefile.get_Shape()", tooltip = "Shapefile.get_Shape()", headlabel = "   n"];
            shp -> pnt [ URL="\ref Shape.get_Point()", tooltip = "Shapefile.get_Point()", headlabel = "   n"];
            lst -> mcat [ URL="\ref ShapefileCategories.get_Item()", tooltip = "ShapefileCategories.get_Item()", headlabel = "   n"];
            tbl -> fld [ URL="\ref Table.get_Field()", tooltip = "Table.get_Field()", headlabel = "   n"];
            lbs -> lb [ URL="\ref Labels.get_Label()", tooltip = "Labels.get_Label()", headlabel = "   n"];
            cht -> chart [ URL="\ref Charts.get_Chart()", tooltip = "Charts.get_Chart()", headlabel = "   n"];
            map -> sf [ URL="\ref AxMap.get_Shapefile()", tooltip = "AxMap.get_Shapefile()", headlabel = "   n"];
            
            }
            \enddot
            
            <a href = "diagrams.html">Graph description</a>\n\n
            Here are groups of API members for Shapefile class:
            \dotfile shapefilegroups.dot
            <a href = "diagrams.html">Graph description</a>\n\n
        </member>
        <member name="P:MapWinGIS.IShapefile.Categories">
            <summary>
            Gets or sets an instance of ShapefileCategories class associated with the shapefile. 
            </summary>
            <remarks>The property can't be set to NULL (there is always an instance ShapefileCategories class associated with the Shapefile).</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.CdlgFilter">
            <summary>
            Gets expression to be set for OpenFileDialog.Filter property to select ESRI shapefiles.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.CollisionMode">
            <summary>
            Gets or sets collision mode for point symbols for point and multi-point shapefiles.
            </summary>
            <remarks>See tkCollisionMode enumeration.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.DefaultDrawingOptions">
            <summary>
            Gets or sets an instance of ShapeDrawingOptions class which holds default drawing options. 
            </summary>
            <remarks>
            Default options are applied to every shape, which doesn't belong to a shapefile category.
            The property can't be set to NULL (there is always an instance ShapeDrawingOptions class associated with shapefile).
            </remarks>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.Deserialize(System.Boolean,System.String)">
            <summary>
            Restores the state of shapefile from the string.
            </summary>
            <param name="LoadSelection">The value which indicates whether selection state of individual shapes should be restored.</param>
            <param name="newVal">A string with state information generated by Shapefile.Serialize method.</param>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.Serialize(System.Boolean)">
            <summary>
            Saves the state of the shapefile in XML string. 
            </summary>
            <remarks>Serialization covers shapefile properties and all child classes (drawing options, labels, charts, categories). 
            Geometry of shapes and values of attribute table will not be serialized.</remarks>
            <param name="SaveSelection">The value which indicates whether selection state of individual shapes should be saved.</param>
            <returns>A string with serialized state or empty string on failure.
            Use Shapefile.ErrorMsg(Shapefile.LastErrorCode) to find out the reason of failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.Extents">
            <summary>
            Gets bounding box which encompass all the shapes in the shapefile.
            </summary>
            <remarks> When fast mode is set on, Shapefile.RefreshExtents call is needed to get the correct 
            extents after edits where made.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapefile.FileHandle">
            <summary>
            Returns the handle of the shapefile. For inner use only.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.Filename">
            <summary>
            Gets the name of the file which is used as a source for this instance of Shapefile class.
            </summary>
            <remarks>
            The property should be used for disk-based shapefiles only (see Shapefile.SourceType property).
            </remarks>
        </member>
        <member name="M:MapWinGIS.IShapefile.GenerateLabels(System.Int32,MapWinGIS.tkLabelPositioning,System.Boolean)">
            <summary>
            Generates labels for the shapefile based on values of the specified attribute.
            </summary>
            <param name="FieldIndex">The index of field in the attribute table to take the values from.</param>
            <param name="Method">The method for calculation of label positions.</param>
            <param name="LargestPartOnly">A value which indicates whether all the parts of a multi-part shape should be supplied with individual 
            labels or only the largest (longest) one.</param>
            <returns>The number of labels generated. Normally it is equal to the number of shapes.
            Labels of the multi-part shape are treated like a single label.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.Labels">
            <summary>
            Gets or sets the instance of the Labels class associated with the shapefile. 
            </summary>
            <remarks>The property can't be set to NULL (there is always an instance Labels class associated with shapefile).</remarks> 
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.Charts">
            <summary>
            Gets or sets an instance of Charts class associated with the shapefile. 
            </summary>
            <remarks>The property can't be set to NULL (there is always an instance of Charts class associated with shapefile).</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.GeoProjection">
            <summary>
            Get or sets an instance of GeoProjection class associated with the shapefile.
            </summary>
            <remarks>The property can't be set to NULL (there is always an instance of GeoProjection class associated with the shapefile).</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.GlobalCallback">
            <summary>
            Gets or sets a Callback object which handles progress and error messages of the Shapefile class.
            </summary>
            <remarks>
            It's recommended to set it in case time consuming operation will be used (geoprocessing, generation of labels, etc).
            The property is equal to NULL by default.</remarks>
            \deprecated v4.9.3 Use GlobalSettings.ApplicationCallback instead.
        </member>
        <member name="P:MapWinGIS.IShapefile.StopExecution">
            <summary>
            Sets an object which implements IStopExecution interface and facilitates stopping of the 
            geoprocessing operations.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.Key">
            <summary>
            A text string associated with the shapefile. Any value can be stored by developer in this property.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.LastErrorCode">
            <summary>
            Gets the code of last error which took place inside this object.
            </summary>
            <remarks>
            To retrieve text description of error, use Shapefile.get_ErrorMsg(Shapefile.LastErrorCode).
            Check this value if a certain method has failed.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapefile.NumShapes">
            <summary>
            Gets the number of shapes in the shapefile.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.Projection">
            <summary>
            Gets or sets the projection string for shapefile. String in proj4 and ESRI WKT formats are supported.
            </summary>
            \deprecated v 4.8 Use Shapefile.GeoProjection property instead.
        </member>
        <member name="P:MapWinGIS.IShapefile.ShapefileType">
            <summary>
            Gets the type of the shapefile.
            </summary>
            <remarks>It is not possible to change the type of the shapefile without closing it.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapefile.SourceType">
            <summary>
            Gets the value which indicate the type the data used by shapefile object.
            </summary>
            <remarks>See details in the description of tkShapefileSourceType enumeration.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.VisibilityExpression">
            <summary>
            Gets or sets the expression which defines shapes to be visible on the map.
            </summary>
            <remarks>In case of empty or invalid string all the shapes will be visible.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.get_ErrorMsg(System.Int32)">
            <summary>
            Gets the description of the specific error code.
            </summary>
            <param name="ErrorCode">The error code returned by Shapefile.LastErrorCode.</param>
            <returns>The string with the description.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.get_ShapeCategory(System.Int32)">
            <summary>
            Gets the index of the visualization category which is used for the drawing of the specified shape.
            </summary>
            <param name="ShapeIndex">The index of the shape.</param>
            <returns>The index of the category. -1 will be returned in case no category is set to the shape or 
            invalid shape index was passed.</returns>
            \see Shapefile.Categories
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.set_ShapeCategory(System.Int32,System.Int32)">
            <summary>
            Sets the index of the visualization category to use for the drawing of the specified shape.
            </summary>
            <param name="ShapeIndex">The index of the shape.</param>
            <param name="pVal">The index of the visualization category.</param>
            \see Shapefile.Categories
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.get_ShapeCategory2(System.Int32)">
            <summary>
            Get the name of the ShapefileCategory for the shape with specified index.
            </summary>
            <param name="ShapeIndex">Index of shape.</param>
            <returns>The name of the category.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShapefile.set_ShapeCategory2(System.Int32,System.String)">
            <summary>
            Sets the shapefile category for the shape.
            </summary>
            <param name="ShapeIndex">Index of shape.</param>
            <param name="categoryName">Name of the category. Category must be created first. Name comparison is case-sensitive.</param>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShapefile.get_ShapeCategory3(System.Int32)">
            <summary>
            Gets the shapefile category for the shape with specified index.
            </summary>
            <param name="ShapeIndex">Index of shape.</param>
            <returns>Shapefile category, or null if no category for the shape was set.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShapefile.set_ShapeCategory3(System.Int32,MapWinGIS.ShapefileCategory)">
            <summary>
            Sets the shapefile category for the shape.
            </summary>
            <param name="ShapeIndex">Index of shape.</param>
            <param name="Category">Shapefile category to set. The category must be added to shapefile beforehand.</param>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShapefile.get_Shape(System.Int32)">
            <summary>
            Gets the reference to the specified shape.
            </summary>
            <remarks>In the disk-based mode (Shapefile.SourceType = sstDiskBased) a new instance of the Shape class will be created
            on each call of this property which is time consuming. Try to avoid calling this property in large cycles or 
            open editing mode prior such cycles. In editing mode shape objects stored in memory, so there is no overhead in passing the 
            reference.
            </remarks>
            <param name="ShapeIndex">The index of shape to retrieve.</param>
            <returns>The reference to the shape or NULL reference on invalid index.</returns>
        </member>
        <member name="P:MapWinGIS.IShapefile.ShapefileType2D">
            <summary>
            Gets "flattened" shapefile type, i.e. Z and M components will be ignored.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IShapefile.get_ShapeRotation(System.Int32)">
            <summary>
            Gets rotation angle for a shape.
            </summary>
            <param name="ShapeIndex">Index of shape.</param>
            <returns>Angle in degrees (0-360).</returns>
            <remarks>This value will be applied for icons of point shapefiles only (ShapeDrawingOptions.PointType = ptSymbolPicture). 
            Values other then 0.0 will override ShapeDrawingOptions.PointRotation property for shapefile and categories.</remarks>
            \new492 Added in version 4.9.2
        </member>
        <member name="M:MapWinGIS.IShapefile.set_ShapeRotation(System.Int32,System.Double)">
            <summary>
            Sets rotation angle for a shape.
            </summary>
            <param name="ShapeIndex">Index of shape.</param>
            <param name="pVal">Angle in degrees (0-360).</param>
            <remarks>This value will be applied for icons of point shapefiles only (ShapeDrawingOptions.PointType = ptSymbolPicture). 
            Values other then 0.0 will override ShapeDrawingOptions.PointRotation property for shapefile and categories.</remarks>
            \new492 Added in version 4.9.2
        </member>
        <member name="M:MapWinGIS.IShapefile.get_ShapeVisible(System.Int32)">
            <summary>
            Gets visibility of shape.
            </summary>
            <param name="ShapeIndex">Index of shape.</param>
            <returns>True if shape is visible.</returns>
            <remarks>The property takes into account Shapefile.VisibilityExpression, 
            Shapefile.get_ShapeIsHidden, ShapeDrawingOptions.Visible</remarks>
            \new492 Added in version 4.9.2
        </member>
        <member name="M:MapWinGIS.IShapefile.Serialize2(System.Boolean,System.Boolean)">
            <summary>
            Serializes the state shapefile object, but not the data itself.
            </summary>
            <param name="SaveSelection">True is selection on per-shape basis should be serialized.</param>
            <param name="SerializeCategories">True if categories should be serialize on per-shape basis. 
            The option should be used when categories were applied manually with Shapefile.put_ShapeCategory.</param>
            <returns>XML string with serialized state.</returns>
            \see Shapefile.Serialize
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IShapefile.get_ShapeIsHidden(System.Int32)">
            <summary>
            Gets a value indicating whether a shape is hidden.
            </summary>
            <remarks>Even when this property is set to false, the shape may still be invisible because of other settings. 
            Use Shapefile.get_ShapeVisible to check if it will actually be displayed on the screen
             when corresponding portion of map is rendered.</remarks>
            <param name="ShapeIndex">Index of shape.</param>
            <returns>True in case shape is hidden.</returns>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IShapefile.set_ShapeIsHidden(System.Int32,System.Boolean)">
            <summary>
            When set to true prevents shape from being displayed.
            </summary>
            <remarks>This property is used internally by interactive editing tools.</remarks>
            <param name="ShapeIndex">Index of shape.</param>
            <param name="pVal">Value indicating whether the shape is hidden.</param>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapefile.Identifiable">
            <summary>
            Gets or sets a value indicating whether this shapefile will be visible to cmIdentify tool.
            </summary>
            \see AxMap.CursorMode
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IShapefile.Move(System.Double,System.Double)">
            <summary>
            Moves shapefile at specified offset.
            </summary>
            <remarks>Shapefile must be in editing mode in order for this method to succeed.</remarks>
            <param name="xOffset">X component of offset.</param>
            <param name="yOffset">Y component of offset.</param>
            <returns>True on success.</returns>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IShapefile.get_ShapeRendered(System.Int32)">
            <summary>
            Gets a value indicating whether particular shape is currently displayed on the screen.
            </summary>
            <param name="ShapeIndex"></param>
            <returns></returns>
            <remarks>This property is set during the core rendering process, therefore 
            it accounts for all possible ways for a certain shape to be hidden, like collision 
            avoidance for point symbols or dynamic visibility for categories.</remarks>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IShapefile.StopAppendMode">
            <summary>
            Stops append mode for the shapefile.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IShapefile.StartAppendMode">
            <summary>
            Starts append mode for the shapefile.
            </summary>
            <returns>True on success</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IShapefile.AppendMode">
            <summary>
            Gets a value indicating whether shapefile is in append mode. 
            Any shapes added with Shapefile.EditAddShape will be immediately written to the disk.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IShapefile.UpdateSortField">
            <summary>
            The sorting of the shapefile will be reapplied before next redraw after calling this method.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="M:MapWinGIS.IShapefile.FixUpShapes2(System.Boolean,MapWinGIS.Shapefile@)">
            <summary>
            Fixes invalid shapes in the shapefile.
            </summary>
            <param name="SelectedOnly">Only selected shapes will be fixed.</param>
            <param name="result">The resulting shapefile.</param>
            <returns>True if the operations was successful.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IShapefile.SortField">
            <summary>
            The name of the field to be used to determine the drawing order of point shapes and labels.
            </summary>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IShapefile.SortAscending">
            <summary>
            Gets or sets a value indicating whether shapes will be sorted in ascending order.
            </summary>
            \see SortField
            \new494 Added in version 4.9.4
        </member>
        <!-- Badly formed XML comment ignored for member "M:MapWinGIS.IShapefile.get_CellValue(System.Int32,System.Int32)" -->
        <member name="M:MapWinGIS.IShapefile.get_Field(System.Int32)">
            <summary>
            Gets a specific field stored in the attribute table.
            </summary>
            <param name="FieldIndex">The index of the field to be retrieved.</param>
            <returns>Reference to the field object or NULL reference on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.get_FieldByName(System.String)">
            <summary>
            Gets specific field stored in the attribute table.
            </summary>
            <param name="Fieldname">The name of the field to be retrieved. The comparison of the names is case insensitive.</param>
            <returns>Reference to the field object or NULL reference on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.EditCellValue(System.Int32,System.Int32,System.Object)">
            <summary>
            Sets the new value for particular cell in attribute table. The table must be in editing mode.
            </summary>
            <param name="FieldIndex">The index of field in attribute table.</param>
            <param name="ShapeIndex">The index of shape (row number in attribute table).</param>
            <param name="newVal">The variant value to be passed (integer, double and string values are accepted depending on field type).</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.EditDeleteField(System.Int32,MapWinGIS.ICallback)">
            <summary>
            Deletes a field with the specified index from the attribute table. The table must be in editing mode.
            </summary>
            <param name="FieldIndex">An index of field to be deleted.</param>
            <param name="cBack">An instance of class implementing ICallback interface. 
            It's recommended to pass NULL and use Shapefile.GlobalCallback property instead.</param>
            <returns>Returns true on success and false otherwise</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.EditInsertField(MapWinGIS.Field,System.Int32@,MapWinGIS.ICallback)">
            <summary>
            Inserts a new field in the shapefile attribute table. The table must be in editing mode.
            </summary>
            <param name="NewField">A new instance of field object to insert.</param>
            <param name="FieldIndex">A position to insert the new field. An invalid index will be automatically substituted with 0 or Shapefile.NumFields.</param>
            <param name="cBack">An instance of class implementing ICallback interface. 
            It's recommended to pass NULL and use Shapefile.GlobalCallback property instead.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.IShapefile.EditingTable">
            <summary>
            Gets the value indicating whether editing operations are allowed for shapefile attribute table.
            </summary>
            <remarks>Use Shapefile.StartEditingTable and Shapefile.StopEditingTable to control editing mode.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapefile.NumFields">
            <summary>
            Gets the number of fields in attribute table of the shapefile.
            </summary>
        </member>
        <member name="P:MapWinGIS.IShapefile.Table">
            <summary>
            Gets the reference to the attribute table associated with the shapefile.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapefile.StartEditingTable(MapWinGIS.ICallback)">
            <summary>
            Opens editing mode for the attribute table.
            </summary>
            <param name="cBack">A callback object to report errors and progress information.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.StopEditingTable(System.Boolean,MapWinGIS.ICallback)">
            <summary>
            Closes the editing mode for the attribute table.
            </summary>
            <param name="ApplyChanges">A boolean value which indicates whether changes made to the memory version of table should be saved to the drive.</param>
            <param name="cBack">A callback object to report errors and progress information.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.EditAddField(System.String,MapWinGIS.FieldType,System.Int32,System.Int32)">
            <summary>
            Adds a field to the attribute table of the shapefile. The table must be in editing mode.
            </summary>
            <param name="Name">The name of field.</param>
            <param name="Type">The type of field.</param>
            <param name="Precision">The precision of field.</param>
            <param name="Width">The width of field.</param>
            <returns>The index of the new field or -1 on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.get_FieldIndexByName(System.String)">
            <summary>
            Gets index of field with specified name.
            </summary>
            <param name="FieldName">Field name.</param>
            <returns>Index of field in attribute table or -1 if no such field is found.</returns>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IShapefile.EditClear">
            \addtogroup shapefile_editing Shapefile editing
            Here is a list of properties and methods which control the editing of shapefile. 
            This module is a part of the documentation of Shapefile class.
            \dot
            digraph shapefile_editing {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Shapefile" URL="\ref Shapefile"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr   [label="Editing" URL="\ref shapefile_editing"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            @{
            <summary>
            Deletes all the shapes from the shapefile.
            </summary>
            <remarks>Both shapefile and attribute table must be in editing mode for the successful operation.
            The records of attribute table will be removed as well to ensure shapefile integrity.</remarks>
            <returns>Returns true on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.EditDeleteShape(System.Int32)">
            <summary>
            Deletes a shape from the shapefile.
            </summary>
            <remarks>Both shapefile and attribute table must be in editing mode for the successful operation.
            Corresponding record will be removed from attribute table to ensure shapefile integrity.
            Indices of shapes after the deleted one will be decreased by 1 after the operation. 
            </remarks>
            <param name="ShapeIndex">The index of shape to delete.</param>
            <returns>Returns true on success and false otherwise.</returns>
            \see Shapefile.EditingShapes, Shapefile.EditingTable
        </member>
        <member name="M:MapWinGIS.IShapefile.EditInsertShape(MapWinGIS.Shape,System.Int32@)">
            <summary>
            Inserts a new shape in the shapefile.
            </summary>
            <remarks>Both shapefile and attribute table must be in editing mode for the successful operation.
            A record will be automatically added to the attribute table to ensure shapefile integrity.</remarks>
            <param name="Shape">The shape object to insert.</param>
            <param name="ShapeIndex">The index to insert the new shape at.
            An invalid index will be automatically substituted with closest allowable value without reporting the error.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="P:MapWinGIS.IShapefile.EditingShapes">
            <summary>
            Gets the value indicating whether editing operations are allowed for shapefile.
            </summary>
            <remarks>Shapefile.EditInsertShape, Shapefile.EditDeleteShape, Shapefile.EditClear are affected by this property.
            \n Use Shapefile.StartEditingShapes and Shapefile.StopEditingShapes to control the editing mode.</remarks>
        </member>
        <member name="M:MapWinGIS.IShapefile.StartEditingShapes(System.Boolean,MapWinGIS.ICallback)">
            <summary>
            Starts editing mode for the shapefile.
            </summary>
            <remarks>In case editing mode has already been opened the new call will return true which 
            is different from the behaviour of the earlier versions (before 4.8).</remarks>
            <param name="StartEditTable">A value which indicate whether or not the editing mode will be opened
            for attribute table associated with the shapefile.</param>
            <param name="cBack">A callback object to report errors and progress information.</param>
            <returns>Returns true on successful opening of the editing mode and false on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.StopEditingShapes(System.Boolean,System.Boolean,MapWinGIS.ICallback)">
            <summary>
            Stops editing modes for the shapefile and optionally saves the changes.
            </summary>
            <param name="ApplyChanges">The value which indicates whether changes made to the shapefile should be saved.</param>
            <param name="StopEditTable">The value which indicates whether editing mode for associated attribute table
            should be closed as well.</param>
            <param name="cBack">A callback object to report errors and progress information.</param>
            <returns>True on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.EditAddShape(MapWinGIS.Shape)">
            <summary>
            Adds a new shape to the shapefile.
            </summary>
            <param name="Shape">The shape to be added.</param>
            <returns>The index of the new shape or -1 on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.get_ShapeModified(System.Int32)">
            <summary>
            Gets a value indicating whether particular shape was modified after shapefile was opened.
            </summary>
            <param name="ShapeIndex">Index of shape.</param>
            <returns>The value of modified flag.</returns>
            <remarks>This property is used by OgrLayer.SaveChanges method to determine shape records
            to be updated in datasource. The flag is set to true automatically only on insertion of a new
            shape. For other types of edits (editing of vertices, editing of attributes) the flag
            must be set in the client code.</remarks>
            \new493 Added in version 4.9.3 
        </member>
        <member name="M:MapWinGIS.IShapefile.set_ShapeModified(System.Int32,System.Boolean)">
            <summary>
            Sets a value indicating whether particular shape was modified after shapefile was opened.
            </summary>
            <remarks>This property is used by OgrLayer.SaveChanges method to determine shape records
            to be updated in datasource. The flag is set to true automatically only on insertion of a new
            shape. For other types of edits (editing of vertices, editing of attributes) the flag
            must be set in the client code.</remarks>
            <param name="ShapeIndex">Index of shape.</param>
            <param name="newVal">New value of modified flag.</param>
            <returns>New value of modified flag.</returns>
            \new493 Added in version 4.9.3 
        </member>
        <member name="M:MapWinGIS.IShapefile.EditUpdateShape(System.Int32,MapWinGIS.Shape)">
            <summary>
            Substitutes shape at specified index with another instance. 
            </summary>
            <remarks>The method doesn't affect attribute table values.</remarks>
            <param name="ShapeIndex">Index of shape to substitute.</param>
            <param name="shpNew">New shape to substitute an existing one with.</param>
            <returns>True on success.</returns>
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapefile.Volatile">
            <summary>
            Gets or sets a value indicating whether shapefile can be redrawn without redrawing other layer on the map.
            </summary>
            <remarks>
            All volatile shapefiles will be placed in main screen buffer (along with drawing layers) rather than data layer buffer,
            so that their redraw can be forced with AxMap.Redraw2(tkRedrawType.RedrawSkipDataLayers). This can be recommended 
            for in-memory shapefiles with constantly changing values to ensure rendering performance.
            </remarks>
            \new492 Added in version 4.9.2
        </member>
        <member name="P:MapWinGIS.IShapefile.InteractiveEditing">
            <summary>
            Gets or sets a value indicating whether a shapefile can be edited with built-in interactive tools.
            </summary>
            <remarks>Setting the property to true will automatically call Shapefile.StartEditingShapes if 
            shapefile hasn't been loaded in the memory already. Setting it false won't call Shapefile.StopEditingShapes,
            only interactive tools will be disabled.
            Interactive editing mode automatically sets Shapefile.Volatile property to true. </remarks>
            \see ShapeEditor, AxMap.CursorMode
            \new493 Added in version 4.9.3
        </member>
        <member name="P:MapWinGIS.IShapefile.Snappable">
            <summary>
            Gets or sets a value indicating whether interactive editing tools can snap to vertices of the shapefile.
            </summary>
            \new493 Added in version 4.9.3
        </member>
        <member name="M:MapWinGIS.IShapefile.AggregateShapesWithStats(System.Boolean,System.Int32,MapWinGIS.FieldStatOperations)">
            \addtogroup shapefile_geoprocessing Shapefile geoprocessing
            Here is a list of methods to perform geoprocessing tasks using shapefile data.
            This module is a part of the documentation of Shapefile class.
            \dot
            digraph shapefile_geoprocessing {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Shapefile" URL="\ref Shapefile"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr   [label="Geoprocessing"          URL="\ref shapefile_geoprocessing"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            @{
            <summary>
            Creates a new shapefile by creating multi-part shapes from shapes with the same value of specified attribute.
            </summary>
            <remarks>See sample code in description of Shapefile.DissolveWithStats.</remarks>
            <param name="SelectedOnly">A value which indicates whether all or only selected shapes will be processed.</param>
            <param name="FieldIndex">The index of field to group shapes by.</param>
            <param name="statOperations">Statistic group operations to be calculated for fields of input shapefile
            and written to attribute table of output shapefile.</param>
            <returns>Reference to the shapefile on success or NULL reference on failure.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShapefile.DissolveWithStats(System.Int32,System.Boolean,MapWinGIS.FieldStatOperations)">
            <summary>
            Merges shapes of the input shapefile based on specified attribute.
            </summary>
            <remarks>All shapes with the same value of the attribute will be merged in a single shape.
            If the shapes aren't adjacent, then multi-part shape will be created.
            \code
             const string filename = @"d:\counties.shp";
             var sf = new Shapefile();
             if (!sf.Open(filename, null))
             {
                MessageBox.Show("Failed to open shapefile");
             }
             else
             {
                const int stateNameFieldIndex = 1;
                var operations = new FieldStatOperations();
             
                operations.AddFieldName("SUB_REGION", tkFieldStatOperation.fsoMin);
                operations.AddFieldName("sub_region", tkFieldStatOperation.fsoMax);   // casing doesn't matter
            
                operations.AddFieldName("pop1990", tkFieldStatOperation.fsoSum); 
                operations.AddFieldName("pop1990", tkFieldStatOperation.fsoAvg);  
                operations.AddFieldName("pop1990", tkFieldStatOperation.fsoWeightedAvg);
            
                var result = sf.DissolveWithStats(stateNameFieldIndex, false, operations);
                axMap1.RemoveAllLayers();
                axMap1.AddLayer(result, true);
                result.SaveAs(@"d:\dissolve_result.shp");
            }
            \endcode
            </remarks>
            <param name="FieldIndex">An index of field from attribute table of the shapefile to dissolve by.</param>
            <param name="SelectedOnly">A boolean value which indicates whether all or only selected shapes will be processed.</param>
            <param name="statOperations">Statistic group operations to be calculated for fields of input shapefile
            and written to attribute table of output shapefile.</param>
            <returns>Reference to the output shapefile or NULL reference on failure.</returns>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShapefile.AggregateShapes(System.Boolean,System.Int32)">
            <summary>
            Creates a new shapefile by creating multi-part shapes from shapes with the same value of specified attribute.
            </summary>
            <param name="SelectedOnly">A boolean value which indicates whether all or only selected shapes will be processed.</param>
            <param name="FieldIndex">The index of field to group shapes by.</param>
            <returns>Reference to the shapefile on success or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.BufferByDistance(System.Double,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            Creates a new shapefile by building a buffer around the shapes of the input shapefile.
            </summary>
            <param name="Distance">The distance to build buffer at.</param>
            <param name="nSegments">Number of segments to approximate a circular buffer.</param>
            <param name="SelectedOnly">A value which indicates whether all only selected shapes of the 
            shapefile will be processed.</param>
            <param name="MergeResults">A value which indicates whether overlapping buffered shapes
            will be merged into a single shapes.</param>
            <returns>A reference to the output shapefile or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.Clip(System.Boolean,MapWinGIS.Shapefile,System.Boolean)">
            <summary>
            Clips current shapefile by the definition shapefile.
            </summary>
            <param name="SelectedOnlySubject">A value which indicates whether all or only selected shape of this shapefile
            will be treated as input.</param>
            <param name="sfOverlay">The definition shapefile.</param>
            <param name="SelectedOnlyOverlay">A value which indicates whether all or only selected shape of the definition shapefile
            will be treated as input.</param>
            <returns>Reference to the output shapefile or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.Difference(System.Boolean,MapWinGIS.Shapefile,System.Boolean)">
            <summary>
            Calculates difference of 2 shapefiles.
            </summary>
            <param name="SelectedOnlySubject">A value which indicates whether all or only selected shape of this shapefile
            will be treated as input.</param>
            <param name="sfOverlay">The overlay shapefile.</param>
            <param name="SelectedOnlyOverlay">A value which indicates whether all or only selected shape of the overlay shapefile
            will be treated as input.</param>
            <returns>Reference to the output shapefile or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.Dissolve(System.Int32,System.Boolean)">
            <summary>
            Merges shapes of the input shapefile based on specified attribute.
            </summary>
            <remarks>All shapes with the same value of the attribute will be merged in a single shape.
            If the shapes aren't adjacent, then multi-part shape will be created.</remarks>
            <param name="FieldIndex">An index of field from attribute table of the shapefile to dissolve by.</param>
            <param name="SelectedOnly">A boolean value which indicates whether all or only selected shapes will be processed.</param>
            <returns>Reference to the output shapefile or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.ExplodeShapes(System.Boolean)">
            <summary>
            Creates a new instance of shapefile class with single-part shapes produced from the 
            multi-part shapes of the input shapefile. </summary>
            <remarks>Single-part input shapes are moved to the output shapefile 
            without changes. Attribute values are copied to the output shapefile without changes.</remarks>
            <param name="SelectedOnly">A value which indicates whether the operation will be applied to the selected shapes only.</param>
            <returns>A new instance of Shapefile class with resultant shapes or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.ExportSelection">
            <summary>
            Creates a new instance of the shapefile class and copies selected shapes of the input shapefile to it.
            </summary>
            <returns>A new instance of shapefile class with selected shapes or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.FixUpShapes(MapWinGIS.Shapefile@)">
            <summary>
            Creates a new shapefile by fixing invalid shapes of the input shapefile.
            </summary>
            <param name="retval">The output shapefile.</param>
            <returns>True on successful fixing of all shapes and false if at least one shapes wasn't fixed. </returns>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.GeometryEngine">
            <summary>
            Gets or sets the engine (library) to use for geoprocessing operations.
            </summary>
            <remarks>The following methods are affected by this property.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.GetIntersection(System.Boolean,MapWinGIS.Shapefile,System.Boolean,MapWinGIS.ShpfileType,MapWinGIS.ICallback)">
            <summary>
            Calculates intersection of 2 input shapefiles.
            </summary>
            <remarks>Intersection can generate shapes of different types. For example, the intersection of 2 polygons can be
            a polygon, a polyline, a point or any combination of those. With SHP_NULLSHAPE fileType parameter the most obvious type will be used:
            for example SHP_POLYGON for 2 polygon shapefiles.</remarks>
            <param name="SelectedOnlyOfThis">A value which indicates whether operation will be applied to the selected shapes of the current shapefile only.</param>
            <param name="sf">The second shapefile to perfrom intersection.</param>
            <param name="SelectedOnly">A value which indicates whether operation will be applied to the selected shapes of the second shapefile only.</param>
            <param name="fileType">The type of output shapefiles. SHP_NULLSHAPE value should be passed for automatic choosing of type.</param>
            <param name="cBack">An instance of class implementing ICallback interface.</param>
            <returns>Reference to the output shapefile or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.Merge(System.Boolean,MapWinGIS.Shapefile,System.Boolean)">
            <summary>
            Creates a new instance of shapefile class which holds shapes from 2 input shapefiles. 
            </summary>
            <remarks>
            Both shapefiles must have the same ShpfileType. No changes to geometry of individual shapes are made.
            Attribute values of both input shapefile will be passed to the resulting one.
            </remarks>
            <param name="SelectedOnlyThis">The value which indicates whether the operation will be applied 
            only to the selected shapes of the first shapefile.</param>
            <param name="sf">The second shapefile to take shapes from.</param>
            <param name="SelectedOnly">A value which Indicates whether the operation will be applied 
            only to the selected shapes of the second shapefile</param>
            <returns>Reference to the output shapefile or NULL reference on failure</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.Reproject(MapWinGIS.GeoProjection,System.Int32@)">
            <summary>
            Creates a new shapefile by re-projecting the current one.
            </summary>
            <param name="newProjection">The projection of the output shapefile.</param>
            <param name="reprojectedCount">The output value with the number of shapes successfully reprojected.</param>
            <returns>Reference to the output shapefile or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.ReprojectInPlace(MapWinGIS.GeoProjection,System.Int32@)">
            <summary>
            Reprojects shapes of the current shapefile.
            </summary>
            <param name="newProjection">The new projection.</param>
            <param name="reprojectedCount">The number of shapes successfully reprojected.</param>
            <returns>Returns true on success and false otherwise.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.SelectByShapefile(MapWinGIS.Shapefile,MapWinGIS.tkSpatialRelation,System.Boolean,System.Object@,MapWinGIS.ICallback)">
            <summary>
            aka SpatialQuery. Returns an array with indices of shapes of the current shapefile which 
            are in the specified relation to the definition shapefile. 
            </summary>
            <param name="sf">The definition shapefile.</param>
            <param name="Relation">The target relation between shapes of the 2 shapefiles.</param>
            <param name="SelectedOnly">The value which indicates whether only selected shapes of the definition shapefile will be used.</param>
            <param name="Result">The resulting array of long data type with shape indices.</param>
            <param name="cBack">A callback object for passing to the client 
            the information about the progress and errors.</param>
            <returns>True in case at least one shape was selected and false otherwise.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.SimplifyLines(System.Double,System.Boolean)">
            <summary>
            Creates a new shapefile by removing excessive vertices from the current shapefile
            </summary>
            <remarks>Applicable to the polyline or polygon shapefiles only.
            The initial shapefile remains intact. Attribute values are copied to the output shapefile without changes.</remarks>
            <param name="Tolerance">The minimal distance between 2 succeeding points. A succeeding point lying closer than
            this value, will be removed.</param>
            <param name="SelectedOnly">A value which indicates whether all or only selected shapes will be processed.</param>
            <returns>A reference to the output shapefile or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.Sort(System.Int32,System.Boolean)">
            <summary>
            Sorts shapes in the shapefile based on the specified attribute.
            </summary>
            <param name="FieldIndex">The index of field to set the sorting order.</param>
            <param name="Ascending">A value which defines the sorting order.</param>
            <returns>Reference to the output shapefile or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.SymmDifference(System.Boolean,MapWinGIS.Shapefile,System.Boolean)">
            <summary>
            Calculates symmetrical difference of the 2 shapefiles. 
            </summary>
            <remarks>The operation consists of 2 mirror-like Difference operations.
            Attribute values of both shapefiles are passed to the output one without changes.
            Both input shapefiles remain intact.</remarks>
            <param name="SelectedOnlySubject">A value which indicates that only selected shapes of the first shapefile will be processed.</param>
            <param name="sfOverlay">The second shapefile.</param>
            <param name="SelectedOnlyOverlay">A value which indicates that only selected shapes of the second shapefile will be processed.</param>
            <returns>A reference to the output shapefile or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.Union(System.Boolean,MapWinGIS.Shapefile,System.Boolean)">
            <summary>
            Calculates union of 2 shapefiles.
            </summary>
            <remarks>The operation consists of intersection operation and 2 mirror-like difference operations.</remarks>
            <param name="SelectedOnlySubject">The value which indicates that only selected shapes of the first shapefile will be processed.</param>
            <param name="sfOverlay">The second shapefile.</param>
            <param name="SelectedOnlyOverlay">The value which indicates that only selected shapes of the second shapefile will be processed.</param>
            <returns>A reference to the output shapefile or NULL reference on failure.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.Segmentize">
            <summary>
            Splits polylines at intersection with any other polylines. Works for polyline shapefile only.
            </summary>
            <returns>Resulting shapefile or null if the operation wasn't successful.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IShapefile.ClearCachedGeometries">
            <summary>
            Clears GEOS geometries cached during certain geoprocessing tasks.
            </summary>
            <remarks>Shapefile.GetRelatedShapes currently is the only method that uses such caching
            to improve performance if search is performed multiple times for different shapes.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShapefile.LoadDataFrom(System.String,MapWinGIS.ICallback)">
            \addtogroup shapefile_management Shapefile open and close
            Here is a list of methods which affect the state of the shapefile. 
            This module is a part of the documentation of Shapefile class.
            \dot
            digraph shapefile_management {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Shapefile" URL="\ref Shapefile"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr   [label="Management"          URL="\ref shapefile_management"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            @{
            <summary>
            Loads data into in-memory shapefile from the specified shapefile on the disk. 
            </summary>
            <param name="ShapefileName">Filename of the shapefile to load from.</param>
            <param name="cBack">Callback interface.</param>
            <returns>True on success and false otherwise.</returns>
            <remarks>The shapefile object with remain in in-memory state.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShapefile.Dump(System.String,MapWinGIS.ICallback)">
            <summary>
             Writes the contents of the shapefile to specified file. 
            </summary>
            <param name="ShapefileName">Filename to write shapefile data to.</param>
            <param name="cBack">Callback interface.</param>
            <returns>True on success and false otherwise.</returns>
            <remarks>The state of shapefile won't be affected, i.e. in-memory shapefile will remain in-memory one.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="M:MapWinGIS.IShapefile.Clone">
            <summary>Creates a copy of the shapefile.</summary>
            <remarks>Output shapefile will have the same type, projection and fields of the attribute table,
            while shapes and the records of the attribute table aren't copied.
            For complete copy of the shapefile use Shapefile.SelectAll() and Shapefile.ExportSelection().</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.Close">
            <summary>
            Closes shapefile and releases all the resources. 
            </summary>
            <remarks>In case shapefile is in editing mode (Shapefile.EditingShapes = true) 
            all the edits will be discarded.</remarks>
            <returns>This value should not be analysed.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:MapWinGIS.IShapefile.CreateNew(System.String,MapWinGIS.ShpfileType)" -->
        <member name="M:MapWinGIS.IShapefile.CreateNewWithShapeID(System.String,MapWinGIS.ShpfileType)">
            <summary>
            Initializes in-memory shapefile of the specified type with unique index field.
            </summary>
            <remarks>MWShapeID field will be added to the attribute table. An increasing unique positive integer value 
            will be set in this field for each shape added to the shapefile. The field with MWShapeID name
            created manually will be treated in the same way.</remarks>
            <param name="ShapefileName">The name of the new shapefile. An empty string should be passed here.</param>
            <param name="ShapefileType">Type of the shapefile to create.</param>
            <returns>Returns true on success and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.Open(System.String,MapWinGIS.ICallback)">
            <summary>
            Opens shapefile from the disk. 
            </summary>
            <remarks>Any other shapefile currently opened will be closed without saving the changes.
            Shapefile.SourceType property will be set to sstDiskBased.</remarks>
            <param name="ShapefileName">The name of the file to open (.shp extension).</param>
            <param name="cBack">A callback object to report errors and progress information.</param>
            <returns>True on success and false otherwise. 
            Use Shapefile.get_ErrorMsg(Shapefile.LastErrorCode) to find out the reason of failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.Resource(System.String)">
            <summary>
            Changes file associated with the current instance of the shapefile class.
            </summary>
            <remarks>It is equivalent to consequent calling of Shapefile.Close and Shapefile.Open.</remarks>
            <param name="newShpPath">The filename of the new shapefile to be opened.</param>
            <returns>True on successful opening of the new shapefile or false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.Save(MapWinGIS.ICallback)">
            <summary>
            Saves edits of the in-memory shapefile to the disk without closing editing mode.
            </summary>
            <remarks>Applicable only when Shapefile.EditingShapes = true.</remarks>
            <param name="cBack">A callback object to report errors and progress information.</param>
            <returns>True on successful saving and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.SaveAs(System.String,MapWinGIS.ICallback)">
            <summary>
            Saves in-memory shapefile to the disk.
            </summary>
            <param name="ShapefileName">The name of the file to save data in.</param>
            <param name="cBack">A callback object to report errors and progress information.</param>
            <returns>True on successful saving and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.SaveAsEx(System.String,System.Boolean,System.Boolean)">
            <summary>
            Saves shapefile to the disk.
            </summary>
            <param name="newFilename">The new filename.</param>
            <param name="stopEditing">If set to <c>true</c> the editing for shapefile will be stopped.</param>
            <param name="unboundFile">If set to <c>true</c> the file will not be assigned as a source of this instance.</param>
            <returns>True on success.</returns>
            \new494 Added in version 4.9.4
        </member>
        <member name="P:MapWinGIS.IShapefile.CacheExtents">
            \addtogroup shapefile_optimizations Shapefile optimizations
            Here is a list of properties and methods which doesn't provide additional functionality but 
            can improve the speed of certain operations with shapefile.
            This module is a part of the documentation of Shapefile class.
            \dot
            digraph shapefile_optimizations {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Shapefile" URL="\ref Shapefile"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr   [label="Optimizations"          URL="\ref shapefile_optimizations"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            @{
            <summary>
            Gets or sets a boolean value which indicates whether extents of shape will be recalculated before each redraw.
            </summary>
            <remarks>When the property is set to:
            - false: MapWinGIS recalculates the extents of each shape before the redraw assuming that some 
            changes *MIGHT* took place. The operation can slow down the drawing for large shapefiles.\n\n
            - true: MapWinGIS doesn't recalculate extents of the shapes which leads to faster drawing but also 
            makes a developer responsible for updating the extents of shapes in the due time.
            To do it one need to call Shapefile.RefreshShapeExtents after each editing operation. Otherwise
            there is a chance that old extents of the shape may lie outside the visible area of the map and the shape won't be displayed.\n
            .
            When Shapefile.FastMode is turned on the extents are cached automatically in spite of this property.
            Also the extents will be automatically refreshed after Shape.put_XY call. However
            Shape.get_Point().x = [value] call will not be tracked. Therefore Shapefile.RefreshShapeExtents will still be needed.\n
            
            To avoid confusion use the following recommendation:
            -# If you work with small shapefile and performance isn't a problem, set this property to false.\n\n
            -# If the performance is an issue:
                - if you write a new code, set this property to true (as well as Shapefile.FastMode), 
                but assign new coordinates to the points by calling Shape.put_XY only;
                - if you are bound to the exiting code with Shape.get_Point.x = [value] calls, set this property to true but call 
                Shapefile.RefreshShapeExtents after the editing operations.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.BeginPointInShapefile">
            <summary>
            Caches the coordinates of shapefile points for faster point in shape test.
            </summary>
            <remarks>Shapefile.EndPointInShapefile call is needed to release the memory.</remarks>
            <returns>True on successful caching and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.EndPointInShapefile">
            <summary>
            Clears the cached data allocated by Shapefile.BeginPointInShapefile.
            </summary>
        </member>
        <member name="M:MapWinGIS.IShapefile.PointInShape(System.Int32,System.Double,System.Double)">
            <summary>
            Returns boolean value which indicates whether the given point is located within the specified shape.
            </summary>
            <remarks>The operation is applicable for polygon shapefiles only.</remarks>
            <param name="ShapeIndex">The index shape (polygon) to perform the test.</param>
            <param name="x">X coordinate of the point.</param>
            <param name="y">Y coordinate of the point.</param>
            <returns>True in case the point is located within polygon and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.PointInShapefile(System.Double,System.Double)">
            <summary>
            Returns a number which indicates the index of shapes within which a test point is situated.
            </summary>
            <remarks>Call Shapefile.BeginPointInShapefile to improve performance.</remarks>
            <param name="x">The x coordinate of the point.</param>
            <param name="y">The y coordinate of the point.</param>
            <returns>The index of shape.</returns>
        </member>
        <member name="P:MapWinGIS.IShapefile.FastMode">
            <summary>
            Gets or sets the value which indicates whether fast mode will be used for the shapefile. 
            </summary>
            <remarks>
            The mode ensures faster drawing but makes the client responsible for the refreshing of shapefile extents
            after editing operation (see Shapefile.RefreshExtents and Shapefile.RefreshShapeExtents). It's highly recommended 
            to use the mode for large shapefiles.
            </remarks>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.MinDrawingSize">
            <summary>
            Gets or sets the value which affects the drawing of small shapes on the screen. 
            </summary>
            <remarks>
            The objects with scaled size less than this value will be drawn as a single dot. 
            This can noticeably increase performance for large shapefiles at full scale.
            But with the increase of speed the quality of drawing will be deteriorating. 
            The default value is 1.
            </remarks>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.get_numPoints(System.Int32)">
            <summary>
            Returns the number of points in the specified shape of the shapefile.
            </summary>
            <remarks>This property is more efficient than calling Shapefile.get_Shape().NumPoints.</remarks>
            <param name="ShapeIndex">The index of the shape.</param>
            <returns>The number of points or -1 in case of invalid index.</returns>
            <remarks>There is a confusion with name casing for this property. 
            It's actually spelled 'get_NumPoints' in the source code. 
            However because of the known bug in PIA generation process the property 
            ended up spelled 'get_numPoints' in earlier version of PIAs. After some hesitation we decided to keep it that way. 
            See description of the bug here: http://stackoverflow.com/questions/3179676/c-exposed-property-for-com-in-idl-is-showing-as-lower-case-all-of-a-sudden </remarks>
        </member>
        <member name="M:MapWinGIS.IShapefile.QuickExtents(System.Int32)">
            <summary>
            Returns the extents of the shape with the given index.
            </summary>
            <remarks>This operation is faster than Shapefile.get_Shape().Extents as there is no need to read all the shape data.</remarks>
            <param name="ShapeIndex">The index of the shape.</param>
            <returns>The extents of shape or NULL reference on failure.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.QuickPoint(System.Int32,System.Int32)">
            <summary>
            Returns the specified point of shape.
            </summary>
            <remarks>This operation doesn't require the reading of all shape date from disk, therefore
            it will be faster when editing mode is false.</remarks>
            <param name="ShapeIndex">The index of shape.</param>
            <param name="PointIndex">The point index.</param>
            <returns>The point or the NULL reference on the invalid index.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.QuickPoints(System.Int32,System.Int32@)">
            <summary>
            Returns an array with the coordinates of points of the specified shape.
            </summary>
            <remarks>The value specified in numPoints will be adjusted if the specified number is greater than the number of points.</remarks>
            <param name="ShapeIndex">The index of shape.</param>
            <param name="numPoints">The number of point to return.</param>
            <returns>The array of double type with coordinates of the point. 
            Every two elements represent x and y coordinate of the point respectively.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.RefreshExtents">
            <summary>
            Refreshes extents of all shapes in the shapefile.
            </summary>
            <remarks>See Shapefile.CacheExtents for the details.</remarks>
            <returns>The value can be omitted.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.RefreshShapeExtents(System.Int32)">
            <summary>
            Refreshes the extents of the particular shape in the shapefile.
            </summary>
            <remarks>See Shapefile.CacheExtents for the details.</remarks>
            <param name="ShapeId">The index of the shape which extents are to be refreshed.</param>
            <returns>True on success and false in case of invalid shape index.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.GetClosestVertex(System.Double,System.Double,System.Double,System.Int32@,System.Int32@,System.Double@)">
            \addtogroup shapefile_selection Shapefile selection
            Here is a list of properties and methods for managing shapefile selection.
            This module is a part of the documentation of Shapefile class.
            \dot
            digraph shapefile_selection {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Shapefile" URL="\ref Shapefile"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr   [label="Selection"          URL="\ref shapefile_selection"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            @{
            <summary>
            Gets the vertex closest to the specified point.
            </summary>
            <param name="x">X coordinate of the point to search from.</param>
            <param name="y">Y coordinate of the point to search from.</param>
            <param name="maxDistance">Maximum distance to search. Use 0 to search at any distance. Passing the max distance can improve performance.</param>
            <param name="ShapeIndex">Index of shape to which closest vertex belongs.</param>
            <param name="PointIndex">Index of closest vertex within shape.</param>
            <param name="Distance">The distance to the closest vertex.</param>
            <returns>True if the vertex was found within specified distance and false otherwise.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IShapefile.GetRelatedShapes(System.Int32,MapWinGIS.tkSpatialRelation,System.Object@)">
            <summary>
            Gets shapes which are located at specified spatial relation to reference shape.
            </summary>
            <param name="referenceIndex">Index of reference shape.</param>
            <param name="Relation">Spatial relation. Isn't implemented for Disjoint.</param>
            <param name="resultArray">The array of indices of the found shapes (int[])</param>
            <returns>True if at least one related shape was found.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IShapefile.GetRelatedShapes2(MapWinGIS.Shape,MapWinGIS.tkSpatialRelation,System.Object@)">
            <summary>
            Gets shapes which are located at specified spatial relation to reference shape.
            </summary>
            <param name="referenceShape">Reference shape.</param>
            <param name="Relation">Spatial relation. Isn't implemented for Disjoint.</param>
            <param name="resultArray">The array of indices of the found shapes (int[])</param>
            <returns>True if at least one related shape was found.</returns>
            \new490 Added in version 4.9.0
        </member>
        <member name="M:MapWinGIS.IShapefile.get_ShapeSelected(System.Int32)">
            <summary>
            Gets the state of selection for the specified shape
            </summary>
            <param name="ShapeIndex">The index of shape</param>
            <returns>True in case the shape is selected and false otherwise.</returns>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.set_ShapeSelected(System.Int32,System.Boolean)">
            <summary>
            Selects or deselects the specified shape
            </summary>
            <param name="ShapeIndex">The index of shape to be selected.</param>
            <param name="pVal">A value which indicates whether a shape should be selected.</param>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.InvertSelection">
            <summary>
            Inverts selection of the shapefile, i.e. selection state of every shape is changed to the opposite value.
            </summary>
            \see Shapefile.get_ShapeSelected
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.NumSelected">
            <summary>
            Gets the number of selected shapes in the shapefile.
            </summary>
            \see Shapefile.get_ShapeSelected
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.SelectAll">
            <summary>
            Selects all the shapes in the shapefile
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.SelectNone">
            <summary>
            Clears selection from all shapes.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.SelectionAppearance">
            <summary>
            Gets or sets the way shapefile selection will be displayed.
            </summary>
            <remarks>See MapWinGIS.tkSelectionAppearance for the details.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.SelectionColor">
            <summary>
            The colour of the selected shapes.
            </summary>
            <remarks>It is used when SelectionAppearance is set to saSelectionColor.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.SelectionDrawingOptions">
            <summary>
            The drawing options used for visualization of the selected shapes.
            </summary>
            <remarks>It is used when SelectionAppearance is set to saDrawingOptions.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.SelectionTransparency">
            <summary>
            Gets or sets the value which defines the transparency of the selection. 
            Values from 0 (transparent) to 255(opaque) are applicable.
            </summary>
            \new48 Added in version 4.8
        </member>
        <member name="M:MapWinGIS.IShapefile.SelectShapes(MapWinGIS.Extents,System.Double,MapWinGIS.SelectMode,System.Object@)">
            <summary>
            Returns an array with indices of shapes which are located inside specified bounds.
            </summary>
            <remarks>This method doesn't change the state of selection or visualization of shapes.</remarks>
            <param name="BoundBox">The bounding rectangular to select shapes within.</param>
            <param name="Tolerance">The value of tolerance.</param>
            <param name="SelectMode">Selection mode.</param>
            <param name="Result">An output array of long type with the indices of the shapes.</param>
            <returns>True in case at least one shape is within bounds and false otherwise.</returns>
        </member>
        <member name="M:MapWinGIS.IShapefile.get_CanUseSpatialIndex(MapWinGIS.Extents)">
            \addtogroup shapefile_spatial_index Shapefile spatial index
            Here is a list of properties and methods for managing of spatial index for a shapefile.
            This module is a part of the documentation of Shapefile class.
            \dot
            digraph shapefile_sptial_index {
            splines = true;
            node [shape= "polygon", fontname=Helvetica, fontsize=9, style = filled, color = palegreen, height = 0.3, width = 1.2];
            lb [ label="Shapefile" URL="\ref Shapefile"];
            node [shape = "ellipse", color = khaki, width = 0.2, height = 0.2, style = filled]
            gr   [label="Spatial index"          URL="\ref shapefile_spatial_index"];
            edge [ arrowhead="open", style = solid, arrowsize = 0.6, fontname = "Arial", fontsize = 9, fontcolor = blue, color = "#606060" ]
            lb -> gr;
            }
            \enddot
            <a href = "diagrams.html">Graph description</a>
            @{
            <summary>Gets the value which indicates whether spatial index will be used
            for displaying certain extents of the shapefile.</summary>
            \see SpatialIndexMaxAreaPercent
        </member>
        <member name="M:MapWinGIS.IShapefile.CreateSpatialIndex(System.String)">
            <summary>
            Creates a new spatial index
            </summary>
            <param name="ShapefileName">The name of shapefile to create spatial index for. 
            Filename of the current shapefile should be passed usually (Shapefile.Filename).</param>
            <returns></returns>
        </member>
        <member name="P:MapWinGIS.IShapefile.HasSpatialIndex">
            <summary>
            Gets the value indicating whether spatial index exists for the shapefile.
            </summary>
            <remarks>The set part of property does nothing. Use Shapefile.CreateSpatialIndex instead to create a new index.</remarks>
        </member>
        <member name="M:MapWinGIS.IShapefile.IsSpatialIndexValid">
            <summary>
            Checks the validity of the spatial index.
            </summary>
            <returns>True if the index is valid and false on its absence or incompatibility.</returns>
        </member>
        <member name="P:MapWinGIS.IShapefile.SpatialIndexMaxAreaPercent">
            <summary>
            Gets or sets the value which affects the usage of spatial index. 
            </summary>
            <remarks>Spatial index won't be used while drawing a part of shapefile larger then specified percent. 
            Spatial index ensures faster access to the shapes while a small portion of shapefile
            is being displayed. On the contrary when substantial part of shapefile is being displayed 
            spatial index can decrease the performance. This property blocks the usage of 
            spatial index when it is inefficient.</remarks>
        </member>
        <member name="P:MapWinGIS.IShapefile.UseQTree">
            <summary>
            Gets or sets a value which indicates whether built-in quad-tree spatial index should be used for shapefile.
            </summary>
            <remarks>Quad is used in editing mode only. It has nothing to do with disk based spatial index which is used by methods like Shapefile.CreateSpatialIndex.</remarks>
            \new48 Added in version 4.8
        </member>
        <member name="P:MapWinGIS.IShapefile.UseSpatialIndex">
            <summary>Gets or sets a value which indicates whether spatial index should be used
            while working with shapefile.</summary>
        </member>
        <member name="M:MapWinGIS.IShapefile.RemoveSpatialIndex">
            <summary>
            Removes spatial index associated with shapefile (.mwd and .mwx files).
            </summary>
            <returns>True on success.</returns>
            \new493 Added in version 4.9.3
        </member>
        <!-- Badly formed XML comment ignored for member "M:MapWinGIS.IShapefile.HasInvalidShapes" -->
        <member name="P:MapWinGIS.IShapefile.LastInputValidation">
            <summary>
            Gets results of input data validation for geoprocessing methods.
            </summary>
            <remarks>Use GlobalSettings.ShapeInputValidationMode to change the settings.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="P:MapWinGIS.IShapefile.LastOutputValidation">
            <summary>
            Gets results of output data validation for geoprocessing methods.
            </summary>
            <remarks>Use GlobalSettings.ShapeOutputValidationMode to change the settings.</remarks>
            \new491 Added in version 4.9.1
        </member>
        <member name="T:tkKnownExtents">
            <summary>
            List of known extents (mostly countries of the world)
            </summary>
            \new491 Added in version 4.9.1
        </member>
    </members>
</doc>
